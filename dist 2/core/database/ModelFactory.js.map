{"version":3,"file":"ModelFactory.js","sourceRoot":"","sources":["../../../src/core/database/ModelFactory.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAUjF;IAKI,YACY,KAAwB,EACxB,SAAoB,EACpB,IAAW;QAFX,UAAK,GAAL,KAAK,CAAmB;QACxB,cAAS,GAAT,SAAS,CAAW;QACpB,SAAI,GAAJ,IAAI,CAAO;QANf,eAAU,GAAG,IAAI,CAAC;IAO1B,CAAC;IAEM,SAAS,CAAC,UAAkB;QAC/B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEM,IAAI,CAAC,QAAoC;QAC5C,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;QACvB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IAEY,MAAM,CAAC,SAAiB,CAAC;;YAClC,MAAM,OAAO,GAAG,EAAS,CAAC;YAC1B,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC9B,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;gBAC/B,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBAClB,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC;oBACpC,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;gBACvC,CAAC;YACL,CAAC;YACD,EAAE,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC;YACD,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;KAAA;IAEa,KAAK;;YACf,MAAM,GAAG,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAClF,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;QACtD,CAAC;KAAA;IAEa,UAAU,CAAC,MAAW;;YAChC,GAAG,CAAC,CAAC,MAAM,SAAS,IAAI,MAAM,CAAC,CAAC,CAAC;gBAC7B,EAAE,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC;uBAC7B,OAAO,MAAM,CAAC,SAAS,CAAC,KAAK,QAAQ;uBACrC,MAAM,CAAC,SAAS,CAAC,YAAY,YAAY,CAAC,CAAC,CAAC;oBAE/C,MAAM,YAAY,GAAiB,MAAM,CAAC,SAAS,CAAC,CAAC;oBACrD,MAAM,SAAS,GAAG,MAAM,YAAY,CAAC,KAAK,EAAE,CAAC;oBAC7C,MAAM,CAAC,SAAS,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACnD,CAAC;YACL,CAAC;YACD,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;KAAA;CACJ;AAtDD,oCAsDC","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\n/**\n * core.database.ModelFactory\n * ------------------------------------------------\n */\n\nimport { BluePrint } from './BluePrint';\n\n\nexport class ModelFactory {\n\n    private identifier = 'id';\n    private eachFn: (obj: any, faker: Faker.FakerStatic) => Promise<any>;\n\n    constructor(\n        private faker: Faker.FakerStatic,\n        private blueprint: BluePrint,\n        private args: any[]) {\n    }\n\n    public returning(identifier: string): ModelFactory {\n        this.identifier = identifier;\n        return this;\n    }\n\n    public each(iterator: (obj: any) => Promise<any>): ModelFactory {\n        this.eachFn = iterator;\n        return this;\n    }\n\n    public async create(amount: number = 1): Promise<any> {\n        const results = [] as any;\n        for (let i = 0; i < amount; i++) {\n            const obj = await this.build();\n            results.push(obj);\n            if (typeof this.eachFn === 'function') {\n                await this.eachFn(obj, this.faker);\n            }\n        }\n        if (amount === 1) {\n            return results[0];\n        }\n        return results;\n    }\n\n    private async build(): Promise<any> {\n        const obj = await this.makeEntity(this.blueprint.callback(this.faker, this.args));\n        return await new this.blueprint.Model(obj).save();\n    }\n\n    private async makeEntity(entity: any): Promise<any> {\n        for (const attribute in entity) {\n            if (entity.hasOwnProperty(attribute)\n                && typeof entity[attribute] === 'object'\n                && entity[attribute] instanceof ModelFactory) {\n\n                const modelFactory: ModelFactory = entity[attribute];\n                const subEntity = await modelFactory.build();\n                entity[attribute] = subEntity[this.identifier];\n            }\n        }\n        return entity;\n    }\n}\n"]}