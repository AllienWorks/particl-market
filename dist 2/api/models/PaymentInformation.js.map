{"version":3,"file":"PaymentInformation.js","sourceRoot":"","sources":["../../../src/api/models/PaymentInformation.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAGjF,oDAAkD;AAClD,qCAAkC;AAClC,2CAAwC;AAGxC,wBAAgC,SAAQ,oBAAS,CAAC,KAAyB;IAEhE,MAAM,CAAO,SAAS,CAAC,KAAa,EAAE,cAAuB,IAAI;;YACpE,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,MAAM,kBAAkB,CAAC,KAAK,CAAqB,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC;oBAC3E,WAAW,EAAE;wBACT,QAAQ;wBACR,cAAc;wBACd,WAAW;wBACX,yBAAyB;wBACzB,iCAAiC;qBACpC;iBACJ,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,MAAM,kBAAkB,CAAC,KAAK,CAAqB,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;YACrF,CAAC;QACL,CAAC;KAAA;IAED,IAAW,SAAS,KAAa,MAAM,CAAC,sBAAsB,CAAC,CAAC,CAAC;IACjE,IAAW,aAAa,KAAc,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAEpD,IAAW,EAAE,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClD,IAAW,EAAE,CAAC,KAAa,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAEvD,IAAW,IAAI,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACtD,IAAW,IAAI,CAAC,KAAa,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAE3D,8FAA8F;IAC9F,mGAAmG;IAEnG,IAAW,SAAS,KAAW,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAW,SAAS,CAAC,KAAW,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAEnE,IAAW,SAAS,KAAW,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAW,SAAS,CAAC,KAAW,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAE5D,MAAM;QACT,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,eAAM,CAAC,CAAC;IAC/B,CAAC;IAEM,SAAS;QACZ,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAS,CAAC,CAAC;IAClC,CAAC;CAEJ;AA5CD,gDA4CC","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { Collection } from 'bookshelf';\nimport { Bookshelf } from '../../config/Database';\nimport { Escrow } from './Escrow';\nimport { ItemPrice } from './ItemPrice';\nimport { CryptocurrencyAddress } from './CryptocurrencyAddress';\n\nexport class PaymentInformation extends Bookshelf.Model<PaymentInformation> {\n\n    public static async fetchById(value: number, withRelated: boolean = true): Promise<PaymentInformation> {\n        if (withRelated) {\n            return await PaymentInformation.where<PaymentInformation>({ id: value }).fetch({\n                withRelated: [\n                    'Escrow',\n                    'Escrow.Ratio',\n                    'ItemPrice',\n                    'ItemPrice.ShippingPrice',\n                    'ItemPrice.CryptocurrencyAddress'\n                ]\n            });\n        } else {\n            return await PaymentInformation.where<PaymentInformation>({ id: value }).fetch();\n        }\n    }\n\n    public get tableName(): string { return 'payment_informations'; }\n    public get hasTimestamps(): boolean { return true; }\n\n    public get Id(): number { return this.get('id'); }\n    public set Id(value: number) { this.set('id', value); }\n\n    public get Type(): string { return this.get('type'); }\n    public set Type(value: string) { this.set('type', value); }\n\n    // public get ListingItemTemplateId(): number { return this.get('listing_item_template_id'); }\n    // public set ListingItemTemplateId(value: number) { this.set('listing_item_template_id', value); }\n\n    public get UpdatedAt(): Date { return this.get('updatedAt'); }\n    public set UpdatedAt(value: Date) { this.set('updatedAt', value); }\n\n    public get CreatedAt(): Date { return this.get('createdAt'); }\n    public set CreatedAt(value: Date) { this.set('createdAt', value); }\n\n    public Escrow(): Escrow {\n        return this.hasOne(Escrow);\n    }\n\n    public ItemPrice(): ItemPrice {\n        return this.hasOne(ItemPrice);\n    }\n\n}\n"]}