{"version":3,"file":"Bid.js","sourceRoot":"","sources":["../../../src/api/models/Bid.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { Bookshelf } from '../../config/Database';\nimport { Collection, Model } from 'bookshelf';\nimport * as _ from 'lodash';\nimport { ListingItem } from './ListingItem';\nimport { BidData } from './BidData';\nimport { BidSearchParams } from '../requests/BidSearchParams';\nimport { BidMessageType } from '../enums/BidMessageType';\nimport { SearchOrder } from '../enums/SearchOrder';\nimport { Address } from './Address';\nimport { OrderItem } from './OrderItem';\nimport { OrderStatus } from '../enums/OrderStatus';\n\nexport class Bid extends Bookshelf.Model<Bid> {\n\n    public static RELATIONS = [\n        'BidDatas',\n        'ShippingAddress',\n        'ShippingAddress.Profile',\n        'ListingItem',\n        'ListingItem.ListingItemTemplate',\n        'OrderItem',\n        'OrderItem.OrderItemObjects',\n        'OrderItem.Order'\n    ];\n\n    public static async fetchById(value: number, withRelated: boolean = true): Promise<Bid> {\n        if (withRelated) {\n            return await Bid.where<Bid>({ id: value }).fetch({\n                withRelated: this.RELATIONS\n            });\n        } else {\n            return await Bid.where<Bid>({ id: value }).fetch();\n        }\n    }\n\n    public static async search(options: BidSearchParams, withRelated: boolean = true): Promise<Collection<Bid>> {\n\n        options.ordering = options.ordering ? options.ordering : SearchOrder.ASC;\n        options.page = options.page ? options.page : 0;\n        options.pageLimit = options.pageLimit ? options.pageLimit : 10;\n\n        const bidCollection = Bid.forge<Model<Bid>>()\n            .query( qb => {\n\n                if (options.listingItemId) {\n                    qb.where('bids.listing_item_id', '=', options.listingItemId);\n                }\n\n                if (options.status\n                    && (options.status === BidMessageType.MPA_ACCEPT\n                        || options.status === BidMessageType.MPA_BID\n                        || options.status === BidMessageType.MPA_CANCEL\n                        || options.status === BidMessageType.MPA_REJECT)) {\n                    qb.where('bids.action', '=', options.status);\n                }\n\n                if (options.status\n                    && (options.status === OrderStatus.AWAITING_ESCROW\n                        || options.status === OrderStatus.COMPLETE\n                        || options.status === OrderStatus.ESCROW_LOCKED\n                        || options.status === OrderStatus.SHIPPING)) {\n                    qb.innerJoin('order_items', 'order_items.bid_id', 'bids.id');\n                    qb.where('order_items.status', '=', options.status);\n                }\n\n                if (options.searchString) {\n                    qb.innerJoin('item_informations', 'item_informations.listing_item_id', 'bids.listing_item_id');\n                    qb.where('item_informations.title', 'LIKE', '%' + options.searchString + '%')\n                        .orWhere('item_informations.short_description', 'LIKE', '%' + options.searchString + '%')\n                        .orWhere('item_informations.long_description', 'LIKE', '%' + options.searchString + '%');\n                }\n\n                if (!_.isEmpty(options.bidders)) {\n                    qb.whereIn('bids.bidder', options.bidders);\n                }\n\n            })\n            .orderBy('bids.updated_at', options.ordering)\n            .query({\n                limit: options.pageLimit,\n                offset: options.page * options.pageLimit\n            });\n\n        if (withRelated) {\n            return await bidCollection.fetchAll({\n                withRelated: this.RELATIONS\n            });\n        } else {\n            return await bidCollection.fetchAll();\n        }\n    }\n\n    public get tableName(): string { return 'bids'; }\n    public get hasTimestamps(): boolean { return true; }\n\n    public get Id(): number { return this.get('id'); }\n    public set Id(value: number) { this.set('id', value); }\n\n    public get Action(): string { return this.get('action'); }\n    public set Action(value: string) { this.set('action', value); }\n\n    public get Bidder(): string { return this.get('bidder'); }\n    public set Bidder(value: string) { this.set('bidder', value); }\n\n    public get UpdatedAt(): Date { return this.get('updatedAt'); }\n    public set UpdatedAt(value: Date) { this.set('updatedAt', value); }\n\n    public get CreatedAt(): Date { return this.get('createdAt'); }\n    public set CreatedAt(value: Date) { this.set('createdAt', value); }\n\n    public BidDatas(): Collection<BidData> {\n       return this.hasMany(BidData, 'bid_id', 'id');\n    }\n\n    public ShippingAddress(): Address {\n        return this.belongsTo(Address, 'address_id', 'id');\n    }\n\n    public OrderItem(): OrderItem {\n        return this.hasOne(OrderItem);\n    }\n\n    public ListingItem(): ListingItem {\n        return this.belongsTo(ListingItem, 'listing_item_id', 'id');\n    }\n\n}\n"]}