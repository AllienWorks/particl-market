{"version":3,"file":"CryptocurrencyAddress.js","sourceRoot":"","sources":["../../../src/api/models/CryptocurrencyAddress.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF,oDAAkD;AAClD,uCAAoC;AAGpC,2BAAmC,SAAQ,oBAAS,CAAC,KAA4B;IAEtE,MAAM,CAAO,SAAS,CAAC,KAAa,EAAE,cAAuB,IAAI;;YACpE,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,MAAM,qBAAqB,CAAC,KAAK,CAAwB,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC;oBACjF,WAAW,EAAE,EAEZ;iBACJ,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,MAAM,qBAAqB,CAAC,KAAK,CAAwB,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;YAC3F,CAAC;QACL,CAAC;KAAA;IAED,IAAW,SAAS,KAAa,MAAM,CAAC,0BAA0B,CAAC,CAAC,CAAC;IACrE,IAAW,aAAa,KAAc,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAEpD,IAAW,EAAE,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClD,IAAW,EAAE,CAAC,KAAa,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAEvD,IAAW,IAAI,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACtD,IAAW,IAAI,CAAC,KAAa,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAE3D,IAAW,OAAO,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC5D,IAAW,OAAO,CAAC,KAAa,IAAI,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAEjE,IAAW,SAAS,KAAW,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAW,SAAS,CAAC,KAAW,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAEnE,IAAW,SAAS,KAAW,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAW,SAAS,CAAC,KAAW,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAE5D,OAAO;QACV,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,iBAAO,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;CAEJ;AApCD,sDAoCC","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { Bookshelf } from '../../config/Database';\nimport { Profile } from './Profile';\n\n\nexport class CryptocurrencyAddress extends Bookshelf.Model<CryptocurrencyAddress> {\n\n    public static async fetchById(value: number, withRelated: boolean = true): Promise<CryptocurrencyAddress> {\n        if (withRelated) {\n            return await CryptocurrencyAddress.where<CryptocurrencyAddress>({ id: value }).fetch({\n                withRelated: [\n                    // 'Profile'\n                ]\n            });\n        } else {\n            return await CryptocurrencyAddress.where<CryptocurrencyAddress>({ id: value }).fetch();\n        }\n    }\n\n    public get tableName(): string { return 'cryptocurrency_addresses'; }\n    public get hasTimestamps(): boolean { return true; }\n\n    public get Id(): number { return this.get('id'); }\n    public set Id(value: number) { this.set('id', value); }\n\n    public get Type(): string { return this.get('type'); }\n    public set Type(value: string) { this.set('type', value); }\n\n    public get Address(): string { return this.get('address'); }\n    public set Address(value: string) { this.set('address', value); }\n\n    public get UpdatedAt(): Date { return this.get('updatedAt'); }\n    public set UpdatedAt(value: Date) { this.set('updatedAt', value); }\n\n    public get CreatedAt(): Date { return this.get('createdAt'); }\n    public set CreatedAt(value: Date) { this.set('createdAt', value); }\n\n    public Profile(): Profile {\n        return this.belongsTo(Profile, 'profile_id', 'id');\n    }\n\n}\n"]}