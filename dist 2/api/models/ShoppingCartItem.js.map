{"version":3,"file":"ShoppingCartItem.js","sourceRoot":"","sources":["../../../src/api/models/ShoppingCartItem.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF,oDAAkD;AAElD,iDAA8C;AAC9C,+CAA4C;AAG5C,sBAA8B,SAAQ,oBAAS,CAAC,KAAuB;IAyB5D,MAAM,CAAO,SAAS,CAAC,KAAa,EAAE,cAAuB,IAAI;;YACpE,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,MAAM,gBAAgB,CAAC,KAAK,CAAmB,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC;oBACvE,WAAW,EAAE,IAAI,CAAC,SAAS;iBAC9B,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,MAAM,gBAAgB,CAAC,KAAK,CAAmB,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;YACjF,CAAC;QACL,CAAC;KAAA;IAEM,MAAM,CAAO,6BAA6B,CAAC,MAAc,EAAE,aAAqB,EAAE,cAAuB,IAAI;;YAChH,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,MAAM,gBAAgB,CAAC,KAAK,CAAmB,EAAE,gBAAgB,EAAE,MAAM,EAAE,eAAe,EAAE,aAAa,EAAE,CAAC,CAAC,KAAK,CAAC;oBACtH,WAAW,EAAE,IAAI,CAAC,SAAS;iBAC9B,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,MAAM,gBAAgB,CAAC,KAAK,CAAmB,EAAE,gBAAgB,EAAE,MAAM,EAAE,eAAe,EAAE,aAAa,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;YAChI,CAAC;QACL,CAAC;KAAA;IAEM,MAAM,CAAO,gBAAgB,CAAC,MAAc,EAAE,cAAuB,IAAI;;YAC5E,MAAM,0BAA0B,GAAG,gBAAgB,CAAC,KAAK,EAA2B;iBAC/E,KAAK,CAAC,EAAE;gBACL,EAAE,CAAC,KAAK,CAAC,kBAAkB,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;YAC9C,CAAC,CAAC;iBACD,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAE1B,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,MAAM,0BAA0B,CAAC,QAAQ,CAAC;oBAC7C,WAAW,EAAE,IAAI,CAAC,SAAS;iBAC9B,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,MAAM,0BAA0B,CAAC,QAAQ,EAAE,CAAC;YACvD,CAAC;QACL,CAAC;KAAA;IAEM,MAAM,CAAO,SAAS,CAAC,MAAc;;YACxC,MAAM,0BAA0B,GAAG,gBAAgB,CAAC,KAAK,EAAoB;iBACxE,KAAK,CAAC,EAAE;gBACL,EAAE,CAAC,KAAK,CAAC,kBAAkB,EAAE,GAAG,EAAE,MAAM,CAAC,CAAC;YAC9C,CAAC,CAAC,CAAC;YACP,MAAM,0BAA0B,CAAC,OAAO,EAAE,CAAC;YAC3C,MAAM,CAAC;QACX,CAAC;KAAA;IAED,IAAW,SAAS,KAAa,MAAM,CAAC,oBAAoB,CAAC,CAAC,CAAC;IAC/D,IAAW,aAAa,KAAc,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAEpD,IAAW,EAAE,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClD,IAAW,EAAE,CAAC,KAAa,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAEvD,IAAW,SAAS,KAAW,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAW,SAAS,CAAC,KAAW,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAEnE,IAAW,SAAS,KAAW,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAW,SAAS,CAAC,KAAW,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAE5D,YAAY;QACf,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,2BAAY,EAAE,kBAAkB,EAAE,IAAI,CAAC,CAAC;IAClE,CAAC;IAEM,WAAW;QACd,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,yBAAW,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAChE,CAAC;;AAtFa,0BAAS,GAAG;IACtB,aAAa;IACb,6BAA6B;IAC7B,0CAA0C;IAC1C,0CAA0C;IAC1C,yDAAyD;IACzD,wCAAwC;IACxC,uDAAuD;IACvD,kDAAkD;IAClD,gCAAgC;IAChC,uCAAuC;IACvC,6CAA6C;IAC7C,0CAA0C;IAC1C,wDAAwD;IACxD,gEAAgE;IAChE,kCAAkC;IAClC,gCAAgC;IAChC,kBAAkB;IAClB,oBAAoB;IACpB,yBAAyB;IACzB,cAAc;CACjB,CAAC;AAvBN,4CAyFC","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { Bookshelf } from '../../config/Database';\nimport { Collection, Model } from 'bookshelf';\nimport { ShoppingCart } from './ShoppingCart';\nimport { ListingItem } from './ListingItem';\n\n\nexport class ShoppingCartItem extends Bookshelf.Model<ShoppingCartItem> {\n\n    public static RELATIONS = [\n        'ListingItem',\n        'ListingItem.ItemInformation',\n        'ListingItem.ItemInformation.ItemCategory',\n        'ListingItem.ItemInformation.ItemLocation',\n        'ListingItem.ItemInformation.ItemLocation.LocationMarker',\n        'ListingItem.ItemInformation.ItemImages',\n        'ListingItem.ItemInformation.ItemImages.ItemImageDatas',\n        'ListingItem.ItemInformation.ShippingDestinations',\n        'ListingItem.PaymentInformation',\n        'ListingItem.PaymentInformation.Escrow',\n        'ListingItem.PaymentInformation.Escrow.Ratio',\n        'ListingItem.PaymentInformation.ItemPrice',\n        'ListingItem.PaymentInformation.ItemPrice.ShippingPrice',\n        'ListingItem.PaymentInformation.ItemPrice.CryptocurrencyAddress',\n        'ListingItem.MessagingInformation',\n        'ListingItem.ListingItemObjects',\n        'ListingItem.Bids',\n        'ListingItem.Market',\n        'ListingItem.FlaggedItem',\n        'ShoppingCart'\n    ];\n\n    public static async fetchById(value: number, withRelated: boolean = true): Promise<ShoppingCartItem> {\n        if (withRelated) {\n            return await ShoppingCartItem.where<ShoppingCartItem>({ id: value }).fetch({\n                withRelated: this.RELATIONS\n            });\n        } else {\n            return await ShoppingCartItem.where<ShoppingCartItem>({ id: value }).fetch();\n        }\n    }\n\n    public static async fetchByCartIdAndListingItemId(cartId: number, listingItemId: number, withRelated: boolean = true): Promise<ShoppingCartItem> {\n        if (withRelated) {\n            return await ShoppingCartItem.where<ShoppingCartItem>({ shopping_cart_id: cartId, listing_item_id: listingItemId }).fetch({\n                withRelated: this.RELATIONS\n            });\n        } else {\n            return await ShoppingCartItem.where<ShoppingCartItem>({ shopping_cart_id: cartId, listing_item_id: listingItemId }).fetch();\n        }\n    }\n\n    public static async fetchAllByCartId(cartId: number, withRelated: boolean = true): Promise<Collection<ShoppingCartItem>> {\n        const ShoppingCartItemCollection = ShoppingCartItem.forge<Model<ShoppingCartItem>>()\n            .query(qb => {\n                qb.where('shopping_cart_id', '=', cartId);\n            })\n            .orderBy('id', 'ASC');\n\n        if (withRelated) {\n            return await ShoppingCartItemCollection.fetchAll({\n                withRelated: this.RELATIONS\n            });\n        } else {\n            return await ShoppingCartItemCollection.fetchAll();\n        }\n    }\n\n    public static async clearCart(cartId: number): Promise<void> {\n        const ShoppingCartItemCollection = ShoppingCartItem.forge<ShoppingCartItem>()\n            .query(qb => {\n                qb.where('shopping_cart_id', '=', cartId);\n            });\n        await ShoppingCartItemCollection.destroy();\n        return;\n    }\n\n    public get tableName(): string { return 'shopping_cart_item'; }\n    public get hasTimestamps(): boolean { return true; }\n\n    public get Id(): number { return this.get('id'); }\n    public set Id(value: number) { this.set('id', value); }\n\n    public get UpdatedAt(): Date { return this.get('updatedAt'); }\n    public set UpdatedAt(value: Date) { this.set('updatedAt', value); }\n\n    public get CreatedAt(): Date { return this.get('createdAt'); }\n    public set CreatedAt(value: Date) { this.set('createdAt', value); }\n\n    public ShoppingCart(): ShoppingCart {\n        return this.belongsTo(ShoppingCart, 'shopping_cart_id', 'id');\n    }\n\n    public ListingItem(): ListingItem {\n        return this.belongsTo(ListingItem, 'listing_item_id', 'id');\n    }\n}\n"]}