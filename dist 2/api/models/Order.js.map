{"version":3,"file":"Order.js","sourceRoot":"","sources":["../../../src/api/models/Order.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { Bookshelf } from '../../config/Database';\nimport { Collection, Model } from 'bookshelf';\nimport { OrderItem } from './OrderItem';\nimport { Address } from './Address';\nimport { SearchOrder } from '../enums/SearchOrder';\nimport { OrderSearchParams } from '../requests/OrderSearchParams';\n\nexport class Order extends Bookshelf.Model<Order> {\n\n    public static RELATIONS = [\n        'OrderItems',\n        'OrderItems.Bid',\n        'OrderItems.Bid.ListingItem',\n        'OrderItems.OrderItemObjects',\n        'OrderItems.Bid.ListingItem.ListingItemTemplate',\n        'OrderItems.Bid.ListingItem.PaymentInformation',\n        'OrderItems.Bid.ListingItem.PaymentInformation.Escrow',\n        'OrderItems.Bid.ListingItem.PaymentInformation.Escrow.Ratio',\n        'OrderItems.Bid.ShippingAddress',\n        'ShippingAddress'\n    ];\n\n    public static async fetchById(value: number, withRelated: boolean = true): Promise<Order> {\n        if (withRelated) {\n            return await Order.where<Order>({ id: value }).fetch({\n                withRelated: this.RELATIONS\n            });\n        } else {\n            return await Order.where<Order>({ id: value }).fetch();\n        }\n    }\n\n    public get tableName(): string { return 'orders'; }\n    public get hasTimestamps(): boolean { return true; }\n\n    public get Id(): number { return this.get('id'); }\n    public set Id(value: number) { this.set('id', value); }\n\n    public get Hash(): string { return this.get('hash'); }\n    public set Hash(value: string) { this.set('hash', value); }\n\n    public get Buyer(): string { return this.get('buyer'); }\n    public set Buyer(value: string) { this.set('buyer', value); }\n\n    public get Seller(): string { return this.get('seller'); }\n    public set Seller(value: string) { this.set('seller', value); }\n\n    public get UpdatedAt(): Date { return this.get('updatedAt'); }\n    public set UpdatedAt(value: Date) { this.set('updatedAt', value); }\n\n    public get CreatedAt(): Date { return this.get('createdAt'); }\n    public set CreatedAt(value: Date) { this.set('createdAt', value); }\n\n\n    public static async search(options: OrderSearchParams, withRelated: boolean = true): Promise<Collection<Order>> {\n        if (!options.ordering) {\n            options.ordering = SearchOrder.ASC;\n        }\n\n        const orderCollection = Order.forge<Model<Order>>()\n            .query( qb => {\n                qb.join('order_items', 'orders.id', 'order_items.order_id');\n                if (options.listingItemId) {\n                    qb.join('bids', 'order_items.bid_id', 'bids.id');\n                    qb.where('bids.listing_item_id', '=', options.listingItemId);\n                }\n\n                if (options.status && typeof options.status === 'string') {\n                    qb.where('order_items.status', '=', options.status);\n                }\n\n                if (options.buyerAddress && typeof options.buyerAddress === 'string') {\n                    qb.where('orders.buyer', '=', options.buyerAddress);\n                }\n\n                if (options.sellerAddress && typeof options.sellerAddress === 'string') {\n                    qb.where('orders.seller', '=', options.sellerAddress);\n                }\n            }).orderBy('orders.created_at', options.ordering);\n\n        if (withRelated) {\n            return await orderCollection.fetchAll({\n                withRelated: this.RELATIONS\n            });\n        } else {\n            return await orderCollection.fetchAll();\n        }\n    }\n\n    public OrderItems(): Collection<OrderItem> {\n        return this.hasMany(OrderItem, 'order_id', 'id');\n    }\n\n    public ShippingAddress(): Address {\n        return this.belongsTo(Address, 'address_id', 'id');\n    }\n\n}\n"]}