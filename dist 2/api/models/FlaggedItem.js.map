{"version":3,"file":"FlaggedItem.js","sourceRoot":"","sources":["../../../src/api/models/FlaggedItem.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF,oDAAkD;AAClD,+CAA4C;AAC5C,yCAAsC;AAEtC,iBAAyB,SAAQ,oBAAS,CAAC,KAAkB;IAOlD,MAAM,CAAO,SAAS,CAAC,KAAa,EAAE,cAAuB,IAAI;;YACpE,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,MAAM,WAAW,CAAC,KAAK,CAAc,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC;oBAC7D,WAAW,EAAE,IAAI,CAAC,SAAS;iBAC9B,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,MAAM,WAAW,CAAC,KAAK,CAAc,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;YACvE,CAAC;QACL,CAAC;KAAA;IAED,IAAW,SAAS,KAAa,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;IAC1D,IAAW,aAAa,KAAc,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAEpD,IAAW,EAAE,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClD,IAAW,EAAE,CAAC,KAAa,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAEvD,IAAW,MAAM,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1D,IAAW,MAAM,CAAC,KAAa,IAAI,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAE/D,IAAW,SAAS,KAAW,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAW,SAAS,CAAC,KAAW,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAEnE,IAAW,SAAS,KAAW,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAW,SAAS,CAAC,KAAW,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAE5D,WAAW;QACd,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,yBAAW,EAAE,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAChE,CAAC;IAEM,QAAQ;QACX,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,mBAAQ,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;IACzD,CAAC;;AApCa,qBAAS,GAAG;IACtB,aAAa;IACb,UAAU;CACb,CAAC;AALN,kCAwCC","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { Bookshelf } from '../../config/Database';\nimport { ListingItem } from './ListingItem';\nimport { Proposal } from './Proposal';\n\nexport class FlaggedItem extends Bookshelf.Model<FlaggedItem> {\n\n    public static RELATIONS = [\n        'ListingItem',\n        'Proposal'\n    ];\n\n    public static async fetchById(value: number, withRelated: boolean = true): Promise<FlaggedItem> {\n        if (withRelated) {\n            return await FlaggedItem.where<FlaggedItem>({ id: value }).fetch({\n                withRelated: this.RELATIONS\n            });\n        } else {\n            return await FlaggedItem.where<FlaggedItem>({ id: value }).fetch();\n        }\n    }\n\n    public get tableName(): string { return 'flagged_items'; }\n    public get hasTimestamps(): boolean { return true; }\n\n    public get Id(): number { return this.get('id'); }\n    public set Id(value: number) { this.set('id', value); }\n\n    public get Reason(): string { return this.get('reason'); }\n    public set Reason(value: string) { this.set('reason', value); }\n\n    public get UpdatedAt(): Date { return this.get('updatedAt'); }\n    public set UpdatedAt(value: Date) { this.set('updatedAt', value); }\n\n    public get CreatedAt(): Date { return this.get('createdAt'); }\n    public set CreatedAt(value: Date) { this.set('createdAt', value); }\n\n    public ListingItem(): ListingItem {\n        return this.belongsTo(ListingItem, 'listing_item_id', 'id');\n    }\n\n    public Proposal(): Proposal {\n        return this.belongsTo(Proposal, 'proposal_id', 'id');\n    }\n\n}\n"]}