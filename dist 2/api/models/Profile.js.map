{"version":3,"file":"Profile.js","sourceRoot":"","sources":["../../../src/api/models/Profile.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { Collection } from 'bookshelf';\nimport { Bookshelf } from '../../config/Database';\nimport { Address } from './Address';\nimport { FavoriteItem } from './FavoriteItem';\nimport { CryptocurrencyAddress } from './CryptocurrencyAddress';\nimport { ShoppingCart } from './ShoppingCart';\n\nexport class Profile extends Bookshelf.Model<Profile> {\n\n    public static RELATIONS = [\n        'ShippingAddresses',\n        'CryptocurrencyAddresses',\n        'FavoriteItems',\n        'ShoppingCart'\n    ];\n\n    public static async fetchById(value: number, withRelated: boolean = true): Promise<Profile> {\n        if (withRelated) {\n            return await Profile.where<Profile>({ id: value }).fetch({\n                withRelated: this.RELATIONS\n            });\n        } else {\n            return await Profile.where<Profile>({ id: value }).fetch();\n        }\n    }\n\n    public static async fetchByName(value: string, withRelated: boolean = true): Promise<Profile> {\n        if (withRelated) {\n            return await Profile.where<Profile>({ name: value }).fetch({\n                withRelated: this.RELATIONS\n            });\n        } else {\n            return await Profile.where<Profile>({ name: value }).fetch();\n        }\n    }\n\n    public static async fetchByAddress(value: string, withRelated: boolean = true): Promise<Profile> {\n        if (withRelated) {\n            return await Profile.where<Profile>({ address: value }).fetch({\n                withRelated: this.RELATIONS\n            });\n        } else {\n            return await Profile.where<Profile>({ address: value }).fetch();\n        }\n    }\n\n    public get tableName(): string { return 'profiles'; }\n    public get hasTimestamps(): boolean { return true; }\n\n    public get Id(): number { return this.get('id'); }\n    public set Id(value: number) { this.set('id', value); }\n\n    public get Name(): string { return this.get('name'); }\n    public set Name(value: string) { this.set('name', value); }\n\n    public get Address(): string { return this.get('address'); }\n    public set Address(value: string) { this.set('address', value); }\n\n    public get UpdatedAt(): Date { return this.get('updatedAt'); }\n    public set UpdatedAt(value: Date) { this.set('updatedAt', value); }\n\n    public get CreatedAt(): Date { return this.get('createdAt'); }\n    public set CreatedAt(value: Date) { this.set('createdAt', value); }\n\n    public ShippingAddresses(): Collection<Address> {\n        return this.hasMany(Address, 'profile_id', 'id');\n    }\n\n    public CryptocurrencyAddresses(): Collection<CryptocurrencyAddress> {\n        return this.hasMany(CryptocurrencyAddress, 'profile_id', 'id');\n    }\n\n    public FavoriteItems(): Collection<FavoriteItem> {\n        return this.hasMany(FavoriteItem, 'profile_id', 'id');\n    }\n\n    public ShoppingCart(): Collection<ShoppingCart> {\n        return this.hasMany(ShoppingCart, 'profile_id', 'id');\n    }\n}\n"]}