{"version":3,"file":"Escrow.js","sourceRoot":"","sources":["../../../src/api/models/Escrow.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF,oDAAkD;AAClD,+CAA4C;AAE5C,YAAoB,SAAQ,oBAAS,CAAC,KAAa;IAExC,MAAM,CAAO,SAAS,CAAC,KAAa,EAAE,cAAuB,IAAI;;YACpE,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,MAAM,MAAM,CAAC,KAAK,CAAS,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC;oBACnD,WAAW,EAAE;wBACT,OAAO;qBACV;iBACJ,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,MAAM,MAAM,CAAC,KAAK,CAAS,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;YAC7D,CAAC;QACL,CAAC;KAAA;IAED,IAAW,SAAS,KAAa,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;IACpD,IAAW,aAAa,KAAc,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAEpD,IAAW,EAAE,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClD,IAAW,EAAE,CAAC,KAAa,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAEvD,IAAW,IAAI,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACtD,IAAW,IAAI,CAAC,KAAa,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAE3D,IAAW,oBAAoB,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC;IACxF,IAAW,oBAAoB,CAAC,KAAa,IAAI,IAAI,CAAC,GAAG,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAE7F,IAAW,SAAS,KAAW,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAW,SAAS,CAAC,KAAW,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAEnE,IAAW,SAAS,KAAW,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAW,SAAS,CAAC,KAAW,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAE5D,KAAK;QACR,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,yBAAW,CAAC,CAAC;IACpC,CAAC;CACJ;AAnCD,wBAmCC","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { Bookshelf } from '../../config/Database';\nimport { EscrowRatio } from './EscrowRatio';\n\nexport class Escrow extends Bookshelf.Model<Escrow> {\n\n    public static async fetchById(value: number, withRelated: boolean = true): Promise<Escrow> {\n        if (withRelated) {\n            return await Escrow.where<Escrow>({ id: value }).fetch({\n                withRelated: [\n                    'Ratio'\n                ]\n            });\n        } else {\n            return await Escrow.where<Escrow>({ id: value }).fetch();\n        }\n    }\n\n    public get tableName(): string { return 'escrows'; }\n    public get hasTimestamps(): boolean { return true; }\n\n    public get Id(): number { return this.get('id'); }\n    public set Id(value: number) { this.set('id', value); }\n\n    public get Type(): string { return this.get('type'); }\n    public set Type(value: string) { this.set('type', value); }\n\n    public get PaymentInformationId(): string { return this.get('payment_information_id'); }\n    public set PaymentInformationId(value: string) { this.set('payment_information_id', value); }\n\n    public get UpdatedAt(): Date { return this.get('updatedAt'); }\n    public set UpdatedAt(value: Date) { this.set('updatedAt', value); }\n\n    public get CreatedAt(): Date { return this.get('createdAt'); }\n    public set CreatedAt(value: Date) { this.set('createdAt', value); }\n\n    public Ratio(): EscrowRatio {\n        return this.hasOne(EscrowRatio);\n    }\n}\n"]}