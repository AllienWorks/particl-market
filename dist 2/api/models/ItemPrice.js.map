{"version":3,"file":"ItemPrice.js","sourceRoot":"","sources":["../../../src/api/models/ItemPrice.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF,oDAAkD;AAClD,mEAAgE;AAChE,mDAAgD;AAEhD,eAAuB,SAAQ,oBAAS,CAAC,KAAgB;IAE9C,MAAM,CAAO,SAAS,CAAC,KAAa,EAAE,cAAuB,IAAI;;YACpE,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gBACd,MAAM,CAAC,MAAM,SAAS,CAAC,KAAK,CAAY,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC;oBACzD,WAAW,EAAE;wBACT,eAAe;wBACf,uBAAuB;qBAC1B;iBACJ,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,MAAM,SAAS,CAAC,KAAK,CAAY,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC;YACnE,CAAC;QACL,CAAC;KAAA;IAED,IAAW,SAAS,KAAa,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;IACxD,IAAW,aAAa,KAAc,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;IAEpD,IAAW,EAAE,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClD,IAAW,EAAE,CAAC,KAAa,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAEvD,IAAW,QAAQ,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAW,QAAQ,CAAC,KAAa,IAAI,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAEnE,IAAW,SAAS,KAAa,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAChE,IAAW,SAAS,CAAC,KAAa,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAErE,IAAW,SAAS,KAAW,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAW,SAAS,CAAC,KAAW,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAEnE,IAAW,SAAS,KAAW,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAW,SAAS,CAAC,KAAW,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAE5D,aAAa;QAChB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,6BAAa,CAAC,CAAC;IACtC,CAAC;IAEM,qBAAqB;QACxB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,6CAAqB,EAAE,2BAA2B,EAAE,IAAI,CAAC,CAAC;IACpF,CAAC;CAEJ;AAzCD,8BAyCC","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { Bookshelf } from '../../config/Database';\nimport { CryptocurrencyAddress } from './CryptocurrencyAddress';\nimport { ShippingPrice } from './ShippingPrice';\n\nexport class ItemPrice extends Bookshelf.Model<ItemPrice> {\n\n    public static async fetchById(value: number, withRelated: boolean = true): Promise<ItemPrice> {\n        if (withRelated) {\n            return await ItemPrice.where<ItemPrice>({ id: value }).fetch({\n                withRelated: [\n                    'ShippingPrice',\n                    'CryptocurrencyAddress'\n                ]\n            });\n        } else {\n            return await ItemPrice.where<ItemPrice>({ id: value }).fetch();\n        }\n    }\n\n    public get tableName(): string { return 'item_prices'; }\n    public get hasTimestamps(): boolean { return true; }\n\n    public get Id(): number { return this.get('id'); }\n    public set Id(value: number) { this.set('id', value); }\n\n    public get Currency(): string { return this.get('currency'); }\n    public set Currency(value: string) { this.set('currency', value); }\n\n    public get BasePrice(): number { return this.get('basePrice'); }\n    public set BasePrice(value: number) { this.set('basePrice', value); }\n\n    public get UpdatedAt(): Date { return this.get('updatedAt'); }\n    public set UpdatedAt(value: Date) { this.set('updatedAt', value); }\n\n    public get CreatedAt(): Date { return this.get('createdAt'); }\n    public set CreatedAt(value: Date) { this.set('createdAt', value); }\n\n    public ShippingPrice(): ShippingPrice {\n        return this.hasOne(ShippingPrice);\n    }\n\n    public CryptocurrencyAddress(): CryptocurrencyAddress {\n        return this.belongsTo(CryptocurrencyAddress, 'cryptocurrency_address_id', 'id');\n    }\n\n}\n"]}