{"version":3,"file":"ExpiredListingItemProcessor.js","sourceRoot":"","sources":["../../../src/api/messageprocessors/ExpiredListingItemProcessor.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF,yCAAuD;AAEvD,+CAA+D;AAE/D,uEAAoE;AAEpE,IAAa,2BAA2B,GAAxC;IAOI,YACmD,MAAyB,EACE,kBAAsC;QADjE,WAAM,GAAN,MAAM,CAAmB;QACE,uBAAkB,GAAlB,kBAAkB,CAAoB;QAJ5G,aAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,8BAA8B,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,+EAA+E;QAMtJ,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAGY,OAAO;;YAChB,MAAM,CAAC,MAAM,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,EAAE,CAAC;QACrE,CAAC;KAAA;IAEM,eAAe;QAClB,IAAI,CAAC,OAAO,GAAG,UAAU,CACrB;YACI,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;YACrB,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC,CAAA,EACD,IAAI,CAAC,QAAQ,CAChB,CAAC;IACN,CAAC;CACJ,CAAA;AA5BY,2BAA2B;IAQ/B,mBAAA,kBAAM,CAAC,iBAAK,CAAC,IAAI,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,gBAAI,CAAC,MAAM,CAAC,CAAA;IACtC,mBAAA,kBAAM,CAAC,iBAAK,CAAC,OAAO,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,mBAAO,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAA;qDAA6B,uCAAkB;GAT3G,2BAA2B,CA4BvC;AA5BY,kEAA2B","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { inject, multiInject, named } from 'inversify';\nimport { Logger as LoggerType } from '../../core/Logger';\nimport { Types, Core, Targets, Events } from '../../constants';\nimport { MessageProcessorInterface } from './MessageProcessorInterface';\nimport { ListingItemService } from '../services/ListingItemService';\n\nexport class ExpiredListingItemProcessor implements MessageProcessorInterface {\n\n    public log: LoggerType;\n\n    private timeout: any;\n    private interval = process.env.LISTING_ITEMS_EXPIRED_INTERVAL * 60 * 1000; // interval to delete expired listing items in milliseconds (passed by minutes)\n\n    constructor(\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType,\n        @inject(Types.Service) @named(Targets.Service.ListingItemService) private listingItemService: ListingItemService\n    ) {\n        this.log = new Logger(__filename);\n    }\n\n\n    public async process(): Promise<void> {\n        return await this.listingItemService.deleteExpiredListingItems();\n    }\n\n    public scheduleProcess(): void {\n        this.timeout = setTimeout(\n            async () => {\n                await this.process();\n                this.scheduleProcess();\n            },\n            this.interval\n        );\n    }\n}\n"]}