{"version":3,"file":"TestDataService.js","sourceRoot":"","sources":["../../../src/api/services/TestDataService.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { Bookshelf as Database } from '../../config/Database';\nimport * as Bookshelf from 'bookshelf';\nimport { inject, named } from 'inversify';\nimport { validate, request } from '../../core/api/Validate';\nimport { Logger as LoggerType } from '../../core/Logger';\nimport { Types, Core, Targets } from '../../constants';\nimport * as _ from 'lodash';\nimport * as Faker from 'faker';\nimport { MessageException } from '../exceptions/MessageException';\nimport { TestDataCreateRequest } from '../requests/TestDataCreateRequest';\nimport { ShippingCountries } from '../../core/helpers/ShippingCountries';\nimport { ShippingAvailability } from '../enums/ShippingAvailability';\nimport { MessagingProtocolType } from '../enums/MessagingProtocolType';\nimport { CryptocurrencyAddressType } from '../enums/CryptocurrencyAddressType';\nimport { ListingItemObjectType } from '../enums/ListingItemObjectType';\nimport { Currency } from '../enums/Currency';\nimport { ImageDataProtocolType } from '../enums/ImageDataProtocolType';\nimport { PaymentType } from '../enums/PaymentType';\nimport { EscrowType } from '../enums/EscrowType';\nimport { ListingItem } from '../models/ListingItem';\nimport { Profile } from '../models/Profile';\nimport { ItemCategory } from '../models/ItemCategory';\nimport { FavoriteItem } from '../models/FavoriteItem';\nimport { PaymentInformation } from '../models/PaymentInformation';\nimport { ListingItemTemplate } from '../models/ListingItemTemplate';\nimport { ListingItemService } from './ListingItemService';\nimport { ListingItemTemplateService } from './ListingItemTemplateService';\nimport { DefaultItemCategoryService } from './DefaultItemCategoryService';\nimport { DefaultProfileService } from './DefaultProfileService';\nimport { DefaultMarketService } from './DefaultMarketService';\nimport { ProfileService } from './ProfileService';\nimport { MarketService } from './MarketService';\nimport { ItemCategoryService } from './ItemCategoryService';\nimport { FavoriteItemService } from './FavoriteItemService';\nimport { ItemInformationService } from './ItemInformationService';\nimport { BidService } from './BidService';\nimport { ProposalService } from './ProposalService';\nimport { PaymentInformationService } from './PaymentInformationService';\nimport { ItemImageService } from './ItemImageService';\nimport { ActionMessageService } from './ActionMessageService';\nimport { TestDataGenerateRequest } from '../requests/TestDataGenerateRequest';\nimport { ProfileCreateRequest } from '../requests/ProfileCreateRequest';\nimport { ItemInformation } from '../models/ItemInformation';\nimport { Bid } from '../models/Bid';\nimport { ItemImage } from '../models/ItemImage';\nimport { MessageInfoCreateRequest } from '../requests/MessageInfoCreateRequest';\nimport { MessageEscrowCreateRequest } from '../requests/MessageEscrowCreateRequest';\nimport { MessageDataCreateRequest } from '../requests/MessageDataCreateRequest';\nimport { MessageObjectCreateRequest } from '../requests/MessageObjectCreateRequest';\nimport { ListingItemCreateRequest } from '../requests/ListingItemCreateRequest';\nimport { ListingItemTemplateCreateRequest } from '../requests/ListingItemTemplateCreateRequest';\nimport { ItemCategoryCreateRequest } from '../requests/ItemCategoryCreateRequest';\nimport { FavoriteItemCreateRequest } from '../requests/FavoriteItemCreateRequest';\nimport { ItemInformationCreateRequest } from '../requests/ItemInformationCreateRequest';\nimport { BidCreateRequest } from '../requests/BidCreateRequest';\nimport { PaymentInformationCreateRequest } from '../requests/PaymentInformationCreateRequest';\nimport { ItemImageCreateRequest } from '../requests/ItemImageCreateRequest';\nimport { CreatableModel } from '../enums/CreatableModel';\nimport { GenerateActionMessageParams } from '../requests/params/GenerateActionMessageParams';\nimport { GenerateListingItemTemplateParams } from '../requests/params/GenerateListingItemTemplateParams';\nimport { GenerateListingItemParams } from '../requests/params/GenerateListingItemParams';\nimport { GenerateProfileParams } from '../requests/params/GenerateProfileParams';\nimport { GenerateBidParams } from '../requests/params/GenerateBidParams';\nimport { GenerateProposalParams } from '../requests/params/GenerateProposalParams';\nimport { ImageProcessing } from '../../core/helpers/ImageProcessing';\nimport { BidMessageType } from '../enums/BidMessageType';\nimport { AddressCreateRequest } from '../requests/AddressCreateRequest';\nimport { CryptocurrencyAddressCreateRequest } from '../requests/CryptocurrencyAddressCreateRequest';\nimport { ActionMessageCreateRequest } from '../requests/ActionMessageCreateRequest';\nimport { BidDataCreateRequest } from '../requests/BidDataCreateRequest';\nimport { AddressType } from '../enums/AddressType';\nimport { ActionMessage } from '../models/ActionMessage';\nimport { CoreRpcService } from './CoreRpcService';\nimport { GenerateOrderParams } from '../requests/params/GenerateOrderParams';\nimport { OrderCreateRequest } from '../requests/OrderCreateRequest';\nimport * as resources from 'resources';\nimport { OrderService } from './OrderService';\nimport { OrderFactory } from '../factories/OrderFactory';\nimport { ProposalCreateRequest } from '../requests/ProposalCreateRequest';\nimport { ProposalOptionCreateRequest } from '../requests/ProposalOptionCreateRequest';\nimport { ItemPriceCreateRequest } from '../requests/ItemPriceCreateRequest';\nimport { EscrowCreateRequest } from '../requests/EscrowCreateRequest';\nimport { ProposalType } from '../enums/ProposalType';\nimport { VoteCreateRequest } from '../requests/VoteCreateRequest';\nimport { VoteService } from './VoteService';\nimport { VoteActionService } from './VoteActionService';\nimport { ProposalResultService } from './ProposalResultService';\nimport { ProposalOptionResultService } from './ProposalOptionResultService';\nimport { ProposalActionService } from './ProposalActionService';\nimport { ItemCategoryUpdateRequest } from '../requests/ItemCategoryUpdateRequest';\nimport { BidDataValue } from '../enums/BidDataValue';\nimport { SettingCreateRequest } from '../requests/SettingCreateRequest';\nimport { ItemVote } from '../enums/ItemVote';\nimport { Proposal } from '../models/Proposal';\nimport { ShippingDestinationCreateRequest } from '../requests/ShippingDestinationCreateRequest';\nimport { ItemLocationCreateRequest } from '../requests/ItemLocationCreateRequest';\n\nexport class TestDataService {\n\n    public log: LoggerType;\n    public ignoreTables: string[] = ['sqlite_sequence', 'version', 'version_lock', 'knex_migrations', 'knex_migrations_lock'];\n\n    constructor(\n        @inject(Types.Service) @named(Targets.Service.DefaultItemCategoryService) public defaultItemCategoryService: DefaultItemCategoryService,\n        @inject(Types.Service) @named(Targets.Service.DefaultProfileService) public defaultProfileService: DefaultProfileService,\n        @inject(Types.Service) @named(Targets.Service.DefaultMarketService) public defaultMarketService: DefaultMarketService,\n        @inject(Types.Service) @named(Targets.Service.MarketService) public marketService: MarketService,\n        @inject(Types.Service) @named(Targets.Service.ProfileService) public profileService: ProfileService,\n        @inject(Types.Service) @named(Targets.Service.ListingItemTemplateService) private listingItemTemplateService: ListingItemTemplateService,\n        @inject(Types.Service) @named(Targets.Service.ListingItemService) private listingItemService: ListingItemService,\n        @inject(Types.Service) @named(Targets.Service.ItemCategoryService) private itemCategoryService: ItemCategoryService,\n        @inject(Types.Service) @named(Targets.Service.FavoriteItemService) private favoriteItemService: FavoriteItemService,\n        @inject(Types.Service) @named(Targets.Service.ItemInformationService) private itemInformationService: ItemInformationService,\n        @inject(Types.Service) @named(Targets.Service.BidService) private bidService: BidService,\n        @inject(Types.Service) @named(Targets.Service.OrderService) private orderService: OrderService,\n        @inject(Types.Service) @named(Targets.Service.ProposalService) private proposalService: ProposalService,\n        @inject(Types.Service) @named(Targets.Service.ProposalActionService) private proposalActionService: ProposalActionService,\n        @inject(Types.Service) @named(Targets.Service.ProposalResultService) private proposalResultService: ProposalResultService,\n        @inject(Types.Service) @named(Targets.Service.ProposalOptionResultService) private proposalOptionResultService: ProposalOptionResultService,\n        @inject(Types.Service) @named(Targets.Service.VoteService) private voteService: VoteService,\n        @inject(Types.Service) @named(Targets.Service.VoteActionService) private voteActionService: VoteActionService,\n        @inject(Types.Service) @named(Targets.Service.ItemImageService) private itemImageService: ItemImageService,\n        @inject(Types.Service) @named(Targets.Service.PaymentInformationService) private paymentInformationService: PaymentInformationService,\n        @inject(Types.Service) @named(Targets.Service.ActionMessageService) private actionMessageService: ActionMessageService,\n        @inject(Types.Service) @named(Targets.Service.CoreRpcService) private coreRpcService: CoreRpcService,\n        @inject(Types.Factory) @named(Targets.Factory.OrderFactory) private orderFactory: OrderFactory,\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType\n    ) {\n        this.log = new Logger(__filename);\n    }\n\n    /**\n     * clean up the database\n     * insert the default data\n     *\n     * @param ignoreTables\n     * @param seed\n     * @returns {Promise<void>}\n     */\n    public async clean(seed: boolean = true): Promise<void> {\n\n        await this.cleanDb();\n        if (seed) {\n            this.log.debug('seeding default data after cleaning');\n            await this.defaultItemCategoryService.seedDefaultCategories();\n            await this.defaultProfileService.seedDefaultProfile();\n            await this.defaultMarketService.seedDefaultMarket();\n            this.log.info('cleanup & default seeds done.');\n            return;\n        }\n    }\n\n    /**\n     * creates testdata from json\n     *\n     * @param data\n     * @returns {Promise<ListingItem>}\n     */\n    @validate()\n    public async create<T>( @request(TestDataCreateRequest) body: TestDataCreateRequest): Promise<Bookshelf.Model<any>> {\n        switch (body.model) {\n            case CreatableModel.LISTINGITEMTEMPLATE: {\n                return await this.listingItemTemplateService.create(\n                    body.data as ListingItemTemplateCreateRequest,\n                    body.timestampedHash);\n            }\n            case CreatableModel.LISTINGITEM: {\n                return await this.listingItemService.create(body.data as ListingItemCreateRequest);\n            }\n            case CreatableModel.ACTIONMESSAGE: {\n                return await this.actionMessageService.create(body.data as ActionMessageCreateRequest);\n            }\n            case CreatableModel.PROFILE: {\n                return await this.profileService.create(body.data as ProfileCreateRequest);\n            }\n            case CreatableModel.ITEMCATEGORY: {\n                return await this.itemCategoryService.create(body.data as ItemCategoryCreateRequest);\n            }\n            case CreatableModel.FAVORITEITEM: {\n                return await this.favoriteItemService.create(body.data as FavoriteItemCreateRequest);\n            }\n            case CreatableModel.ITEMINFORMATION: {\n                return await this.itemInformationService.create(body.data as ItemInformationCreateRequest);\n            }\n            case CreatableModel.BID: {\n                return await this.bidService.create(body.data as BidCreateRequest);\n            }\n            case CreatableModel.PAYMENTINFORMATION: {\n                return await this.paymentInformationService.create(body.data as PaymentInformationCreateRequest);\n            }\n            case CreatableModel.ITEMIMAGE: {\n                return await this.itemImageService.create(body.data as ItemImageCreateRequest);\n            }\n            default: {\n                throw new MessageException('Not implemented');\n            }\n        }\n    }\n\n    /**\n     * generates testdata\n     *\n     * @param data\n     *  model - listingitemtemplate, listingitem or profile\n     *  amount - amount of models to create\n     *  withRelated - return full related model data or just id's, defaults to true\n     *  generateParams - boolean array from GenerateListingItemTemplateParams\n     *\n     * @returns {Promise<any>}\n     */\n    @validate()\n    public async generate<T>( @request(TestDataGenerateRequest) body: TestDataGenerateRequest ): Promise<any> {\n        switch (body.model) {\n            case CreatableModel.LISTINGITEMTEMPLATE: {\n                const generateParams = new GenerateListingItemTemplateParams(body.generateParams);\n                return await this.generateListingItemTemplates(body.amount, body.withRelated, generateParams);\n            }\n            case CreatableModel.ACTIONMESSAGE: {\n                const generateParams = new GenerateActionMessageParams(body.generateParams);\n                return await this.generateActionMessages(body.amount, body.withRelated, generateParams);\n            }\n            case CreatableModel.LISTINGITEM: {\n                const generateParams = new GenerateListingItemParams(body.generateParams);\n                return await this.generateListingItems(body.amount, body.withRelated, generateParams);\n            }\n            case CreatableModel.PROFILE: {\n                const generateParams = new GenerateProfileParams(body.generateParams);\n                return await this.generateProfiles(body.amount, body.withRelated, generateParams);\n            }\n            case CreatableModel.BID: {\n                const generateParams = new GenerateBidParams(body.generateParams);\n                return await this.generateBids(body.amount, body.withRelated, generateParams);\n            }\n            case CreatableModel.ORDER: {\n                const generateParams = new GenerateOrderParams(body.generateParams);\n                return await this.generateOrders(body.amount, body.withRelated, generateParams);\n            }\n            case CreatableModel.PROPOSAL: {\n                const generateParams = new GenerateProposalParams(body.generateParams);\n                return await this.generateProposals(body.amount, body.withRelated, generateParams);\n            }\n            default: {\n                throw new MessageException('Not implemented');\n            }\n        }\n    }\n\n    /**\n     * clean up the db\n     *\n     * @returns {Promise<void>}\n     */\n    private async cleanDb(): Promise<void> {\n\n        // by default ignore these\n        this.log.info('cleaning up the db, ignoring tables: ', this.ignoreTables);\n        this.log.debug('ignoreTables: ', this.ignoreTables);\n\n        const tablesToClean = [\n            'message_objects',\n            'message_infos',\n            'message_escrows',\n            'message_datas',\n            'action_messages',\n            'order_item_objects',\n            'order_items',\n            'orders',\n            'bid_datas',\n            'locked_outputs',\n            'bids',\n            'location_markers',\n            'item_locations',\n            'shipping_destinations',\n            'item_image_datas',\n            'item_images',\n            'item_informations',\n            'shipping_prices',\n            'item_prices',\n            'escrow_ratios',\n            'escrows',\n            'payment_informations',\n            'messaging_informations',\n            'listing_item_object_datas',\n            'listing_item_objects',\n            'listing_items',\n            'listing_item_templates',\n            'addresses',\n            'favorite_items',\n            'cryptocurrency_addresses',\n            'profiles',\n            'shopping_cart_item',\n            'shopping_cart',\n            'item_categories',\n            'markets',\n            'users',        // todo: not needed\n            'price_ticker', // todo: price_tickers\n            'flagged_items',\n            'currency_prices',\n            'proposal_option_results',\n            'proposal_results',\n            'proposal_options',\n            'proposals',\n            'votes',\n            'smsg_messages'\n        ];\n\n        for (const table of tablesToClean) {\n            this.log.debug('cleaning table: ', table);\n            await Database.knex.select().from(table).del();\n        }\n        return;\n    }\n\n    private async getTableNames(knex: any): Promise<any> {\n        return await knex.raw(\"SELECT name FROM sqlite_master WHERE type='table';\");\n    }\n\n    // -------------------\n    // listingitemtemplates\n\n    private async generateListingItemTemplates(\n        amount: number, withRelated: boolean = true,\n        generateParams: GenerateListingItemTemplateParams):\n    Promise<resources.ListingItemTemplate[]> {\n\n        const items: resources.ListingItemTemplate[] = [];\n        for (let i = amount; i > 0; i--) {\n            const listingItemTemplateCreateRequest = await this.generateListingItemTemplateData(generateParams);\n\n            // this.log.debug('listingItemTemplateCreateRequest:', JSON.stringify(listingItemTemplateCreateRequest, null, 2));\n\n            let listingItemTemplateModel = await this.listingItemTemplateService.create(listingItemTemplateCreateRequest);\n            let result = listingItemTemplateModel.toJSON();\n\n            // generate a ListingItem with the same data\n            if (generateParams.generateListingItem) {\n\n                let market: resources.Market;\n                if (generateParams.marketId === null) {\n                    const marketModel = await this.marketService.getDefault();\n                    market = marketModel.toJSON();\n                } else {\n                    const marketModel = await this.marketService.findOne(generateParams.marketId);\n                    market = marketModel.toJSON();\n                }\n\n                const listingItemCreateRequest = {\n                    seller: result.Profile.address,\n                    market_id: market.id,\n                    listing_item_template_id: result.id,\n                    itemInformation: listingItemTemplateCreateRequest.itemInformation,\n                    paymentInformation: listingItemTemplateCreateRequest.paymentInformation,\n                    messagingInformation: listingItemTemplateCreateRequest.messagingInformation,\n                    listingItemObjects: listingItemTemplateCreateRequest.listingItemObjects,\n                    expiryTime: 10,\n                    postedAt: new Date().getTime(),\n                    expiredAt: new Date().getTime() + 60 * 1000 * 60 * 24 * 10,\n                    receivedAt: new Date().getTime()\n                } as ListingItemCreateRequest;\n\n\n                const listingItemModel = await this.listingItemService.create(listingItemCreateRequest);\n                const listingItem = listingItemModel.toJSON();\n                // this.log.debug('listingItem:', JSON.stringify(listingItem, null, 2));\n\n                // fetch new relation\n                listingItemTemplateModel = await this.listingItemTemplateService.findOne(result.id);\n                result = listingItemTemplateModel.toJSON();\n\n            }\n            items.push(result);\n        }\n        return this.generateResponse(items, withRelated);\n    }\n\n    // -------------------\n    // listingitems\n\n    private async generateListingItems(\n        amount: number, withRelated: boolean = true,\n        generateParams: GenerateListingItemParams):\n    Promise<resources.ListingItem[]> {\n\n        this.log.debug('generateListingItems start');\n        const items: resources.ListingItem[] = [];\n        for (let i = amount; i > 0; i--) {\n\n            const listingItemCreateRequest = await this.generateListingItemData(generateParams);\n\n            // TODO: actionmessage generation should be configurable\n            // const fromAddress = await this.coreRpcService.getNewAddress();\n            const marketModel = await this.marketService.getDefault();\n            const market = marketModel.toJSON();\n\n            this.log.debug('create listingitem start');\n            const savedListingItemModel = await this.listingItemService.create(listingItemCreateRequest);\n            this.log.debug('create listingitem end');\n\n            // this.log.debug('savedListingItem: ', savedListingItem.toJSON());\n            const result = savedListingItemModel.toJSON();\n            items.push(result);\n\n        }\n        // this.log.debug('items: ', items);\n\n        this.log.debug('generateListingItems end');\n\n        return await this.generateResponse(items, withRelated);\n    }\n\n    // -------------------\n    // bids\n    private async generateBids(\n        amount: number, withRelated: boolean = true, generateParams: GenerateBidParams):\n    Promise<resources.Bid[]> {\n\n        this.log.debug('generateBids, generateParams: ', generateParams);\n\n        const listingItemTemplateGenerateParams = new GenerateListingItemTemplateParams();\n        const listingItemGenerateParams = new GenerateListingItemParams();\n\n        let listingItemTemplate: resources.ListingItemTemplate;\n        let listingItem: resources.ListingItem;\n\n        // generate template\n        if (generateParams.generateListingItemTemplate) {\n            const listingItemTemplates = await this.generateListingItemTemplates(1, true, listingItemTemplateGenerateParams);\n            listingItemTemplate = listingItemTemplates[0];\n\n            this.log.debug('templates generated:', listingItemTemplates.length);\n            this.log.debug('listingItemTemplates[0].id:', listingItemTemplates[0].id);\n            this.log.debug('listingItemTemplates[0].hash:', listingItemTemplates[0].hash);\n\n            // set the hash for listing item generation\n            listingItemGenerateParams.listingItemTemplateHash = listingItemTemplates[0].hash;\n        }\n\n        // generate item\n        if (generateParams.generateListingItem) {\n\n            // set the seller for listing item generation\n            listingItemGenerateParams.seller = generateParams.listingItemSeller ? generateParams.listingItemSeller : null;\n\n            this.log.debug('listingItemGenerateParams:', listingItemGenerateParams);\n\n            const listingItems = await this.generateListingItems(1, true, listingItemGenerateParams);\n            listingItem = listingItems[0];\n\n            this.log.debug('listingItems generated:', listingItems.length);\n            this.log.debug('listingItem.id:', listingItem.id);\n            this.log.debug('listingItem.hash:', listingItem.hash);\n\n            // set the hash for bid generation\n            generateParams.listingItemHash = listingItem.hash;\n        }\n\n        this.log.debug('generateParams:', generateParams);\n\n        const items: resources.Bid[] = [];\n        for (let i = amount; i > 0; i--) {\n            const bid = await this.generateBidData(generateParams);\n            const savedBidModel = await this.bidService.create(bid);\n            const result = savedBidModel.toJSON();\n            items.push(result);\n        }\n        return this.generateResponse(items, withRelated);\n    }\n\n    private async generateBidData(generateParams: GenerateBidParams): Promise<BidCreateRequest> {\n\n        const addresses = await this.generateAddressesData(1);\n        // this.log.debug('Generated addresses = ' + JSON.stringify(addresses, null, 2));\n        const address = addresses[0];\n\n        // TODO: defaultProfile might not be the correct one\n        const defaultProfile = await this.profileService.getDefault();\n        address.profile_id = defaultProfile.Id;\n\n        const bidder = generateParams.bidder ? generateParams.bidder : await this.coreRpcService.getNewAddress();\n        const action = generateParams.action ? generateParams.action : BidMessageType.MPA_BID;\n\n        // TODO: generate biddatas\n        const bidDatas = [\n            {dataId: 'size', dataValue: 'XL'},\n            {dataId: 'color', dataValue: 'pink'},\n            {dataId: BidDataValue.BUYER_OUTPUTS, dataValue: '[{\\\"txid\\\":\\\"d39a1f90b7fd204bbdbaa49847c0615202c5624bc73634cd83d831e4a226ee0b\\\"' +\n                ',\\\"vout\\\":1,\\\"amount\\\":1.52497491}]'},\n            {dataId: BidDataValue.BUYER_PUBKEY, dataValue: '021e3ccb8a295d6aca9cf2836587f24b1c2ce14b217fe85b1672ee133e2a5d6d90'},\n            {dataId: BidDataValue.BUYER_CHANGE_ADDRESS, dataValue: 'pbofM9onECpn76EosG1GLpyTcQCrfcLhb4'},\n            {dataId: BidDataValue.BUYER_CHANGE_AMOUNT, dataValue: 96.52477491},\n            {dataId: BidDataValue.BUYER_RELEASE_ADDRESS, dataValue: 'pbofM9onECpn76EosG1GLpyTcQCrfcLhb5'},\n            {dataId: BidDataValue.SELLER_PUBKEY, dataValue: '021e3ccb8a295d6aca9cf2836587f24b1c2ce14b217fe85b1672ee133e2a5d6d91'},\n            {dataId: BidDataValue.SELLER_OUTPUTS, dataValue: '[{\\\"txid\\\":\\\"d39a1f90b7fd204bbdbaa49847c0615202c5624bc73634cd83d831e4a226ee0a\\\"' +\n                ',\\\"vout\\\":1,\\\"amount\\\":1.52497491}]'},\n            {dataId: 'ship.title', dataValue: 'title'},\n            {dataId: 'ship.firstName', dataValue: 'asdf'},\n            {dataId: 'ship.lastName', dataValue: 'asdf'},\n            {dataId: 'ship.addressLine1', dataValue: 'asdf'},\n            {dataId: 'ship.addressLine2', dataValue: 'asdf'},\n            {dataId: 'ship.city', dataValue: 'asdf'},\n            {dataId: 'ship.state', dataValue: ''},\n            {dataId: 'ship.zipCode', dataValue: '1234'},\n            {dataId: 'ship.country', dataValue: 'FI'}\n        ] as BidDataCreateRequest[];\n\n        const bidCreateRequest = {\n            action,\n            address,\n            bidder,\n            bidDatas\n        } as BidCreateRequest;\n        // this.log.debug('Generated bid = ' + JSON.stringify(retval, null, 2));\n\n        // if we have a hash, fetch the listingItem and set the relation\n        if (generateParams.listingItemHash) {\n            const listingItemModel = await this.listingItemService.findOneByHash(generateParams.listingItemHash);\n            const listingItem = listingItemModel ? listingItemModel.toJSON() : null;\n            if (listingItem) {\n                bidCreateRequest.listing_item_id = listingItem.id;\n            }\n        }\n\n        return bidCreateRequest;\n    }\n\n    // -------------------\n    // orders\n    private async generateOrders(\n        amount: number, withRelated: boolean = true, generateParams: GenerateOrderParams):\n    Promise<resources.Order[]> {\n\n        this.log.debug('generateOrders, generateParams: ', generateParams);\n\n        let bid: resources.Bid;\n\n        // generate bid\n        if (generateParams.generateBid) {\n\n            const bidGenerateParams = new GenerateBidParams();\n            bidGenerateParams.generateListingItemTemplate = generateParams.generateListingItemTemplate;\n            bidGenerateParams.generateListingItem = generateParams.generateListingItem;\n            bidGenerateParams.action = BidMessageType.MPA_ACCEPT;\n            bidGenerateParams.listingItemSeller = generateParams.listingItemSeller;\n\n            const bids = await this.generateBids(1, true, bidGenerateParams);\n            bid = bids[0];\n\n            this.log.debug('bids generated:', bids.length);\n            this.log.debug('bid.id:', bid.id);\n\n        } else {\n            const bidModel = await this.bidService.findOne(generateParams.bidId);\n            bid = bidModel.toJSON();\n        }\n\n        // set the bid_id for order generation\n        generateParams.bidId = bid.id;\n\n        const items: resources.Order[] = [];\n        for (let i = amount; i > 0; i--) {\n            const orderCreateRequest = await this.generateOrderData(generateParams);\n\n            // this.log.debug('orderCreateRequest:', JSON.stringify(orderCreateRequest, null, 2));\n\n            const savedOrderModel = await this.orderService.create(orderCreateRequest);\n            const result = savedOrderModel.toJSON();\n            items.push(result);\n        }\n\n        return this.generateResponse(items, withRelated);\n    }\n\n    private async generateOrderData(generateParams: GenerateOrderParams): Promise<OrderCreateRequest> {\n\n        // get the bid\n        const bidModel = await this.bidService.findOne(generateParams.bidId);\n        const bid: resources.Bid = bidModel.toJSON();\n\n        // then generate ordercreaterequest with some orderitems and orderitemobjects\n        const orderCreateRequest = await this.orderFactory.getModelFromBid(bid);\n\n        if (!generateParams.generateOrderItem) {\n            orderCreateRequest.orderItems = [];\n        }\n        return orderCreateRequest;\n    }\n\n    /*\n    private async generateOrderItemData(bid: resources.Bid): Promise<OrderItemCreateRequest> {\n        const orderItemObjects: OrderItemObjectCreateRequest[] = [];\n        return {\n            order_id: 0,\n            itemHash: bid.ListingItem.hash,\n            bid_id: bid.id,\n            status: OrderStatus.AWAITING_ESCROW,\n            orderItemObjects\n        } as OrderItemCreateRequest;\n    }\n    */\n\n    // -------------------\n    // Proposals\n    private async generateProposals(\n        amount: number, withRelated: boolean = true,\n        generateParams: GenerateProposalParams): Promise<resources.Proposal[]> {\n\n        this.log.debug('generateProposals, generateParams: ', generateParams);\n\n        /*\n        TODO: add template and item generation\n\n        const listingItemTemplateGenerateParams = new GenerateListingItemTemplateParams();\n        const listingItemGenerateParams = new GenerateListingItemParams();\n\n        let listingItemTemplate: resources.ListingItemTemplate;\n        let listingItem: resources.ListingItem;\n\n        // generate template\n        if (generateParams.generateListingItemTemplate) {\n            const listingItemTemplates = await this.generateListingItemTemplates(1, true, listingItemTemplateGenerateParams);\n            listingItemTemplate = listingItemTemplates[0];\n\n            this.log.debug('templates generated:', listingItemTemplates.length);\n            this.log.debug('listingItemTemplates[0].id:', listingItemTemplates[0].id);\n            this.log.debug('listingItemTemplates[0].hash:', listingItemTemplates[0].hash);\n\n            // set the hash for listing item generation\n            listingItemGenerateParams.listingItemTemplateHash = listingItemTemplates[0].hash;\n        }\n\n        // generate item\n        if (generateParams.generateListingItem) {\n\n            // set the seller for listing item generation\n            listingItemGenerateParams.seller = generateParams.listingItemSeller ? generateParams.listingItemSeller : null;\n\n            this.log.debug('listingItemGenerateParams:', listingItemGenerateParams);\n\n            const listingItems = await this.generateListingItems(1, true, listingItemGenerateParams);\n            listingItem = listingItems[0];\n\n            this.log.debug('listingItems generated:', listingItems.length);\n            this.log.debug('listingItem.id:', listingItem.id);\n            this.log.debug('listingItem.hash:', listingItem.hash);\n\n            // set the hash for bid generation\n            generateParams.listingItemHash = listingItem.hash;\n        }\n        // TODO: proposalHash is not set to listingitem\n         */\n\n        const items: resources.Proposal[] = [];\n        for (let i = amount; i > 0; i--) {\n            const proposalCreateRequest = await this.generateProposalData(generateParams);\n            let proposalModel = await this.proposalService.create(proposalCreateRequest);\n            let proposal: resources.Proposal = proposalModel.toJSON();\n\n            if (generateParams.voteCount > 0) {\n                const votes = await this.generateVotesForProposal(generateParams.voteCount, proposal);\n            }\n\n            // create and update ProposalResult\n            let proposalResult = await this.proposalService.createProposalResult(proposal);\n            proposalResult = await this.proposalService.recalculateProposalResult(proposal);\n            // this.log.debug('updated proposalResult: ', JSON.stringify(proposalResult, null, 2));\n\n            proposalModel = await this.proposalService.findOne(proposal.id);\n            proposal = proposalModel.toJSON();\n            items.push(proposal);\n        }\n\n        return this.generateResponse(items, withRelated);\n    }\n\n    private async generateVotesForProposal(amount: number, proposal: resources.Proposal): Promise<resources.Vote[]> {\n\n        const items: resources.Vote[] = [];\n        for (let i = amount; i > 0; i--) {\n            const randomBoolean: boolean = Math.random() >= 0.5;\n            const voter = Faker.finance.bitcoinAddress(); // await this.coreRpcService.getNewAddress();\n            const block = _.random(proposal.blockStart, proposal.blockEnd);\n            const proposalOptionId = proposal.ProposalOptions[randomBoolean ? 0 : 1].id;\n\n            const voteCreateRequest = {\n                proposal_option_id: proposalOptionId,\n                voter,\n                block,\n                weight: 1\n            } as VoteCreateRequest;\n\n            const voteModel = await this.voteService.create(voteCreateRequest);\n            const vote: resources.Vote = voteModel.toJSON();\n            this.log.debug('proposal.id : ' + proposal.id + ' : created vote: ' + vote.voter + ' : '\n                + vote.ProposalOption.optionId + ' : ' + vote.ProposalOption.description);\n            items.push(vote);\n        }\n        return items;\n    }\n\n    private async generateProposalData(generateParams: GenerateProposalParams): Promise<ProposalCreateRequest> {\n\n        let submitter;\n        if (!generateParams.submitter) {\n            const defaultProfile = await this.profileService.getDefault();\n            const profile = defaultProfile.toJSON();\n            submitter = profile.address;\n        } else {\n            submitter = generateParams.submitter;\n        }\n\n        const type = generateParams.listingItemHash ? ProposalType.ITEM_VOTE : ProposalType.PUBLIC_VOTE;\n        const title = generateParams.listingItemHash ? generateParams.listingItemHash : Faker.lorem.words(4);\n        const item = generateParams.listingItemHash ? generateParams.listingItemHash : null;\n        const description = generateParams.listingItemHash ? 'ILLEGAL ITEM' : Faker.lorem.words(40);\n\n        const currentblock: number = await this.coreRpcService.getBlockCount();\n        const blockStart = generateParams.generatePastProposal\n            ? _.random(1, (currentblock / 2), false)\n            : _.random(currentblock + 100, currentblock + 1000, false);\n\n        const blockEnd = generateParams.generatePastProposal\n            ? _.random((currentblock / 2) + 100, currentblock - 1000, false)\n            : _.random(currentblock + 1001, currentblock + 2000, false);\n\n        // this.log.debug('generateParams.generatePastProposal: ', generateParams.generatePastProposal);\n        // this.log.debug('currentblock: ', currentblock);\n        // this.log.debug('blockStart: ', blockStart);\n        // this.log.debug('blockEnd: ', blockEnd);\n\n        const proposalCreateRequest = {\n            submitter,\n            blockStart,\n            blockEnd,\n            type,\n            item,\n            title,\n            description,\n            expiryTime: 4,\n            postedAt: new Date().getTime(),\n            expiredAt: new Date().getTime() + 100000000,\n            receivedAt: new Date().getTime()\n        } as ProposalCreateRequest;\n\n        const options: ProposalOptionCreateRequest[] = [];\n        options.push({\n            optionId: 0,\n            description: ItemVote.KEEP.toString()\n        } as ProposalOptionCreateRequest);\n\n        options.push({\n            optionId: 1,\n            description: ItemVote.REMOVE.toString()\n        } as ProposalOptionCreateRequest);\n\n        // TODO: Generate a random number of proposal options, or a number specified in the generateParams\n        proposalCreateRequest.options = options;\n\n        // this.log.debug('proposalCreateRequest: ', JSON.stringify(proposalCreateRequest, null, 2));\n        return proposalCreateRequest;\n    }\n\n    // -------------------\n    // profiles\n\n    private async generateProfiles(\n        amount: number, withRelated: boolean = true, generateParams: GenerateProfileParams):\n    Promise<resources.Profile[]> {\n\n        const items: resources.Profile[] = [];\n        for (let i = amount; i > 0; i--) {\n            const profile = await this.generateProfileData(generateParams);\n            const savedProfileModel = await this.profileService.create(profile);\n            const result = savedProfileModel.toJSON();\n            items.push(result);\n        }\n        return this.generateResponse(items, withRelated);\n    }\n\n    private async generateResponse(items: any, withRelated: boolean): Promise<any> {\n        if (withRelated) {\n            return items;\n        } else {\n            const itemIds: number[] = [];\n            for (const item of items) {\n                itemIds.push(item.id);\n            }\n            return itemIds;\n        }\n    }\n\n    private async generateProfileData(generateParams: GenerateProfileParams): Promise<ProfileCreateRequest> {\n        const name = 'TEST-' + Faker.name.firstName();\n        const address = await this.coreRpcService.getNewAddress();\n\n        const profile = await this.generateAddressesData(_.random(1, 5));\n        const shippingAddresses = generateParams.generateShippingAddresses ? profile : [];\n        const cryptocurrencyAddresses = generateParams.generateCryptocurrencyAddresses ? await this.generateCryptocurrencyAddressesData(_.random(1, 5)) : [];\n        const settings = generateParams.generateSettings ? await this.generateSettings(_.random(1, 5)) : [];\n\n        return {\n            name,\n            address,\n            shippingAddresses,\n            cryptocurrencyAddresses,\n            settings\n        } as ProfileCreateRequest;\n    }\n\n    private async generateAddressesData(amount: number): Promise<AddressCreateRequest[]> {\n        const addresses: any[] = [];\n        for (let i = amount; i > 0; i--) {\n            addresses.push({\n                firstName: Faker.name.firstName(),\n                lastName: Faker.name.lastName(),\n                title: Faker.company.companyName(),\n                addressLine1: Faker.address.streetAddress(),\n                addressLine2: Faker.address.secondaryAddress(),\n                zipCode: Faker.address.zipCode(),\n                city: Faker.address.city(),\n                state: Faker.address.state(),\n                country: Faker.random.arrayElement(Object.getOwnPropertyNames(ShippingCountries.countryCodeList)),\n                type: AddressType.SHIPPING_OWN\n            });\n        }\n        return addresses;\n    }\n\n    private async generateCryptocurrencyAddressesData(amount: number): Promise<CryptocurrencyAddressCreateRequest[]> {\n        const cryptoAddresses: any[] = [];\n        for (let i = amount; i > 0; i--) {\n            cryptoAddresses.push({\n                type: Faker.random.arrayElement(Object.getOwnPropertyNames(CryptocurrencyAddressType)),\n                address: await this.coreRpcService.getNewAddress()\n            });\n        }\n        return cryptoAddresses;\n    }\n\n    private async generateSettings(amount: number): Promise<SettingCreateRequest[]> {\n        const settings: any[] = [];\n        for (let i = amount; i > 0; i--) {\n            settings.push({\n                key: Faker.random.word(),\n                value: Faker.random.word()\n            });\n        }\n        return settings;\n    }\n\n    /**\n     * TODO: create a Proposal\n     *\n     * @param {GenerateListingItemParams} generateParams\n     * @returns {Promise<ListingItemCreateRequest>}\n     */\n    private async generateListingItemData(generateParams: GenerateListingItemParams): Promise<ListingItemCreateRequest> {\n\n        // get default profile\n        const defaultProfileModel = await this.profileService.getDefault();\n        const defaultProfile = defaultProfileModel.toJSON();\n\n        // get default market\n        const defaultMarketModel = await this.marketService.getDefault();\n        const defaultMarket = defaultMarketModel.toJSON();\n\n        // set seller to given address or get a new one\n        const seller = generateParams.seller ? generateParams.seller : await this.coreRpcService.getNewAddress();\n\n        const itemInformation = generateParams.generateItemInformation ? this.generateItemInformationData(generateParams) : {};\n        const paymentInformation = generateParams.generatePaymentInformation ? await this.generatePaymentInformationData(generateParams) : {};\n        const messagingInformation = generateParams.generateMessagingInformation ? this.generateMessagingInformationData() : [];\n        const listingItemObjects = generateParams.generateListingItemObjects ? this.generateListingItemObjectsData(generateParams) : [];\n\n        const listingItemCreateRequest = {\n            seller,\n            itemInformation,\n            paymentInformation,\n            messagingInformation,\n            listingItemObjects,\n            market_id: defaultMarket.id,\n            expiryTime: 4,\n            postedAt: new Date().getTime(),\n            expiredAt: new Date().getTime() + 100000000,\n            receivedAt: new Date().getTime()\n        } as ListingItemCreateRequest;\n\n        // fetch listingItemTemplate if hash was given and set the listing_item_template_id\n        let listingItemTemplate: resources.ListingItemTemplate | null = null;\n        if (generateParams.listingItemTemplateHash) {\n            const listingItemTemplateModel = await this.listingItemTemplateService.findOneByHash(generateParams.listingItemTemplateHash);\n            listingItemTemplate = listingItemTemplateModel ? listingItemTemplateModel.toJSON() : null;\n            if (listingItemTemplate) {\n                listingItemCreateRequest.listing_item_template_id = listingItemTemplate.id;\n            }\n        }\n\n        return listingItemCreateRequest;\n    }\n\n    private generateShippingDestinationsData(amount: number): ShippingDestinationCreateRequest[] {\n        const items: any[] = [];\n        for (let i = amount; i > 0; i--) {\n            items.push({\n                country: Faker.random.arrayElement(Object.getOwnPropertyNames(ShippingCountries.countryCodeList)),\n                shippingAvailability: ShippingAvailability.SHIPS\n            });\n        }\n        return items;\n    }\n\n    private generateItemLocationData(): any {\n        return {\n            region: Faker.random.arrayElement(Object.getOwnPropertyNames(ShippingCountries.countryCodeList)),\n            address: Faker.address.streetAddress(),\n            locationMarker: {\n                markerTitle: Faker.lorem.word(),\n                markerText: Faker.lorem.sentence(),\n                lat: Faker.address.latitude(),\n                lng: Faker.address.longitude()\n            }\n        };\n    }\n\n    private generateItemImagesData(amount: number): ItemImageCreateRequest[] {\n        const items: any[] = [];\n        for (let i = amount; i > 0; i--) {\n            const item = {\n                hash: Faker.random.uuid(),\n                data: [{\n                    dataId: Faker.internet.url(),\n                    protocol: ImageDataProtocolType.LOCAL,\n                    imageVersion: 'ORIGINAL',\n                    encoding: 'BASE64',\n                    data: ImageProcessing.milkcatSmall\n                }]\n            };\n            items.push(item);\n        }\n        return items;\n    }\n\n    private generateItemInformationData(generateParams: GenerateListingItemParams | GenerateListingItemTemplateParams): ItemInformationCreateRequest {\n\n        const shippingDestinations = generateParams.generateShippingDestinations\n            ? this.generateShippingDestinationsData(_.random(1, 5))\n            : [];\n\n        const itemImages = generateParams.generateItemImages\n            ? this.generateItemImagesData(_.random(1, 5))\n            : [];\n\n        const itemLocation = generateParams.generateItemLocation\n            ? this.generateItemLocationData()\n            : undefined;\n\n        const itemCategory = {} as ItemCategoryUpdateRequest;\n        if (generateParams.categoryId) {\n            itemCategory.id = generateParams.categoryId;\n        } else {\n            itemCategory.key = this.randomCategoryKey();\n        }\n\n        const itemInformation = {\n            title: Faker.commerce.productName(),\n            shortDescription: Faker.commerce.productAdjective() + ' ' + Faker.commerce.product(),\n            longDescription: Faker.lorem.paragraph(),\n            itemCategory,\n            itemLocation,\n            shippingDestinations,\n            itemImages\n        } as ItemInformationCreateRequest;\n        return itemInformation;\n    }\n\n    private async generatePaymentInformationData(\n        generateParams: GenerateListingItemParams | GenerateListingItemTemplateParams):\n    Promise<PaymentInformationCreateRequest> {\n\n        const escrow = generateParams.generateEscrow\n            ? {\n                type: EscrowType.MAD.toString(), // Faker.random.arrayElement(Object.getOwnPropertyNames(EscrowType)),\n                ratio: {\n                    buyer: _.random(1, 100),\n                    seller: _.random(1, 100)\n                }\n            } as EscrowCreateRequest\n            : undefined;\n\n        const itemPrice = generateParams.generateItemPrice\n            ? {\n                currency: Currency.PARTICL.toString(), // Faker.random.arrayElement(Object.getOwnPropertyNames(Currency)),\n                basePrice: _.random(0.1, 1.00),\n                shippingPrice: {\n                    domestic: _.random(0.01, 0.10),\n                    international: _.random(0.10, 0.20)\n                },\n                cryptocurrencyAddress: {\n                    type: Faker.random.arrayElement(Object.getOwnPropertyNames(CryptocurrencyAddressType)),\n                    address: await this.coreRpcService.getNewAddress()\n                }\n            } as ItemPriceCreateRequest\n            : undefined;\n\n        const paymentInformation = {\n            type: PaymentType.SALE.toString(), // Faker.random.arrayElement(Object.getOwnPropertyNames(PaymentType)),\n            escrow,\n            itemPrice\n        } as PaymentInformationCreateRequest;\n        return paymentInformation;\n    }\n\n    // TODO: type\n    private generateMessagingInformationData(): any {\n        const messagingInformation = [{\n            protocol: Faker.random.arrayElement(Object.getOwnPropertyNames(MessagingProtocolType)),\n            publicKey: Faker.random.uuid()\n        }];\n        return messagingInformation;\n    }\n\n\n    private async generateActionMessages(amount: number, withRelated: boolean = true,\n                                         generateParams: GenerateActionMessageParams): Promise<resources.ActionMessage[]> {\n        const marketModel = await this.marketService.getDefault();\n        const market = marketModel.toJSON();\n\n        const info = generateParams.generateMessageInfo ? {\n            address: generateParams.seller,\n            memo: generateParams.memo\n        } as MessageInfoCreateRequest : {};\n        const escrow = generateParams.generateMessageEscrow ? {\n            type: generateParams.type,\n            rawtx: generateParams.rawtx\n        } as MessageEscrowCreateRequest : {};\n        const data = generateParams.generateMessageData ? {\n            msgid: generateParams.msgid,\n            version: '0300',\n            received: new Date(),\n            sent: new Date(),\n            from: generateParams.seller,\n            to: market.address\n        } as MessageDataCreateRequest : {};\n        const objects: MessageObjectCreateRequest[] = [];\n        for (let i = generateParams.generateMessageObjectsAmount; i > 0; i--) {\n            const object = {\n                dataId: 'seller',\n                dataValue: generateParams.seller\n            } as MessageObjectCreateRequest;\n            objects.push(object);\n        }\n\n        const actionMessageCreateRequest = {\n            action: generateParams.action,\n            nonce: generateParams.nonce,\n            accepted: generateParams.accepted,\n            listing_item_id: generateParams.listingItemId,\n            info,\n            escrow,\n            data,\n            objects\n        } as ActionMessageCreateRequest;\n\n        const items: resources.ActionMessage[] = [];\n        for (let i = amount; i > 0; i--) {\n            const actionMessageModel = await this.actionMessageService.create(actionMessageCreateRequest);\n            const actionMessage = actionMessageModel.toJSON();\n            items.push(actionMessage);\n        }\n        return this.generateResponse(items, withRelated);\n    }\n\n    // listingitemobjects\n    private generateListingItemObjectsData(generateParams: GenerateListingItemParams | GenerateListingItemTemplateParams): any {\n        const listingItemObjectDatas = generateParams.generateObjectDatas\n            ? this.generateObjectDataData(_.random(1, 5))\n            : [];\n\n        const listingItemObjects = [{\n            type: Faker.random.arrayElement(Object.getOwnPropertyNames(ListingItemObjectType)),\n            description: Faker.lorem.paragraph(),\n            order: Faker.random.number(),\n            listingItemObjectDatas\n        }];\n        return listingItemObjects;\n    }\n\n    // TODO: type\n    private generateObjectDataData(amount: number): any[] {\n        const object: any[] = [];\n        for (let i = amount; i > 0; i--) {\n            object.push({\n                key: Faker.lorem.slug(),\n                value: Faker.lorem.word()\n            });\n        }\n        return object;\n    }\n\n    private async generateListingItemTemplateData(generateParams: GenerateListingItemTemplateParams): Promise<ListingItemTemplateCreateRequest> {\n        const itemInformation = generateParams.generateItemInformation ? this.generateItemInformationData(generateParams) : {};\n        const paymentInformation = generateParams.generatePaymentInformation ? await this.generatePaymentInformationData(generateParams) : {};\n        const messagingInformation = generateParams.generateMessagingInformation ? this.generateMessagingInformationData() : [];\n        const listingItemObjects = generateParams.generateListingItemObjects ? this.generateListingItemObjectsData(generateParams) : [];\n\n        let profile: resources.Profile;\n\n        if (generateParams.profileId === null) {\n            const profileModel = await this.profileService.getDefault();\n            profile = profileModel.toJSON();\n        } else {\n            const profileModel = await this.profileService.findOne(generateParams.profileId);\n            profile = profileModel.toJSON();\n        }\n\n        const listingItemTemplateCreateRequest = {\n            itemInformation,\n            paymentInformation,\n            messagingInformation,\n            listingItemObjects,\n            profile_id: profile.id\n        } as ListingItemTemplateCreateRequest;\n\n        // this.log.debug('listingItemTemplateCreateRequest', JSON.stringify(listingItemTemplateCreateRequest, null, 2));\n        return listingItemTemplateCreateRequest;\n    }\n\n\n    private randomCategoryKey(): string {\n        const categoryKeys = [\n            'cat_high_business_corporate', 'cat_high_vehicles_aircraft_yachts', 'cat_high_real_estate', 'cat_high_luxyry_items',\n            'cat_high_services', 'cat_housing_vacation_rentals', 'cat_housing_travel_services', 'cat_housing_apartments_rental_housing',\n            'cat_apparel_adult', 'cat_apparel_children', 'cat_apparel_bags_luggage', 'cat_apparel_other', 'cat_app_android',\n            'cat_app_ios', 'cat_app_windows', 'cat_app_mac', 'cat_app_web_development', 'cat_app_other', 'cat_auto_cars_truck_parts',\n            'cat_auto_motorcycle', 'cat_auto_rv_boating', 'cat_auto_other', 'cat_media_books_art_print', 'cat_media_music_physical',\n            'cat_media_music_digital', 'cat_media_movies_entertainment', 'cat_media_other', 'cat_mobile_accessories',\n            'cat_mobile_cell_phones', 'cat_mobile_tablets', 'cat_mobile_other', 'cat_electronics_home_audio', 'cat_electronics_music_instruments',\n            'cat_electronics_automation_security', 'cat_electronics_video_camera', 'cat_electronics_television_monitors',\n            'cat_electronics_computers_parts', 'cat_electronics_gaming_esports', 'cat_electronics_other', 'cat_health_diet_nutrition',\n            'cat_health_personal_care', 'cat_health_household_supplies', 'cat_health_beauty_products_jewelry', 'cat_health_baby_infant_care',\n            'cat_health_other', 'cat_home_furniture', 'cat_home_appliances_kitchenware', 'cat_home_textiles_rugs_bedding',\n            'cat_home_hardware_tools', 'cat_home_pet_supplies', 'cat_home_home_office', 'cat_home_sporting_outdoors', 'cat_home_specialty_items',\n            'cat_home_other', 'cat_services_commercial', 'cat_services_freelance', 'cat_services_labor_talent', 'cat_services_transport_logistics',\n            'cat_services_escrow', 'cat_services_endoflife_estate_inheritance', 'cat_services_legal_admin', 'cat_services_other',\n            'cat_wholesale_consumer_goods', 'cat_wholesale_commercial_industrial', 'cat_wholesale_scientific_equipment_supplies',\n            'cat_wholesale_scientific_lab_services', 'cat_wholesale_other'\n        ];\n\n        const rand = Math.floor(Math.random() * categoryKeys.length);\n        return categoryKeys[rand];\n    }\n\n}\n"]}