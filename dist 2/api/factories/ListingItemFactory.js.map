{"version":3,"file":"ListingItemFactory.js","sourceRoot":"","sources":["../../../src/api/factories/ListingItemFactory.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF,yCAA0C;AAC1C,4BAA4B;AAE5B,+CAAuD;AAGvD,+DAA4D;AAE5D,wEAAqE;AAKrE,kFAAwE;AAUxE,0EAAuE;AAIvE,IAAa,kBAAkB,GAA/B;IAMI,YACmD,MAAyB,EACG,mBAAwC;QADpE,WAAM,GAAN,MAAM,CAAmB;QACG,wBAAmB,GAAnB,mBAAmB,CAAqB;QAJ/G,oBAAe,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;QAM1C,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAED;;;;;;;OAOG;IACU,UAAU,CAAC,mBAAkD;;YAEtE,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,eAAe,CAAC,CAAC;YAC1F,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,CAAC;YACrF,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,CAAC;YAC3F,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,CAAC;YAErF,MAAM,OAAO,GAAG;gBACZ,IAAI,EAAE,mBAAmB,CAAC,IAAI;gBAC9B,WAAW;gBACX,OAAO;gBACP,SAAS;gBACT,OAAO;aACY,CAAC;YAExB,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;KAAA;IAED;;;;;;;OAOG;IACU,QAAQ,CAAC,kBAAsC,EAAE,WAAkC,EAAE,QAAgB,EAC5F,YAAoC;;YAEtD,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,kBAAkB,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;YACzG,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;YAC7F,MAAM,oBAAoB,GAAG,MAAM,IAAI,CAAC,4BAA4B,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;YACnG,MAAM,kBAAkB,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;YAE7F,MAAM,CAAC;gBACH,IAAI,EAAE,kBAAkB,CAAC,IAAI;gBAC7B,MAAM,EAAE,WAAW,CAAC,IAAI;gBACxB,SAAS,EAAE,QAAQ;gBACnB,UAAU,EAAE,WAAW,CAAC,aAAa;gBACrC,QAAQ,EAAE,WAAW,CAAC,IAAI;gBAC1B,SAAS,EAAE,WAAW,CAAC,UAAU;gBACjC,UAAU,EAAE,WAAW,CAAC,QAAQ;gBAChC,eAAe;gBACf,kBAAkB;gBAClB,oBAAoB;gBACpB,kBAAkB;aACO,CAAC;QAClC,CAAC;KAAA;IAED,kBAAkB;IAClB,QAAQ;IACR,kBAAkB;IACJ,0BAA0B,CAAC,OAAc;;YACnD,MAAM,WAAW,GAAqC,EAAE,CAAC;YACzD,GAAG,CAAC,CAAC,MAAM,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC;gBAC3B,IAAI,UAAU,CAAC;gBACf,EAAE,CAAC,CAAC,OAAO,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oBAC1B,UAAU,GAAG,MAAM,IAAI,CAAC,8BAA8B,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC5E,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,KAAK,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oBACpC,UAAU,GAAG,MAAM,IAAI,CAAC,iCAAiC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;gBACjF,CAAC;gBACD,WAAW,CAAC,IAAI,CAAC;oBACb,IAAI,EAAE,MAAM,CAAC,IAAI;oBACjB,WAAW,EAAE,MAAM,CAAC,KAAK;oBACzB,sBAAsB,EAAE,UAAU;iBACH,CAAC,CAAC;YACzC,CAAC;YACD,MAAM,CAAC,WAAW,CAAC;QACvB,CAAC;KAAA;IAEa,8BAA8B,CAAC,WAAgB;;YACzD,MAAM,eAAe,GAAyC,EAAE,CAAC;YACjE,GAAG,CAAC,CAAC,MAAM,UAAU,IAAI,WAAW,CAAC,CAAC,CAAC;gBACnC,eAAe,CAAC,IAAI,CAAC;oBACjB,GAAG,EAAE,UAAU,CAAC,GAAG;oBACnB,KAAK,EAAE,UAAU,CAAC,KAAK;iBACY,CAAC,CAAC;YAC7C,CAAC;YACD,MAAM,CAAC,eAAe,CAAC;QAC3B,CAAC;KAAA;IAEa,iCAAiC,CAAC,WAAgB;;YAC5D,MAAM,eAAe,GAAyC,EAAE,CAAC;YACjE,GAAG,CAAC,CAAC,MAAM,UAAU,IAAI,WAAW,CAAC,CAAC,CAAC;gBACnC,eAAe,CAAC,IAAI,CAAC;oBACjB,GAAG,EAAE,UAAU,CAAC,IAAI;oBACpB,KAAK,EAAE,UAAU,CAAC,KAAK;iBACY,CAAC,CAAC;YAC7C,CAAC;YACD,MAAM,CAAC,eAAe,CAAC;QAC3B,CAAC;KAAA;IAEa,4BAA4B,CAAC,SAAc;;YACrD,MAAM,cAAc,GAAwC,EAAE,CAAC;YAC/D,GAAG,CAAC,CAAC,MAAM,aAAa,IAAI,SAAS,CAAC,CAAC,CAAC;gBACpC,cAAc,CAAC,IAAI,CAAC;oBAChB,QAAQ,EAAE,6CAAqB,CAAC,aAAa,CAAC,QAAQ,CAAC;oBACvD,SAAS,EAAE,aAAa,CAAC,UAAU;iBACD,CAAC,CAAC;YAC5C,CAAC;YACD,MAAM,CAAC,cAAc,CAAC;QAC1B,CAAC;KAAA;IAEa,0BAA0B,CAAC,OAAY;;YACjD,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACzD,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;YAEvE,MAAM,CAAC;gBACH,IAAI,EAAE,OAAO,CAAC,IAAI;gBAClB,MAAM;gBACN,SAAS;aACuB,CAAC;QACzC,CAAC;KAAA;IAEa,iBAAiB,CAAC,cAAmB;;YAC/C,MAAM,aAAa,GAAG,MAAM,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC;YACzF,IAAI,qBAAqB,CAAC;YAC1B,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBACxC,qBAAqB,GAAG,MAAM,IAAI,CAAC,6BAA6B,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;YAChG,CAAC;YACD,MAAM,CAAC;gBACH,QAAQ,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,QAAQ;gBACpC,SAAS,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,UAAU;gBACvC,aAAa;gBACb,qBAAqB;aACE,CAAC;QAChC,CAAC;KAAA;IAEa,qBAAqB,CAAC,aAAkB;;YAClD,MAAM,CAAC;gBACH,QAAQ,EAAE,aAAa,CAAC,QAAQ;gBAChC,aAAa,EAAE,aAAa,CAAC,aAAa;aACf,CAAC;QACpC,CAAC;KAAA;IAEa,6BAA6B,CAAC,qBAA0B;;YAClE,MAAM,CAAC;gBACH,IAAI,EAAE,qBAAqB,CAAC,IAAI;gBAChC,OAAO,EAAE,qBAAqB,CAAC,OAAO;aACH,CAAC;QAC5C,CAAC;KAAA;IAEa,cAAc,CAAC,MAAW;;YACpC,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAC3D,MAAM,CAAC;gBACH,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,KAAK;aACe,CAAC;QAC7B,CAAC;KAAA;IAEa,mBAAmB,CAAC,KAAU;;YACxC,MAAM,CAAC;gBACH,KAAK,EAAE,KAAK,CAAC,KAAK;gBAClB,MAAM,EAAE,KAAK,CAAC,MAAM;aACK,CAAC;QAClC,CAAC;KAAA;IAEa,uBAAuB,CAAC,WAAgB,EAAE,YAAoC;;YACxF,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;YACjG,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YACvE,MAAM,oBAAoB,GAAG,MAAM,IAAI,CAAC,4BAA4B,CAAC,WAAW,CAAC,qBAAqB,CAAC,CAAC;YACxG,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;YAEjE,MAAM,CAAC;gBACH,KAAK,EAAE,WAAW,CAAC,KAAK;gBACxB,gBAAgB,EAAE,WAAW,CAAC,iBAAiB;gBAC/C,eAAe,EAAE,WAAW,CAAC,gBAAgB;gBAC7C,YAAY;gBACZ,YAAY;gBACZ,oBAAoB;gBACpB,UAAU;aACmB,CAAC;QACtC,CAAC;KAAA;IAEa,gBAAgB,CAAC,QAAa;;YACxC,MAAM,cAAc,GAAQ,EAAE,CAAC;YAC/B,MAAM,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC;YAChC,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;YAEjC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,cAAc,CAAC,MAAM,GAAG,MAAM,CAAC;YACnC,CAAC;YACD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACV,cAAc,CAAC,OAAO,GAAG,OAAO,CAAC;YACrC,CAAC;YAED,EAAE,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;gBACf,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;gBACvE,cAAc,CAAC,cAAc,GAAG,cAAc,CAAC;YAEnD,CAAC;YAED,MAAM,CAAC,cAAc,CAAC;QAC1B,CAAC;KAAA;IAEa,sBAAsB,CAAC,GAAQ;;YACzC,MAAM,GAAG,GAAW,GAAG,CAAC,GAAG,CAAC;YAC5B,MAAM,GAAG,GAAW,GAAG,CAAC,GAAG,CAAC;YAC5B,MAAM,cAAc,GAAG;gBACnB,GAAG;gBACH,GAAG;aACyB,CAAC;YAEjC,EAAE,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,CAAC;gBACnB,cAAc,CAAC,WAAW,GAAG,GAAG,CAAC,YAAY,CAAC;YAClD,CAAC;YACD,EAAE,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;gBAClB,cAAc,CAAC,UAAU,GAAG,GAAG,CAAC,WAAW,CAAC;YAChD,CAAC;YACD,MAAM,CAAC,cAAc,CAAC;QAC1B,CAAC;KAAA;IAEa,4BAA4B,CAAC,oBAA8B;;YAErE,MAAM,YAAY,GAAoC,EAAE,CAAC;YACzD,GAAG,CAAC,CAAC,MAAM,WAAW,IAAI,oBAAoB,CAAC,CAAC,CAAC;gBAE7C,IAAI,oBAAoB,GAAG,2CAAoB,CAAC,KAAK,CAAC;gBACtD,IAAI,OAAO,GAAG,WAAW,CAAC;gBAE1B,EAAE,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;oBAChC,oBAAoB,GAAG,2CAAoB,CAAC,aAAa,CAAC;oBAC1D,OAAO,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBACvC,CAAC;gBAED,YAAY,CAAC,IAAI,CAAC;oBACd,OAAO;oBACP,oBAAoB;iBACU,CAAC,CAAC;YACxC,CAAC;YAED,MAAM,CAAC,YAAY,CAAC;QACxB,CAAC;KAAA;IAEa,cAAc,CAAC,MAAa;;YAEtC,MAAM,mBAAmB,GAA6B,EAAE,CAAC;YACzD,GAAG,CAAC,CAAC,MAAM,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC;gBACzB,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACtD,mBAAmB,CAAC,IAAI,CAAC;oBACrB,IAAI,EAAE,KAAK,CAAC,IAAI;oBAChB,IAAI;iBACmB,CAAC,CAAC;YACjC,CAAC;YACD,MAAM,CAAC,mBAAmB,CAAC;QAC/B,CAAC;KAAA;IAEa,iBAAiB,CAAC,UAAiB;;YAE7C,MAAM,uBAAuB,GAAiC,EAAE,CAAC;YACjE,GAAG,CAAC,CAAC,MAAM,SAAS,IAAI,UAAU,CAAC,CAAC,CAAC;gBACjC,uBAAuB,CAAC,IAAI,CAAC;oBACzB,MAAM,EAAE,SAAS,CAAC,EAAE;oBACpB,QAAQ,EAAE,SAAS,CAAC,QAAQ;oBAC5B,YAAY,EAAE,oCAAa,CAAC,QAAQ,CAAC,QAAQ;oBAC7C,QAAQ,EAAE,SAAS,CAAC,QAAQ;oBAC5B,IAAI,EAAE,SAAS,CAAC,IAAI;iBACO,CAAC,CAAC;YACrC,CAAC;YACD,MAAM,CAAC,uBAAuB,CAAC;QACnC,CAAC;KAAA;IAGD,kBAAkB;IAClB,UAAU;IACV,kBAAkB;IACJ,qBAAqB,CAAC,eAA0C;;YAC1E,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;YACvF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,6BAA6B,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;YACxF,MAAM,oBAAoB,GAAG,MAAM,IAAI,CAAC,yCAAyC,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC;YACxH,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,2BAA2B,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;YAElF,MAAM,CAAC;gBACH,KAAK,EAAE,eAAe,CAAC,KAAK;gBAC5B,iBAAiB,EAAE,eAAe,CAAC,gBAAgB;gBACnD,gBAAgB,EAAE,eAAe,CAAC,eAAe;gBACjD,QAAQ;gBACR,QAAQ;gBACR,qBAAqB,EAAE,oBAAoB;gBAC3C,MAAM;aACT,CAAC;QACN,CAAC;KAAA;IAEa,6BAA6B,CAAC,YAAoC;;YAC5E,MAAM,cAAc,GAA6B,YAAY,CAAC,cAAc,CAAC;YAC7E,MAAM,mBAAmB,GAAQ,EAAE,CAAC;YACpC,EAAE,CAAC,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC;gBACtB,mBAAmB,CAAC,OAAO,GAAG,YAAY,CAAC,MAAM,CAAC;YACtD,CAAC;YACD,EAAE,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,CAAC;gBACvB,mBAAmB,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;YACvD,CAAC;YACD,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;gBACjB,mBAAmB,CAAC,GAAG,GAAG;oBACtB,GAAG,EAAE,cAAc,CAAC,GAAG;oBACvB,GAAG,EAAE,cAAc,CAAC,GAAG;iBAC1B,CAAC;gBAEF,EAAE,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC;oBAC7B,mBAAmB,CAAC,GAAG,CAAC,YAAY,GAAG,cAAc,CAAC,WAAW,CAAC;gBACtE,CAAC;gBACD,EAAE,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC;oBAC5B,mBAAmB,CAAC,GAAG,CAAC,WAAW,GAAG,cAAc,CAAC,UAAU,CAAC;gBACpE,CAAC;YACL,CAAC;YACD,MAAM,CAAC,mBAAmB,CAAC;QAC/B,CAAC;KAAA;IAEa,yCAAyC,CAAC,oBAAqD;;YACzG,MAAM,gBAAgB,GAAa,EAAE,CAAC;YACtC,GAAG,CAAC,CAAC,MAAM,WAAW,IAAI,oBAAoB,CAAC,CAAC,CAAC;gBAC7C,MAAM,CAAC,CAAC,WAAW,CAAC,oBAAoB,CAAC,CAAC,CAAC;oBACvC,KAAK,2CAAoB,CAAC,KAAK;wBAC3B,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;wBAC3C,KAAK,CAAC;oBACV,KAAK,2CAAoB,CAAC,aAAa;wBACnC,gBAAgB,CAAC,IAAI,CAAC,GAAG,GAAG,WAAW,CAAC,OAAO,CAAC,CAAC;wBACjD,KAAK,CAAC;gBACd,CAAC;YACL,CAAC;YACD,MAAM,CAAC,gBAAgB,CAAC;QAC5B,CAAC;KAAA;IAEa,2BAA2B,CAAC,MAA6B;;YACnE,MAAM,WAAW,GAAa,EAAE,CAAC;YAEjC,GAAG,CAAC,CAAC,MAAM,KAAK,IAAI,MAAM,CAAC,CAAC,CAAC;gBACzB,MAAM,SAAS,GAAG,MAAM,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;gBAClF,WAAW,CAAC,IAAI,CAAC;oBACb,IAAI,EAAE,KAAK,CAAC,IAAI;oBAChB,IAAI,EAAE,SAAS;iBAClB,CAAC,CAAC;YACP,CAAC;YACD,MAAM,CAAC,WAAW,CAAC;QACvB,CAAC;KAAA;IAEa,8BAA8B,CAAC,cAAyC;;YAClF,MAAM,cAAc,GAAa,EAAE,CAAC;YACpC,GAAG,CAAC,CAAC,MAAM,SAAS,IAAI,cAAc,CAAC,CAAC,CAAC;gBACrC,4BAA4B;gBAC5B,EAAE,CAAC,CAAC,SAAS,CAAC,YAAY,KAAK,oCAAa,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC7D,cAAc,CAAC,IAAI,CAAC;wBAChB,QAAQ,EAAE,SAAS,CAAC,QAAQ;wBAC5B,QAAQ,EAAE,SAAS,CAAC,QAAQ;wBAC5B,IAAI,EAAE,SAAS,CAAC,oBAAoB,CAAC,IAAI;wBACzC,EAAE,EAAE,SAAS,CAAC,MAAM;qBACvB,CAAC,CAAC;gBACP,CAAC;YACL,CAAC;YACD,MAAM,CAAC,cAAc,CAAC;QAC1B,CAAC;KAAA;IAGa,iBAAiB,CAAC,kBAAgD;;YAC5E,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;YACtE,MAAM,cAAc,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC;YACzF,MAAM,CAAC;gBACH,IAAI,EAAE,kBAAkB,CAAC,IAAI;gBAC7B,MAAM;gBACN,cAAc;aACjB,CAAC;QACN,CAAC;KAAA;IAEa,gBAAgB,CAAC,MAAwB;;YACnD,MAAM,CAAC;gBACH,IAAI,EAAE,MAAM,CAAC,IAAI;gBACjB,KAAK,EAAE;oBACH,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,KAAK;oBACzB,MAAM,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM;iBAC9B;aACJ,CAAC;QACN,CAAC;KAAA;IAEa,wBAAwB,CAAC,SAA8B;;YAEjE,IAAI,OAAO,CAAC;YAEZ,2CAA2C;YAC3C,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;gBAC9C,OAAO,GAAG;oBACN,IAAI,EAAE,SAAS,CAAC,qBAAqB,CAAC,IAAI;oBAC1C,OAAO,EAAE,SAAS,CAAC,qBAAqB,CAAC,OAAO;iBACnD,CAAC;YACN,CAAC;YAED,MAAM,CAAC,CAAC;oBACJ,QAAQ,EAAE,SAAS,CAAC,QAAQ;oBAC5B,UAAU,EAAE,SAAS,CAAC,SAAS;oBAC/B,cAAc,EAAE;wBACZ,QAAQ,EAAE,SAAS,CAAC,aAAa,CAAC,QAAQ;wBAC1C,aAAa,EAAE,SAAS,CAAC,aAAa,CAAC,aAAa;qBACvD;oBACD,OAAO;iBACV,CAAC,CAAC;QACP,CAAC;KAAA;IAEa,mBAAmB,CAAC,qBAAuD;;YACrF,MAAM,YAAY,GAAa,EAAE,CAAC;YAClC,GAAG,CAAC,CAAC,MAAM,IAAI,IAAI,qBAAqB,CAAC,CAAC,CAAC;gBACvC,YAAY,CAAC,IAAI,CAAC;oBACd,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,UAAU,EAAE,IAAI,CAAC,SAAS;iBAC7B,CAAC,CAAC;YACP,CAAC;YACD,MAAM,CAAC,YAAY,CAAC;QACxB,CAAC;KAAA;IAED,iBAAiB;IACH,iBAAiB,CAAC,kBAAiD;;YAC7E,MAAM,WAAW,GAAa,EAAE,CAAC;YACjC,GAAG,CAAC,CAAC,MAAM,GAAG,IAAI,kBAAkB,CAAC,CAAC,CAAC;gBACnC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;gBACnD,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAClC,CAAC;YACD,MAAM,CAAC,WAAW,CAAC;QACvB,CAAC;KAAA;IAEa,cAAc,CAAC,KAAkC;;YAC3D,2BAA2B;YAC3B,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC;oBACH,IAAI,EAAE,OAAO;oBACb,KAAK,EAAE,KAAK,CAAC,WAAW;oBACxB,KAAK,EAAE,MAAM,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,sBAAsB,CAAC;iBACrE,CAAC;YACN,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;gBACnC,MAAM,CAAC;oBACH,IAAI,EAAE,UAAU;oBAChB,EAAE,EAAE,KAAK,CAAC,QAAQ;oBAClB,KAAK,EAAE,KAAK,CAAC,WAAW;oBACxB,WAAW,EAAE,KAAK,CAAC,UAAU;oBAC7B,OAAO,EAAE,MAAM,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,sBAAsB,CAAC;iBACzE,CAAC;YACN,CAAC;QACL,CAAC;KAAA;IAEa,kBAAkB,CAAC,WAA8C;;YAC3E,MAAM,eAAe,GAAa,EAAE,CAAC;YACrC,GAAG,CAAC,CAAC,MAAM,WAAW,IAAI,WAAW,CAAC,CAAC,CAAC;gBACpC,eAAe,CAAC,IAAI,CAAC;oBACjB,GAAG,EAAE,WAAW,CAAC,GAAG;oBACpB,KAAK,EAAE,WAAW,CAAC,KAAK;iBAC3B,CAAC,CAAC;YACP,CAAC;YACD,MAAM,CAAC,eAAe,CAAC;QAC3B,CAAC;KAAA;IAEa,oBAAoB,CAAC,WAA8C;;YAC7E,MAAM,eAAe,GAAa,EAAE,CAAC;YACrC,GAAG,CAAC,CAAC,MAAM,WAAW,IAAI,WAAW,CAAC,CAAC,CAAC;gBACpC,eAAe,CAAC,IAAI,CAAC;oBACjB,IAAI,EAAE,WAAW,CAAC,GAAG;oBACrB,KAAK,EAAE,WAAW,CAAC,KAAK;oBACxB,OAAO;oBACP,kBAAkB;oBAClB,gBAAgB;oBAChB,gBAAgB;oBAChB,IAAI;iBACP,CAAC,CAAC;YACP,CAAC;YACD,MAAM,CAAC,eAAe,CAAC;QAC3B,CAAC;KAAA;CAEJ,CAAA;AApeY,kBAAkB;IAOtB,mBAAA,kBAAM,CAAC,iBAAK,CAAC,IAAI,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,gBAAI,CAAC,MAAM,CAAC,CAAA;IACtC,mBAAA,kBAAM,CAAC,iBAAK,CAAC,OAAO,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,mBAAO,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAA;qDAA8B,yCAAmB;GAR9G,kBAAkB,CAoe9B;AApeY,gDAAkB","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { inject, named } from 'inversify';\nimport * as _ from 'lodash';\nimport { Logger as LoggerType } from '../../core/Logger';\nimport { Types, Core, Targets } from '../../constants';\nimport { ListingItemCreateRequest } from '../requests/ListingItemCreateRequest';\nimport { ListingItemMessage } from '../messages/ListingItemMessage';\nimport { ItemCategoryFactory } from './ItemCategoryFactory';\nimport * as resources from 'resources';\nimport { ShippingAvailability } from '../enums/ShippingAvailability';\nimport { ItemInformationCreateRequest } from '../requests/ItemInformationCreateRequest';\nimport { LocationMarkerCreateRequest } from '../requests/LocationMarkerCreateRequest';\nimport { ItemImageCreateRequest } from '../requests/ItemImageCreateRequest';\nimport { ItemImageDataCreateRequest } from '../requests/ItemImageDataCreateRequest';\nimport { ImageVersions } from '../../core/helpers/ImageVersionEnumType';\nimport { PaymentInformationCreateRequest } from '../requests/PaymentInformationCreateRequest';\nimport { EscrowCreateRequest } from '../requests/EscrowCreateRequest';\nimport { EscrowRatioCreateRequest } from '../requests/EscrowRatioCreateRequest';\nimport { ItemPriceCreateRequest } from '../requests/ItemPriceCreateRequest';\nimport { ShippingPriceCreateRequest } from '../requests/ShippingPriceCreateRequest';\nimport { CryptocurrencyAddressCreateRequest } from '../requests/CryptocurrencyAddressCreateRequest';\nimport { MessagingInformationCreateRequest } from '../requests/MessagingInformationCreateRequest';\nimport { ListingItemObjectCreateRequest } from '../requests/ListingItemObjectCreateRequest';\nimport { ListingItemObjectDataCreateRequest } from '../requests/ListingItemObjectDataCreateRequest';\nimport { MessagingProtocolType } from '../enums/MessagingProtocolType';\nimport { ImageDataProtocolType } from '../enums/ImageDataProtocolType';\nimport { ItemLocationCreateRequest } from '../requests/ItemLocationCreateRequest';\n\nexport class ListingItemFactory {\n\n    public log: LoggerType;\n\n    private dayMilliseconds = 24 * 60 * 60 * 1000;\n\n    constructor(\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType,\n        @inject(Types.Factory) @named(Targets.Factory.ItemCategoryFactory) private itemCategoryFactory: ItemCategoryFactory\n    ) {\n        this.log = new Logger(__filename);\n    }\n\n    /**\n     * Creates a ListingItemMessage from given data\n     *\n     * @param {module:resources.ListingItemTemplate} listingItemTemplate\n     * @param {string} proposalHash\n     * @param {number} expiryTime\n     * @returns {Promise<ListingItemMessage>}\n     */\n    public async getMessage(listingItemTemplate: resources.ListingItemTemplate): Promise<ListingItemMessage> {\n\n        const information = await this.getMessageInformation(listingItemTemplate.ItemInformation);\n        const payment = await this.getMessagePayment(listingItemTemplate.PaymentInformation);\n        const messaging = await this.getMessageMessaging(listingItemTemplate.MessagingInformation);\n        const objects = await this.getMessageObjects(listingItemTemplate.ListingItemObjects);\n\n        const message = {\n            hash: listingItemTemplate.hash,\n            information,\n            payment,\n            messaging,\n            objects\n        } as ListingItemMessage;\n\n        return message;\n    }\n\n    /**\n     *\n     * @param {ListingItemMessage} listingItemMessage\n     * @param {module:resources.SmsgMessage} smsgMessage\n     * @param {number} marketId\n     * @param {module:resources.ItemCategory} rootCategory\n     * @returns {Promise<ListingItemCreateRequest>}\n     */\n    public async getModel(listingItemMessage: ListingItemMessage, smsgMessage: resources.SmsgMessage, marketId: number,\n                          rootCategory: resources.ItemCategory): Promise<ListingItemCreateRequest> {\n\n        const itemInformation = await this.getModelItemInformation(listingItemMessage.information, rootCategory);\n        const paymentInformation = await this.getModelPaymentInformation(listingItemMessage.payment);\n        const messagingInformation = await this.getModelMessagingInformation(listingItemMessage.messaging);\n        const listingItemObjects = await this.getModelListingItemObjects(listingItemMessage.objects);\n\n        return {\n            hash: listingItemMessage.hash,\n            seller: smsgMessage.from,\n            market_id: marketId,\n            expiryTime: smsgMessage.daysretention,\n            postedAt: smsgMessage.sent,\n            expiredAt: smsgMessage.expiration,\n            receivedAt: smsgMessage.received,\n            itemInformation,\n            paymentInformation,\n            messagingInformation,\n            listingItemObjects\n        } as ListingItemCreateRequest;\n    }\n\n    // ---------------\n    // MODEL\n    // ---------------\n    private async getModelListingItemObjects(objects: any[]): Promise<ListingItemObjectCreateRequest[]> {\n        const objectArray: ListingItemObjectCreateRequest[] = [];\n        for (const object of objects) {\n            let objectData;\n            if ('TABLE' === object.type) {\n                objectData = await this.getModelObjectDataForTypeTable(object['table']);\n            } else if ('DROPDOWN' === object.type) {\n                objectData = await this.getModelObjectDataForTypeDropDown(object['options']);\n            }\n            objectArray.push({\n                type: object.type,\n                description: object.title,\n                listingItemObjectDatas: objectData\n            } as ListingItemObjectCreateRequest);\n        }\n        return objectArray;\n    }\n\n    private async getModelObjectDataForTypeTable(objectDatas: any): Promise<ListingItemObjectDataCreateRequest[]> {\n        const objectDataArray: ListingItemObjectDataCreateRequest[] = [];\n        for (const objectData of objectDatas) {\n            objectDataArray.push({\n                key: objectData.key,\n                value: objectData.value\n            } as ListingItemObjectDataCreateRequest);\n        }\n        return objectDataArray;\n    }\n\n    private async getModelObjectDataForTypeDropDown(objectDatas: any): Promise<ListingItemObjectDataCreateRequest[]> {\n        const objectDataArray: ListingItemObjectDataCreateRequest[] = [];\n        for (const objectData of objectDatas) {\n            objectDataArray.push({\n                key: objectData.name,\n                value: objectData.value\n            } as ListingItemObjectDataCreateRequest);\n        }\n        return objectDataArray;\n    }\n\n    private async getModelMessagingInformation(messaging: any): Promise<MessagingInformationCreateRequest[]> {\n        const messagingArray: MessagingInformationCreateRequest[] = [];\n        for (const messagingData of messaging) {\n            messagingArray.push({\n                protocol: MessagingProtocolType[messagingData.protocol],\n                publicKey: messagingData.public_key\n            } as MessagingInformationCreateRequest);\n        }\n        return messagingArray;\n    }\n\n    private async getModelPaymentInformation(payment: any): Promise<PaymentInformationCreateRequest> {\n        const escrow = await this.getModelEscrow(payment.escrow);\n        const itemPrice = await this.getModelItemPrice(payment.cryptocurrency);\n\n        return {\n            type: payment.type,\n            escrow,\n            itemPrice\n        } as PaymentInformationCreateRequest;\n    }\n\n    private async getModelItemPrice(cryptocurrency: any): Promise<ItemPriceCreateRequest> {\n        const shippingPrice = await this.getModelShippingPrice(cryptocurrency[0].shipping_price);\n        let cryptocurrencyAddress;\n        if (!_.isEmpty(cryptocurrency[0].address)) {\n            cryptocurrencyAddress = await this.getModelCryptocurrencyAddress(cryptocurrency[0].address);\n        }\n        return {\n            currency: cryptocurrency[0].currency,\n            basePrice: cryptocurrency[0].base_price,\n            shippingPrice,\n            cryptocurrencyAddress\n        } as ItemPriceCreateRequest;\n    }\n\n    private async getModelShippingPrice(shippingPrice: any): Promise<ShippingPriceCreateRequest> {\n        return {\n            domestic: shippingPrice.domestic,\n            international: shippingPrice.international\n        } as ShippingPriceCreateRequest;\n    }\n\n    private async getModelCryptocurrencyAddress(cryptocurrencyAddress: any): Promise<CryptocurrencyAddressCreateRequest> {\n        return {\n            type: cryptocurrencyAddress.type,\n            address: cryptocurrencyAddress.address\n        } as CryptocurrencyAddressCreateRequest;\n    }\n\n    private async getModelEscrow(escrow: any): Promise<EscrowCreateRequest> {\n        const ratio = await this.getModelEscrowRatio(escrow.ratio);\n        return {\n            type: escrow.type,\n            ratio\n        } as EscrowCreateRequest;\n    }\n\n    private async getModelEscrowRatio(ratio: any): Promise<EscrowRatioCreateRequest> {\n        return {\n            buyer: ratio.buyer,\n            seller: ratio.seller\n        } as EscrowRatioCreateRequest;\n    }\n\n    private async getModelItemInformation(information: any, rootCategory: resources.ItemCategory): Promise<ItemInformationCreateRequest> {\n        const itemCategory = await this.itemCategoryFactory.getModel(information.category, rootCategory);\n        const itemLocation = await this.getModelLocation(information.location);\n        const shippingDestinations = await this.getModelShippingDestinations(information.shipping_destinations);\n        const itemImages = await this.getModelImages(information.images);\n\n        return {\n            title: information.title,\n            shortDescription: information.short_description,\n            longDescription: information.long_description,\n            itemCategory,\n            itemLocation,\n            shippingDestinations,\n            itemImages\n        } as ItemInformationCreateRequest;\n    }\n\n    private async getModelLocation(location: any): Promise<ItemLocationCreateRequest> {\n        const locationObject: any = {};\n        const region = location.country;\n        const address = location.address;\n\n        if (region) {\n            locationObject.region = region;\n        }\n        if (address) {\n            locationObject.address = address;\n        }\n\n        if (location.gps) {\n            const locationMarker = await this.getModelLocationMarker(location.gps);\n            locationObject.locationMarker = locationMarker;\n\n        }\n\n        return locationObject;\n    }\n\n    private async getModelLocationMarker(gps: any): Promise<LocationMarkerCreateRequest> {\n        const lat: number = gps.lat;\n        const lng: number = gps.lng;\n        const locationMarker = {\n            lat,\n            lng\n        } as LocationMarkerCreateRequest;\n\n        if (gps.marker_title) {\n            locationMarker.markerTitle = gps.marker_title;\n        }\n        if (gps.marker_text) {\n            locationMarker.markerText = gps.marker_text;\n        }\n        return locationMarker;\n    }\n\n    private async getModelShippingDestinations(shippingDestinations: string[]): Promise<resources.ShippingDestination[]> {\n\n        const destinations: resources.ShippingDestination[] = [];\n        for (const destination of shippingDestinations) {\n\n            let shippingAvailability = ShippingAvailability.SHIPS;\n            let country = destination;\n\n            if (destination.charAt(0) === '-') {\n                shippingAvailability = ShippingAvailability.DOES_NOT_SHIP;\n                country = destination.substring(1);\n            }\n\n            destinations.push({\n                country,\n                shippingAvailability\n            } as resources.ShippingDestination);\n        }\n\n        return destinations;\n    }\n\n    private async getModelImages(images: any[]): Promise<ItemImageCreateRequest[]> {\n\n        const imageCreateRequests: ItemImageCreateRequest[] = [];\n        for (const image of images) {\n            const data = await this.getModelImageData(image.data);\n            imageCreateRequests.push({\n                hash: image.hash,\n                data\n            } as ItemImageCreateRequest);\n        }\n        return imageCreateRequests;\n    }\n\n    private async getModelImageData(imageDatas: any[]): Promise<ItemImageDataCreateRequest[]> {\n\n        const imageDataCreateRequests: ItemImageDataCreateRequest[] = [];\n        for (const imageData of imageDatas) {\n            imageDataCreateRequests.push({\n                dataId: imageData.id,\n                protocol: imageData.protocol,\n                imageVersion: ImageVersions.ORIGINAL.propName,\n                encoding: imageData.encoding,\n                data: imageData.data\n            } as ItemImageDataCreateRequest);\n        }\n        return imageDataCreateRequests;\n    }\n\n\n    // ---------------\n    // MESSAGE\n    // ---------------\n    private async getMessageInformation(itemInformation: resources.ItemInformation): Promise<any> {\n        const category = await this.itemCategoryFactory.getArray(itemInformation.ItemCategory);\n        const location = await this.getMessageInformationLocation(itemInformation.ItemLocation);\n        const shippingDestinations = await this.getMessageInformationShippingDestinations(itemInformation.ShippingDestinations);\n        const images = await this.getMessageInformationImages(itemInformation.ItemImages);\n\n        return {\n            title: itemInformation.title,\n            short_description: itemInformation.shortDescription,\n            long_description: itemInformation.longDescription,\n            category,\n            location,\n            shipping_destinations: shippingDestinations,\n            images\n        };\n    }\n\n    private async getMessageInformationLocation(itemLocation: resources.ItemLocation): Promise<any> {\n        const locationMarker: resources.LocationMarker = itemLocation.LocationMarker;\n        const informationLocation: any = {};\n        if (itemLocation.region) {\n            informationLocation.country = itemLocation.region;\n        }\n        if (itemLocation.address) {\n            informationLocation.address = itemLocation.address;\n        }\n        if (locationMarker) {\n            informationLocation.gps = {\n                lng: locationMarker.lng,\n                lat: locationMarker.lat\n            };\n\n            if (locationMarker.markerTitle) {\n                informationLocation.gps.marker_title = locationMarker.markerTitle;\n            }\n            if (locationMarker.markerText) {\n                informationLocation.gps.marker_text = locationMarker.markerText;\n            }\n        }\n        return informationLocation;\n    }\n\n    private async getMessageInformationShippingDestinations(shippingDestinations: resources.ShippingDestination[]): Promise<string[]> {\n        const shippingDesArray: string[] = [];\n        for (const destination of shippingDestinations) {\n            switch (destination.shippingAvailability) {\n                case ShippingAvailability.SHIPS:\n                    shippingDesArray.push(destination.country);\n                    break;\n                case ShippingAvailability.DOES_NOT_SHIP:\n                    shippingDesArray.push('-' + destination.country);\n                    break;\n            }\n        }\n        return shippingDesArray;\n    }\n\n    private async getMessageInformationImages(images: resources.ItemImage[]): Promise<object[]> {\n        const imagesArray: object[] = [];\n\n        for (const image of images) {\n            const imageData = await this.getMessageInformationImageData(image.ItemImageDatas);\n            imagesArray.push({\n                hash: image.hash,\n                data: imageData\n            });\n        }\n        return imagesArray;\n    }\n\n    private async getMessageInformationImageData(itemImageDatas: resources.ItemImageData[]): Promise<object[]> {\n        const imageDataArray: object[] = [];\n        for (const imageData of itemImageDatas) {\n            // we only want the original\n            if (imageData.imageVersion === ImageVersions.ORIGINAL.propName) {\n                imageDataArray.push({\n                    protocol: imageData.protocol,\n                    encoding: imageData.encoding,\n                    data: imageData.ItemImageDataContent.data,\n                    id: imageData.dataId\n                });\n            }\n        }\n        return imageDataArray;\n    }\n\n\n    private async getMessagePayment(paymentInformation: resources.PaymentInformation): Promise<object> {\n        const escrow = await this.getMessageEscrow(paymentInformation.Escrow);\n        const cryptocurrency = await this.getMessageCryptoCurrency(paymentInformation.ItemPrice);\n        return {\n            type: paymentInformation.type,\n            escrow,\n            cryptocurrency\n        };\n    }\n\n    private async getMessageEscrow(escrow: resources.Escrow): Promise<object> {\n        return {\n            type: escrow.type,\n            ratio: {\n                buyer: escrow.Ratio.buyer,\n                seller: escrow.Ratio.seller\n            }\n        };\n    }\n\n    private async getMessageCryptoCurrency(itemPrice: resources.ItemPrice): Promise<object> {\n\n        let address;\n\n        // not using CryptocurrencyAddress in alpha\n        if (!_.isEmpty(itemPrice.CryptocurrencyAddress)) {\n            address = {\n                type: itemPrice.CryptocurrencyAddress.type,\n                address: itemPrice.CryptocurrencyAddress.address\n            };\n        }\n\n        return [{\n            currency: itemPrice.currency,\n            base_price: itemPrice.basePrice,\n            shipping_price: {\n                domestic: itemPrice.ShippingPrice.domestic,\n                international: itemPrice.ShippingPrice.international\n            },\n            address\n        }];\n    }\n\n    private async getMessageMessaging(messagingInformations: resources.MessagingInformation[]): Promise<object[]> {\n        const messageArray: object[] = [];\n        for (const info of messagingInformations) {\n            messageArray.push({\n                protocol: info.protocol,\n                public_key: info.publicKey\n            });\n        }\n        return messageArray;\n    }\n\n    // objects fields\n    private async getMessageObjects(listingItemObjects: resources.ListingItemObject[]): Promise<any> {\n        const objectArray: object[] = [];\n        for (const lio of listingItemObjects) {\n            const objectValue = await this.getObjectArray(lio);\n            objectArray.push(objectValue);\n        }\n        return objectArray;\n    }\n\n    private async getObjectArray(value: resources.ListingItemObject): Promise<any> {\n        // check Table and Dropdown\n        if (value.type === 'TABLE') {\n            return {\n                type: 'TABLE',\n                title: value.description,\n                table: await this.getObjectDataTable(value.ListingItemObjectDatas)\n            };\n        } else if (value.type === 'DROPDOWN') {\n            return {\n                type: 'DROPDOWN',\n                id: value.objectId,\n                title: value.description,\n                force_input: value.forceInput,\n                options: await this.getObjectDataOptions(value.ListingItemObjectDatas)\n            };\n        }\n    }\n\n    private async getObjectDataTable(objectDatas: resources.ListingItemObjectData[]): Promise<any> {\n        const objectDataArray: object[] = [];\n        for (const objectValue of objectDatas) {\n            objectDataArray.push({\n                key: objectValue.key,\n                value: objectValue.value\n            });\n        }\n        return objectDataArray;\n    }\n\n    private async getObjectDataOptions(objectDatas: resources.ListingItemObjectData[]): Promise<any> {\n        const objectDataArray: object[] = [];\n        for (const objectValue of objectDatas) {\n            objectDataArray.push({\n                name: objectValue.key,\n                value: objectValue.value\n                // todo\n                // add_to_price: [\n                //     50000000,\n                //     300000000\n                // ]\n            });\n        }\n        return objectDataArray;\n    }\n\n}\n"]}