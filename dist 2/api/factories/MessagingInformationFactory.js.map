{"version":3,"file":"MessagingInformationFactory.js","sourceRoot":"","sources":["../../../src/api/factories/MessagingInformationFactory.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF,yCAA0C;AAE1C,4BAA4B;AAE5B,+CAAuD;AAKvD,IAAa,2BAA2B,GAAxC;IAII,YACmD,MAAyB;QAAzB,WAAM,GAAN,MAAM,CAAmB;QAExE,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAEM,GAAG,CAAC,OAAiB;QACxB,MAAM,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,KAAK;YACtC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,EAAE;gBAChB,QAAQ,EAAE,KAAK,CAAC,UAAU,CAAC;gBAC3B,SAAS,EAAE,KAAK,CAAC,YAAY,CAAC;aACjC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,YAAmB,CAAC;IAC/B,CAAC;CAEJ,CAAA;AApBY,2BAA2B;IAK/B,mBAAA,kBAAM,CAAC,iBAAK,CAAC,IAAI,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,gBAAI,CAAC,MAAM,CAAC,CAAA;;GALlC,2BAA2B,CAoBvC;AApBY,kEAA2B","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { inject, named } from 'inversify';\nimport * as crypto from 'crypto-js';\nimport * as _ from 'lodash';\nimport { Logger as LoggerType } from '../../core/Logger';\nimport { Types, Core, Targets } from '../../constants';\nimport { MessagingInformation } from '../models/MessagingInformation';\n\nimport { MessagingProtocolType } from '../enums/MessagingProtocolType';\n\nexport class MessagingInformationFactory {\n\n    public log: LoggerType;\n\n    constructor(\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType\n    ) {\n        this.log = new Logger(__filename);\n    }\n\n    public get(message: string[]): Promise<MessagingInformation> {\n        const messInfoData = _.map(message, (value) => {\n            return _.assign({}, {\n                protocol: value['protocol'],\n                publicKey: value['public_key']\n            });\n        });\n        return messInfoData as any;\n    }\n\n}\n"]}