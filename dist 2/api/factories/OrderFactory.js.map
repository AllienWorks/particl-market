{"version":3,"file":"OrderFactory.js","sourceRoot":"","sources":["../../../src/api/factories/OrderFactory.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAGjF,yCAA0C;AAE1C,+CAAuD;AAEvD,4DAAyD;AACzD,qEAAkE;AAOlE,sDAAmD;AACnD,sDAAmD;AAEnD,8DAA2D;AAC3D,oEAAiE;AAEjE,IAAa,YAAY,GAAzB;IAII,YACmD,MAAyB;QAAzB,WAAM,GAAN,MAAM,CAAmB;QAExE,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAED;;;;;OAKG;IACU,eAAe,CAAC,GAAkB;;YAE3C,6DAA6D;YAC7D,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,KAAK,+BAAc,CAAC,UAAU,CAAC,CAAC,CAAC;gBAE3C,MAAM,OAAO,GAAyB,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;gBACnE,MAAM,UAAU,GAA6B,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;gBACrE,MAAM,KAAK,GAAW,GAAG,CAAC,MAAM,CAAC;gBACjC,MAAM,MAAM,GAAW,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC;gBAE9C,MAAM,kBAAkB,GAAG;oBACvB,OAAO;oBACP,UAAU;oBACV,KAAK;oBACL,MAAM;iBACa,CAAC;gBAExB,4CAA4C;gBAC5C,kBAAkB,CAAC,IAAI,GAAG,uBAAU,CAAC,OAAO,CAAC,kBAAkB,EAAE,uCAAkB,CAAC,mBAAmB,CAAC,CAAC;gBACzG,MAAM,CAAC,kBAAkB,CAAC;YAE9B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,IAAI,mCAAgB,CAAC,+CAA+C,CAAC,CAAC;YAChF,CAAC;QACL,CAAC;KAAA;IAEO,kBAAkB,CAAC,GAAkB;QACzC,MAAM,CAAC;YACH,UAAU,EAAE,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE;YAC1C,SAAS,EAAE,GAAG,CAAC,eAAe,CAAC,SAAS;YACxC,QAAQ,EAAE,GAAG,CAAC,eAAe,CAAC,QAAQ;YACtC,YAAY,EAAE,GAAG,CAAC,eAAe,CAAC,YAAY;YAC9C,YAAY,EAAE,GAAG,CAAC,eAAe,CAAC,YAAY;YAC9C,IAAI,EAAE,GAAG,CAAC,eAAe,CAAC,IAAI;YAC9B,KAAK,EAAE,GAAG,CAAC,eAAe,CAAC,KAAK;YAChC,OAAO,EAAE,GAAG,CAAC,eAAe,CAAC,OAAO;YACpC,OAAO,EAAE,GAAG,CAAC,eAAe,CAAC,OAAO;YACpC,IAAI,EAAE,yBAAW,CAAC,cAAc;SACX,CAAC;IAC9B,CAAC;IAEO,aAAa,CAAC,GAAkB;QAEpC,MAAM,uBAAuB,GAA6B,EAAE,CAAC;QAC7D,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAEhE,MAAM,sBAAsB,GAAG;YAC3B,MAAM,EAAE,GAAG,CAAC,EAAE;YACd,QAAQ,EAAE,GAAG,CAAC,WAAW,CAAC,IAAI;YAC9B,MAAM,EAAE,yBAAW,CAAC,eAAe;YACnC,gBAAgB;SACO,CAAC;QAE5B,wCAAwC;QACxC,uBAAuB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QACrD,MAAM,CAAC,uBAAuB,CAAC;IACnC,CAAC;IAEO,mBAAmB,CAAC,QAA6B;QACrD,MAAM,6BAA6B,GAAmC,EAAE,CAAC;QACzE,GAAG,CAAC,CAAC,MAAM,OAAO,IAAI,QAAQ,CAAC,CAAC,CAAC;YAC7B,MAAM,4BAA4B,GAAG;gBACjC,MAAM,EAAE,OAAO,CAAC,MAAM;gBACtB,SAAS,EAAE,OAAO,CAAC,SAAS;aACC,CAAC;YAClC,6BAA6B,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC;QACrE,CAAC;QACD,MAAM,CAAC,6BAA6B,CAAC;IACzC,CAAC;CAEJ,CAAA;AAtFY,YAAY;IAKhB,mBAAA,kBAAM,CAAC,iBAAK,CAAC,IAAI,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,gBAAI,CAAC,MAAM,CAAC,CAAA;;GALlC,YAAY,CAsFxB;AAtFY,oCAAY","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport * as _ from 'lodash';\nimport { inject, named } from 'inversify';\nimport { Logger as LoggerType } from '../../core/Logger';\nimport { Types, Core, Targets } from '../../constants';\nimport { BidMessage } from '../messages/BidMessage';\nimport { BidMessageType } from '../enums/BidMessageType';\nimport { MessageException } from '../exceptions/MessageException';\nimport { BidCreateRequest } from '../requests/BidCreateRequest';\nimport * as resources from 'resources';\nimport { AddressCreateRequest } from '../requests/AddressCreateRequest';\nimport { OrderCreateRequest } from '../requests/OrderCreateRequest';\nimport { IsEnum, IsNotEmpty } from 'class-validator';\nimport { OrderItemCreateRequest } from '../requests/OrderItemCreateRequest';\nimport { AddressType } from '../enums/AddressType';\nimport { OrderStatus } from '../enums/OrderStatus';\nimport { OrderItemObjectCreateRequest } from '../requests/OrderItemObjectCreateRequest';\nimport { ObjectHash } from '../../core/helpers/ObjectHash';\nimport { HashableObjectType } from '../enums/HashableObjectType';\n\nexport class OrderFactory {\n\n    public log: LoggerType;\n\n    constructor(\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType\n    ) {\n        this.log = new Logger(__filename);\n    }\n\n    /**\n     * create a OrderCreateRequest\n     *\n     * @param {\"resources\".Bid} bid\n     * @returns {Promise<OrderCreateRequest>}\n     */\n    public async getModelFromBid(bid: resources.Bid): Promise<OrderCreateRequest> {\n\n        // only bids with action MPA_ACCEPT can be converted to Order\n        if (bid.action === BidMessageType.MPA_ACCEPT) {\n\n            const address: AddressCreateRequest = this.getShippingAddress(bid);\n            const orderItems: OrderItemCreateRequest[] = this.getOrderItems(bid);\n            const buyer: string = bid.bidder;\n            const seller: string = bid.ListingItem.seller;\n\n            const orderCreateRequest = {\n                address,\n                orderItems,\n                buyer,\n                seller\n            } as OrderCreateRequest;\n\n            // can we move this hashing to service level\n            orderCreateRequest.hash = ObjectHash.getHash(orderCreateRequest, HashableObjectType.ORDER_CREATEREQUEST);\n            return orderCreateRequest;\n\n        } else {\n            throw new MessageException('Cannot create Order from this BidMessageType.');\n        }\n    }\n\n    private getShippingAddress(bid: resources.Bid): AddressCreateRequest {\n        return {\n            profile_id: bid.ShippingAddress.Profile.id,\n            firstName: bid.ShippingAddress.firstName,\n            lastName: bid.ShippingAddress.lastName,\n            addressLine1: bid.ShippingAddress.addressLine1,\n            addressLine2: bid.ShippingAddress.addressLine2,\n            city: bid.ShippingAddress.city,\n            state: bid.ShippingAddress.state,\n            zipCode: bid.ShippingAddress.zipCode,\n            country: bid.ShippingAddress.country,\n            type: AddressType.SHIPPING_ORDER\n        } as AddressCreateRequest;\n    }\n\n    private getOrderItems(bid: resources.Bid): OrderItemCreateRequest[] {\n\n        const orderItemCreateRequests: OrderItemCreateRequest[] = [];\n        const orderItemObjects = this.getOrderItemObjects(bid.BidDatas);\n\n        const orderItemCreateRequest = {\n            bid_id: bid.id,\n            itemHash: bid.ListingItem.hash,\n            status: OrderStatus.AWAITING_ESCROW,\n            orderItemObjects\n        } as OrderItemCreateRequest;\n\n        // in alpha 1 order contains 1 orderItem\n        orderItemCreateRequests.push(orderItemCreateRequest);\n        return orderItemCreateRequests;\n    }\n\n    private getOrderItemObjects(bidDatas: resources.BidData[]): OrderItemObjectCreateRequest[] {\n        const orderItemObjectCreateRequests: OrderItemObjectCreateRequest[] = [];\n        for (const bidData of bidDatas) {\n            const orderItemObjectCreateRequest = {\n                dataId: bidData.dataId,\n                dataValue: bidData.dataValue\n            } as OrderItemObjectCreateRequest;\n            orderItemObjectCreateRequests.push(orderItemObjectCreateRequest);\n        }\n        return orderItemObjectCreateRequests;\n    }\n\n}\n"]}