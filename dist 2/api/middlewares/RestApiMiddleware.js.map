{"version":3,"file":"RestApiMiddleware.js","sourceRoot":"","sources":["../../../src/api/middlewares/RestApiMiddleware.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF,yCAA0C;AAE1C,+CAAuD;AACvD,8EAA2E;AAE3E,IAAa,iBAAiB,GAA9B;IAII,YACmF,qBAA4C,EACnF,MAAyB;QADc,0BAAqB,GAArB,qBAAqB,CAAuB;QAMxH,QAAG,GAAG,CAAC,GAAsB,EAAE,GAAuB,EAAE,IAA4B;YAEvF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC,CAAC;gBACxC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,oDAAoD,CAAC,CAAC;YACjF,CAAC;YAED,IAAI,EAAE,CAAC;QACX,CAAC,CAAA;QAVG,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;CAWJ,CAAA;AApBY,iBAAiB;IAKrB,mBAAA,kBAAM,CAAC,iBAAK,CAAC,QAAQ,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,mBAAO,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAA;IACrE,mBAAA,kBAAM,CAAC,iBAAK,CAAC,IAAI,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,gBAAI,CAAC,MAAM,CAAC,CAAA;6CAD+D,6CAAqB;GALtH,iBAAiB,CAoB7B;AApBY,8CAAiB","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { inject, named } from 'inversify';\nimport { Logger as LoggerType } from '../../core/Logger';\nimport { Types, Core, Targets } from '../../constants';\nimport { ServerStartedListener } from '../listeners/ServerStartedListener';\n\nexport class RestApiMiddleware implements interfaces.Middleware {\n\n    public log: LoggerType;\n\n    constructor(\n        @inject(Types.Listener) @named(Targets.Listener.ServerStartedListener) private serverStartedListener: ServerStartedListener,\n        @inject(Types.Core) @named(Core.Logger) Logger: typeof LoggerType\n    ) {\n        this.log = new Logger(__filename);\n    }\n\n    public use = (req: myExpress.Request, res: myExpress.Response, next: myExpress.NextFunction): void => {\n\n        if (!this.serverStartedListener.isStarted) {\n            return res.failed(503, 'Server not fully started yet, is particld running?');\n        }\n\n        next();\n    }\n\n}\n"]}