{"version":3,"file":"RpcMiddleware.js","sourceRoot":"","sources":["../../../src/api/middlewares/RpcMiddleware.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF,yCAA0C;AAE1C,+CAAuD;AACvD,8EAA2E;AAC3E,mCAAmC;AAEnC,IAAa,aAAa,GAA1B;IAII,YACmF,qBAA4C,EACnF,MAAyB;QADc,0BAAqB,GAArB,qBAAqB,CAAuB;QAMxH,QAAG,GAAG,CAAC,GAAsB,EAAE,GAAuB,EAAE,IAA4B;YAEvF,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC,CAAC;gBACxC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,oDAAoD,CAAC,CAAC;YACjF,CAAC;YAED,uBAAuB;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACrC,IAAI,EAAE,CAAC;YACX,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,8BAA8B,CAAC,CAAC;YAC3D,CAAC;QACL,CAAC,CAAA;QAfG,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAgBM,wBAAwB,CAAC,OAA0B;QACtD,MAAM,CAAC,CACH,OAAO;eACJ,OAAO,CAAC,OAAO;eACf,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC;eAC/B,OAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC;eAChE,OAAO,CAAC,IAAI;eACZ,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,QAAQ;eAClC,OAAO,CAAC,IAAI,CAAC,OAAO,KAAK,KAAK;eAC9B,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,QAAQ;eACzC,CACC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,WAAW;mBACzC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;mBAClC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,QAAQ,CAAC,CACxE;eACE,CACC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,WAAW;mBACrC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,QAAQ;mBACrC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,QAAQ;mBACrC,OAAO,CAAC,IAAI,CAAC,EAAE,KAAK,IAAI,CAC9B,CACJ,CAAC;IACN,CAAC;CACJ,CAAA;AAhDY,aAAa;IAKjB,mBAAA,kBAAM,CAAC,iBAAK,CAAC,QAAQ,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,mBAAO,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAA;IACrE,mBAAA,kBAAM,CAAC,iBAAK,CAAC,IAAI,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,gBAAI,CAAC,MAAM,CAAC,CAAA;6CAD+D,6CAAqB;GALtH,aAAa,CAgDzB;AAhDY,sCAAa","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { inject, named } from 'inversify';\nimport { Logger as LoggerType } from '../../core/Logger';\nimport { Types, Core, Targets } from '../../constants';\nimport { ServerStartedListener } from '../listeners/ServerStartedListener';\n// import { app } from '../../app';\n\nexport class RpcMiddleware implements interfaces.Middleware {\n\n    public log: LoggerType;\n\n    constructor(\n        @inject(Types.Listener) @named(Targets.Listener.ServerStartedListener) private serverStartedListener: ServerStartedListener,\n        @inject(Types.Core) @named(Core.Logger) Logger: typeof LoggerType\n    ) {\n        this.log = new Logger(__filename);\n    }\n\n    public use = (req: myExpress.Request, res: myExpress.Response, next: myExpress.NextFunction): void => {\n\n        if (!this.serverStartedListener.isStarted) {\n            return res.failed(503, 'Server not fully started yet, is particld running?');\n        }\n\n        // validate rpc request\n        if (this.isValidVersionTwoRequest(req)) {\n            next();\n        } else {\n            return res.failed(400, 'Invalid JSON-RPC 2.0 request');\n        }\n    }\n\n    public isValidVersionTwoRequest(request: myExpress.Request): boolean {\n        return (\n            request\n            && request.headers\n            && request.headers['content-type']\n            && request.headers['content-type'].indexOf('application/json') > -1\n            && request.body\n            && typeof (request.body) === 'object'\n            && request.body.jsonrpc === '2.0'\n            && typeof (request.body.method) === 'string'\n            && (\n                typeof (request.body.params) === 'undefined'\n                || Array.isArray(request.body.params)\n                || (request.body.params && typeof (request.body.params) === 'object')\n            )\n            && (\n                typeof (request.body.id) === 'undefined'\n                || typeof (request.body.id) === 'string'\n                || typeof (request.body.id) === 'number'\n                || request.body.id === null\n            )\n        );\n    }\n}\n"]}