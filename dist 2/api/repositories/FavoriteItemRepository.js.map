{"version":3,"file":"FavoriteItemRepository.js","sourceRoot":"","sources":["../../../src/api/repositories/FavoriteItemRepository.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport * as Bookshelf from 'bookshelf';\nimport { inject, named } from 'inversify';\nimport { Types, Core, Targets } from '../../constants';\nimport { FavoriteItem } from '../models/FavoriteItem';\nimport { DatabaseException } from '../exceptions/DatabaseException';\nimport { NotFoundException } from '../exceptions/NotFoundException';\nimport { Logger as LoggerType } from '../../core/Logger';\n\nexport class FavoriteItemRepository {\n\n    public log: LoggerType;\n\n    constructor(\n        @inject(Types.Model) @named(Targets.Model.FavoriteItem) public FavoriteItemModel: typeof FavoriteItem,\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType\n    ) {\n        this.log = new Logger(__filename);\n    }\n\n    public async findAll(): Promise<Bookshelf.Collection<FavoriteItem>> {\n        const list = await this.FavoriteItemModel.fetchAll();\n        return list as Bookshelf.Collection<FavoriteItem>;\n    }\n\n    public async findOne(id: number, withRelated: boolean = true): Promise<FavoriteItem> {\n        return await this.FavoriteItemModel.fetchById(id, withRelated);\n    }\n\n    /**\n     * search favorite item by profile id and item id\n     *\n     * @param {number} profileId\n     * @param {number} itemId\n     * @param {boolean} withRelated\n     * @returns {Promise<FavoriteItem>}\n     */\n    public async findOneByProfileIdAndListingItemId(profileId: number, itemId: number, withRelated: boolean = true): Promise<FavoriteItem> {\n        return await this.FavoriteItemModel.fetchByProfileIdAndListingItemId(profileId, itemId, withRelated);\n    }\n\n    public async findAllByProfileId(profileId: number, withRelated: boolean): Promise<Bookshelf.Collection<FavoriteItem>> {\n        return await this.FavoriteItemModel.fetchFavoritesByProfileId(profileId, withRelated);\n    }\n\n    public async create(data: any): Promise<FavoriteItem> {\n        const favoriteItem = this.FavoriteItemModel.forge<FavoriteItem>(data);\n        try {\n            const favoriteItemCreated = await favoriteItem.save();\n            return await this.FavoriteItemModel.fetchById(favoriteItemCreated.id);\n        } catch (error) {\n            throw new DatabaseException('Could not create the favoriteItem!', error);\n        }\n    }\n\n    public async update(id: number, data: any): Promise<FavoriteItem> {\n        const favoriteItem = this.FavoriteItemModel.forge<FavoriteItem>({ id });\n        try {\n            const favoriteItemUpdated = await favoriteItem.save(data, { patch: true });\n            return this.FavoriteItemModel.fetchById(favoriteItemUpdated.id);\n        } catch (error) {\n            throw new DatabaseException('Could not update the favoriteItem!', error);\n        }\n    }\n\n    public async destroy(id: number): Promise<void> {\n        let favoriteItem = this.FavoriteItemModel.forge<FavoriteItem>({ id });\n        try {\n            favoriteItem = await favoriteItem.fetch({ require: true });\n        } catch (error) {\n            throw new NotFoundException(id);\n        }\n\n        try {\n            await favoriteItem.destroy();\n            return;\n        } catch (error) {\n            throw new DatabaseException('Could not delete the favoriteItem!', error);\n        }\n    }\n}\n"]}