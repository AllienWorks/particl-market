{"version":3,"file":"EscrowUpdateCommand.js","sourceRoot":"","sources":["../../../../src/api/commands/escrow/EscrowUpdateCommand.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF,yCAA0C;AAC1C,yDAA+D;AAE/D,kDAA0D;AAC1D,gEAA6D;AAC7D,0DAAuD;AAGvD,wDAA6C;AAC7C,gDAA6C;AAC7C,wEAAqE;AAErE,0FAAuF;AAEvF,IAAa,mBAAmB,GAAhC,yBAAiC,SAAQ,yBAAW;IAIhD,YACmD,MAAyB,EACU,0BAAsD,EACnE,aAA4B;QAEjG,KAAK,CAAC,0BAAQ,CAAC,aAAa,CAAC,CAAC;QAJiB,WAAM,GAAN,MAAM,CAAmB;QACU,+BAA0B,GAA1B,0BAA0B,CAA4B;QACnE,kBAAa,GAAb,aAAa,CAAe;QAGjG,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAED;;;;;;;;OAQG;IAEU,OAAO,CAAuB,IAAgB;;YAEvD,mBAAmB;YACnB,MAAM,qBAAqB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAC7C,MAAM,wBAAwB,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC;YACtG,MAAM,mBAAmB,GAAG,wBAAwB,CAAC,MAAM,EAAE,CAAC;YAE9D,uEAAuE;YACvE,EAAE,CAAC,CAAC,mBAAmB,CAAC,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC9C,MAAM,IAAI,mCAAgB,CAAC,2FAA2F,CAAC,CAAC;YAC5H,CAAC;YAED,iFAAiF;YACjF,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,MAAM,CAAC,EAAE,EAAE;gBAC/E,sBAAsB,EAAE,mBAAmB,CAAC,kBAAkB,CAAC,EAAE;gBACjE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACpB,KAAK,EAAE;oBACH,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBACrB,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;iBACzB;aACmB,CAAC,CAAC;QAC9B,CAAC;KAAA;IAEM,KAAK;QACR,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,mEAAmE,CAAC;IAChG,CAAC;IAEM,IAAI;QACP,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI;cAClD,iFAAiF;cACjF,kFAAkF;cAClF,mFAAmF;cACnF,6DAA6D;cAC7D,kFAAkF;cAClF,6DAA6D;cAC7D,oDAAoD;cACpD,kDAAkD,CAAC;IAC7D,CAAC;IAEM,WAAW;QACd,MAAM,CAAC,iEAAiE,CAAC;IAC7E,CAAC;CAGJ,CAAA;AA5CG;IADC,mBAAQ,EAAE;IACY,mBAAA,kBAAO,CAAC,uBAAU,CAAC,CAAA;;6CAAO,uBAAU;;kDAqB1D;AA5CQ,mBAAmB;IAKvB,mBAAA,kBAAM,CAAC,iBAAK,CAAC,IAAI,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,gBAAI,CAAC,MAAM,CAAC,CAAA;IACtC,mBAAA,kBAAM,CAAC,iBAAK,CAAC,OAAO,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,mBAAO,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAA;IACxE,mBAAA,kBAAM,CAAC,iBAAK,CAAC,OAAO,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,mBAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAA;qDADkD,uDAA0B;QACpD,6BAAa;GAP5F,mBAAmB,CAmE/B;AAnEY,kDAAmB","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { inject, named } from 'inversify';\nimport { validate, request } from '../../../core/api/Validate';\nimport { Logger as LoggerType } from '../../../core/Logger';\nimport { Types, Core, Targets } from '../../../constants';\nimport { EscrowService } from '../../services/EscrowService';\nimport { RpcRequest } from '../../requests/RpcRequest';\nimport { Escrow } from '../../models/Escrow';\nimport { RpcCommandInterface } from '../RpcCommandInterface';\nimport { Commands} from '../CommandEnumType';\nimport { BaseCommand } from '../BaseCommand';\nimport { MessageException } from '../../exceptions/MessageException';\nimport { EscrowUpdateRequest } from '../../requests/EscrowUpdateRequest';\nimport { ListingItemTemplateService } from '../../services/ListingItemTemplateService';\n\nexport class EscrowUpdateCommand extends BaseCommand implements RpcCommandInterface<Escrow> {\n\n    public log: LoggerType;\n\n    constructor(\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType,\n        @inject(Types.Service) @named(Targets.Service.ListingItemTemplateService) private listingItemTemplateService: ListingItemTemplateService,\n        @inject(Types.Service) @named(Targets.Service.EscrowService) private escrowService: EscrowService\n    ) {\n        super(Commands.ESCROW_UPDATE);\n        this.log = new Logger(__filename);\n    }\n\n    /**\n     * data.params[]:\n     *  [0]: ListingItemTemplate.id\n     *  [1]: escrowtype\n     *  [2]: buyer ratio\n     *  [3]: seller ratio\n     * @param data\n     * @returns {Promise<Escrow>}\n     */\n    @validate()\n    public async execute( @request(RpcRequest) data: RpcRequest): Promise<Escrow> {\n\n        // get the template\n        const listingItemTemplateId = data.params[0];\n        const listingItemTemplateModel = await this.listingItemTemplateService.findOne(listingItemTemplateId);\n        const listingItemTemplate = listingItemTemplateModel.toJSON();\n\n        // template allready has listingitems so for now, it cannot be modified\n        if (listingItemTemplate.ListingItems.length > 0) {\n            throw new MessageException(`Escrow cannot be updated because ListingItems allready exist for the ListingItemTemplate.`);\n        }\n\n        // creates an Escrow related to PaymentInformation related to ListingItemTemplate\n        return this.escrowService.update(listingItemTemplate.PaymentInformation.Escrow.id, {\n            payment_information_id: listingItemTemplate.PaymentInformation.id,\n            type: data.params[1],\n            ratio: {\n                buyer: data.params[2],\n                seller: data.params[3]\n            }\n        } as EscrowUpdateRequest);\n    }\n\n    public usage(): string {\n        return this.getName() + ' <listingItemTemplateId> <escrowType> <buyerRatio> <sellerRatio> ';\n    }\n\n    public help(): string {\n        return this.usage() + ' -  ' + this.description() + '\\n'\n            + '    <listingItemTemplateId>  - Numeric - The ID of the listing item template \\n'\n            + '                                associated with the escrow we want to modify. \\n'\n            + '    <escrowType>             - String - The escrow type we want to give to the \\n'\n            + '                                escrow we are modifying. \\n'\n            + '                             - ENUM{NOP,MAD} - The escrow type to give to the \\n'\n            + '                                escrow we are modifying. \\n'\n            + '    <buyerRatio>             - Numeric - [TODO] \\n'\n            + '    <sellerRatio>            - Numeric - [TODO] ';\n    }\n\n    public description(): string {\n        return 'Update the details of an escrow given by listingItemTemplateId.';\n    }\n\n\n}\n"]}