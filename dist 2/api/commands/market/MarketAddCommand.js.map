{"version":3,"file":"MarketAddCommand.js","sourceRoot":"","sources":["../../../../src/api/commands/market/MarketAddCommand.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF,yCAA0C;AAC1C,yDAA+D;AAE/D,kDAA0D;AAC1D,gEAA6D;AAC7D,0DAAuD;AAIvD,wDAA6C;AAC7C,gDAA6C;AAE7C,IAAa,gBAAgB,GAA7B,sBAA8B,SAAQ,yBAAW;IAI7C,YACmD,MAAyB,EACH,aAA4B;QAEjG,KAAK,CAAC,0BAAQ,CAAC,UAAU,CAAC,CAAC;QAHoB,WAAM,GAAN,MAAM,CAAmB;QACH,kBAAa,GAAb,aAAa,CAAe;QAGjG,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAED;;;;;;;;OAQG;IAEU,OAAO,CAAuB,IAAgB;;YACvD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;gBAC7B,IAAI,EAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACrB,WAAW,EAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC5B,OAAO,EAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;aACJ,CAAC,CAAC;QAC9B,CAAC;KAAA;IAEM,KAAK;QACR,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,iCAAiC,CAAC;IAC9D,CAAC;IAEM,IAAI;QACP,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,KAAK;cACnD,yFAAyF;cACzF,wFAAwF;cACxF,iDAAiD,CAAC;IAC5D,CAAC;IAEM,WAAW;QACd,MAAM,CAAC,sBAAsB,CAAC;IAClC,CAAC;IAEM,OAAO;QACV,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,qEAAqE,CAAC;IAC9G,CAAC;CACJ,CAAA;AA1BG;IADC,mBAAQ,EAAE;IACY,mBAAA,kBAAO,CAAC,uBAAU,CAAC,CAAA;;6CAAO,uBAAU;;+CAM1D;AA5BQ,gBAAgB;IAKpB,mBAAA,kBAAM,CAAC,iBAAK,CAAC,IAAI,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,gBAAI,CAAC,MAAM,CAAC,CAAA;IACtC,mBAAA,kBAAM,CAAC,iBAAK,CAAC,OAAO,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,mBAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAA;qDAAwB,6BAAa;GAN5F,gBAAgB,CAgD5B;AAhDY,4CAAgB","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { inject, named } from 'inversify';\nimport { validate, request } from '../../../core/api/Validate';\nimport { Logger as LoggerType } from '../../../core/Logger';\nimport { Types, Core, Targets } from '../../../constants';\nimport { MarketService } from '../../services/MarketService';\nimport { RpcRequest } from '../../requests/RpcRequest';\nimport { Market } from '../../models/Market';\nimport { RpcCommandInterface } from '../RpcCommandInterface';\nimport { MarketCreateRequest } from '../../requests/MarketCreateRequest';\nimport { Commands} from '../CommandEnumType';\nimport { BaseCommand } from '../BaseCommand';\n\nexport class MarketAddCommand extends BaseCommand implements RpcCommandInterface<Market> {\n\n    public log: LoggerType;\n\n    constructor(\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType,\n        @inject(Types.Service) @named(Targets.Service.MarketService) private marketService: MarketService\n    ) {\n        super(Commands.MARKET_ADD);\n        this.log = new Logger(__filename);\n    }\n\n    /**\n     * data.params[]:\n     *  [0]: name\n     *  [1]: private_key\n     *  [2]: address\n     *\n     * @param data\n     * @returns {Promise<Market>}\n     */\n    @validate()\n    public async execute( @request(RpcRequest) data: RpcRequest): Promise<Market> {\n        return this.marketService.create({\n            name : data.params[0],\n            private_key : data.params[1],\n            address : data.params[2]\n        } as MarketCreateRequest);\n    }\n\n    public usage(): string {\n        return this.getName() + ' <name> <privateKey> <address> ';\n    }\n\n    public help(): string {\n        return this.usage() + ' -  ' + this.description() + ' \\n'\n            + '    <name>                   - String - The unique name of the market being created. \\n'\n            + '    <privateKey>             - String - The private key of the market being creted. \\n'\n            + '    <address>                - String - [TODO] ';\n    }\n\n    public description(): string {\n        return 'Create a new market.';\n    }\n\n    public example(): string {\n        return 'market ' + this.getName() + ' market add \\'Dream Market\\' \\'InY0uRdr34M5\\' \\'lchudifyeqm4ldjj\\' ';\n    }\n}\n"]}