{"version":3,"file":"MarketListCommand.js","sourceRoot":"","sources":["../../../../src/api/commands/market/MarketListCommand.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAGjF,yCAA0C;AAC1C,yDAA+D;AAE/D,kDAA0D;AAC1D,0DAAuD;AAGvD,wDAA6C;AAC7C,gDAA6C;AAC7C,gEAA6D;AAE7D;;GAEG;AACH,IAAa,iBAAiB,GAA9B,uBAA+B,SAAQ,yBAAW;IAI9C,YACmD,MAAyB,EACH,aAA4B;QAGjG,KAAK,CAAC,0BAAQ,CAAC,WAAW,CAAC,CAAC;QAJmB,WAAM,GAAN,MAAM,CAAmB;QACH,kBAAa,GAAb,aAAa,CAAe;QAIjG,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAED;;;OAGG;IAEU,OAAO,CAAuB,IAAgB;;YACvD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;QACxC,CAAC;KAAA;IAEM,KAAK;QACR,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC;IAChC,CAAC;IAEM,IAAI;QACP,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IACtD,CAAC;IAEM,WAAW;QACd,MAAM,CAAC,uBAAuB,CAAC;IACnC,CAAC;IAEM,OAAO;QACV,MAAM,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC;IAC5C,CAAC;CACJ,CAAA;AAnBG;IADC,mBAAQ,EAAE;IACY,mBAAA,kBAAO,CAAC,uBAAU,CAAC,CAAA;;6CAAO,uBAAU;;gDAE1D;AApBQ,iBAAiB;IAKrB,mBAAA,kBAAM,CAAC,iBAAK,CAAC,IAAI,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,gBAAI,CAAC,MAAM,CAAC,CAAA;IACtC,mBAAA,kBAAM,CAAC,iBAAK,CAAC,OAAO,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,mBAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAA;qDAAwB,6BAAa;GAN5F,iBAAiB,CAqC7B;AArCY,8CAAiB","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport * as Bookshelf from 'bookshelf';\nimport { inject, named } from 'inversify';\nimport { validate, request } from '../../../core/api/Validate';\nimport { Logger as LoggerType } from '../../../core/Logger';\nimport { Types, Core, Targets } from '../../../constants';\nimport { RpcRequest } from '../../requests/RpcRequest';\nimport { Market } from '../../models/Market';\nimport { RpcCommandInterface } from '../RpcCommandInterface';\nimport { Commands} from '../CommandEnumType';\nimport { BaseCommand } from '../BaseCommand';\nimport { MarketService } from '../../services/MarketService';\n\n/*\n * Get a list of all markets\n */\nexport class MarketListCommand extends BaseCommand implements RpcCommandInterface<Bookshelf.Collection<Market>> {\n\n    public log: LoggerType;\n\n    constructor(\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType,\n        @inject(Types.Service) @named(Targets.Service.MarketService) private marketService: MarketService\n\n    ) {\n        super(Commands.MARKET_LIST);\n        this.log = new Logger(__filename);\n    }\n\n    /**\n     * @param data\n     * @returns {Promise<Bookshelf.Collection<Market>>}\n     */\n    @validate()\n    public async execute( @request(RpcRequest) data: RpcRequest): Promise<Bookshelf.Collection<Market>> {\n        return this.marketService.findAll();\n    }\n\n    public usage(): string {\n        return this.getName() + ' ';\n    }\n\n    public help(): string {\n        return this.usage() + ' -  ' + this.description();\n    }\n\n    public description(): string {\n        return 'List all the markets.';\n    }\n\n    public example(): string {\n        return 'market ' + this.getName() + ' ';\n    }\n}\n"]}