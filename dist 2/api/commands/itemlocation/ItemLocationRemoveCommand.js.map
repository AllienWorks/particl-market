{"version":3,"file":"ItemLocationRemoveCommand.js","sourceRoot":"","sources":["../../../../src/api/commands/itemlocation/ItemLocationRemoveCommand.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { inject, named } from 'inversify';\nimport { validate, request } from '../../../core/api/Validate';\nimport { Logger as LoggerType } from '../../../core/Logger';\nimport { Types, Core, Targets } from '../../../constants';\nimport { ItemLocationService } from '../../services/ItemLocationService';\nimport { ListingItemTemplateService } from '../../services/ListingItemTemplateService';\nimport { RpcRequest } from '../../requests/RpcRequest';\nimport { RpcCommandInterface } from '../RpcCommandInterface';\nimport * as _ from 'lodash';\nimport { MessageException } from '../../exceptions/MessageException';\nimport { Commands} from '../CommandEnumType';\nimport { BaseCommand } from '../BaseCommand';\n\nexport class ItemLocationRemoveCommand extends BaseCommand implements RpcCommandInterface<void> {\n\n    public log: LoggerType;\n\n    constructor(\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType,\n        @inject(Types.Service) @named(Targets.Service.ItemLocationService) public itemLocationService: ItemLocationService,\n        @inject(Types.Service) @named(Targets.Service.ListingItemTemplateService) public listingItemTemplateService: ListingItemTemplateService\n    ) {\n        super(Commands.ITEMLOCATION_REMOVE);\n        this.log = new Logger(__filename);\n    }\n\n    /**\n     *\n     * data.params[]:\n     * [0]: listingItemTemplateId\n     */\n    @validate()\n    public async execute( @request(RpcRequest) data: RpcRequest): Promise<void> {\n        const itemInformation = await this.getItemInformation(data);\n\n        // ItemLocation cannot be removed if there's a ListingItem related to ItemInformations ItemLocation. (the item has allready been posted)\n        if (itemInformation.listingItemId) {\n            throw new MessageException('ItemLocation cannot be removed because the ListingItem has allready been posted!');\n        } else {\n            return this.itemLocationService.destroy(itemInformation.ItemLocation.id);\n        }\n    }\n\n    public usage(): string {\n        return this.getName() + ' <listingItemTemplateId> ';\n    }\n\n    public help(): string {\n        return this.usage() + ' -  ' + this.description() + ' \\n'\n            + '    <listingItemTemplateId>  - Numeric - The ID of the listing item template. ';\n    }\n\n    public description(): string {\n        return 'Remove and destroy an item location associated with listingItemTemplateId.';\n    }\n\n    /*\n     * TODO: NOTE: This function may be duplicated between commands.\n     */\n    private async getItemInformation(data: any): Promise<any> {\n        // find the existing listing item template\n        const listingItemTemplate = await this.listingItemTemplateService.findOne(data.params[0]);\n\n        // find the related ItemInformation\n        const itemInformation = listingItemTemplate.related('ItemInformation').toJSON();\n\n        // Through exception if ItemInformation or ItemLocation does not exist\n        if (_.size(itemInformation) === 0 || _.size(itemInformation.ItemLocation) === 0) {\n            this.log.warn(`ItemInformation or ItemLocation with the listingItemTemplateId=${data.params[0]} was not found!`);\n            throw new MessageException(`ItemInformation or ItemLocation with the listingItemTemplateId=${data.params[0]} was not found!`);\n        }\n\n        return itemInformation;\n    }\n}\n"]}