{"version":3,"file":"ItemCategoryUpdateCommand.js","sourceRoot":"","sources":["../../../../src/api/commands/itemcategory/ItemCategoryUpdateCommand.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport * as Bookshelf from 'bookshelf';\nimport { Logger as LoggerType } from '../../../core/Logger';\nimport { inject, named } from 'inversify';\nimport { validate, request } from '../../../core/api/Validate';\nimport { Types, Core, Targets } from '../../../constants';\nimport { ItemCategoryService } from '../../services/ItemCategoryService';\nimport { ListingItemService } from '../../services/ListingItemService';\nimport { RpcRequest } from '../../requests/RpcRequest';\nimport { ItemCategoryUpdateRequest } from '../../requests/ItemCategoryUpdateRequest';\nimport { ItemCategory } from '../../models/ItemCategory';\nimport { RpcCommandInterface } from '../RpcCommandInterface';\nimport { MessageException } from '../../exceptions/MessageException';\nimport { Commands} from '../CommandEnumType';\nimport { BaseCommand } from '../BaseCommand';\nimport * as resources from 'resources';\n\nexport class ItemCategoryUpdateCommand extends BaseCommand implements RpcCommandInterface<ItemCategory> {\n\n    public log: LoggerType;\n    public name: string;\n    public helpStr: string;\n\n    constructor(\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType,\n        @inject(Types.Service) @named(Targets.Service.ItemCategoryService) private itemCategoryService: ItemCategoryService,\n        @inject(Types.Service) @named(Targets.Service.ListingItemService) private listingItemService: ListingItemService\n    ) {\n        super(Commands.CATEGORY_UPDATE);\n        this.log = new Logger(__filename);\n    }\n\n    /**\n     * updates user defined category\n     *\n     * data.params[]:\n     *  [0]: category id\n     *  [1]: category name\n     *  [2]: description\n     *  [3]: parentItemCategoryId\n     *\n     * @param data\n     * @returns {Promise<ItemCategory>}\n     */\n    @validate()\n    public async execute( @request(RpcRequest) data: RpcRequest): Promise<ItemCategory> {\n\n        const categoryId = data.params[0];\n        const name = data.params[1];\n        const description = data.params[2];\n        const parentItemCategoryId = data.params[3] || 'cat_ROOT';\n\n        return await this.itemCategoryService.update(categoryId, {\n            name,\n            description,\n            parent_item_category_id: parentItemCategoryId\n        } as ItemCategoryUpdateRequest);\n    }\n\n    /**\n     * - should have 4 params\n     * - if category has key, it cant be edited\n     * - ...\n     *\n     * @param {RpcRequest} data\n     * @returns {Promise<void>}\n     */\n    public async validate(data: RpcRequest): Promise<RpcRequest> {\n\n        if (data.params.length < 4) {\n            throw new MessageException('Missing parameters.');\n        }\n\n        const categoryId = data.params[0];\n        const itemCategoryModel = await this.itemCategoryService.findOne(categoryId);\n        const itemCategory: resources.ItemCategory = itemCategoryModel.toJSON();\n\n        // if category has a key, its a default category and cant be updated\n        if (itemCategory.key != null) {\n            throw new MessageException(`Default category can't be updated or deleted.`);\n        }\n\n        return data;\n    }\n\n    public usage(): string {\n        return this.getName() + ' <categoryId> <categoryName> <description> [<parentItemCategoryId>] ';\n    }\n\n    public help(): string {\n        return this.usage() + ' -  ' + this.description() + ' \\n'\n            + '    <categoryId>                  - Numeric - The ID of the category we want to \\n'\n            + '                                     update. \\n'\n            + '    <categoryName>                - String - The new name of the category we want \\n'\n            + '                                     to update. \\n'\n            + '    <description>                 - String - The new description of the category \\n'\n            + '                                     we want to update. \\n'\n            + '    <parentItemCategoryId>        - [optional] Numeric - The ID that identifies the \\n'\n            + '                                     new parent category of the category we want to \\n'\n            + '                                     update; default is the root category. ';\n    }\n\n    public description(): string {\n        return 'Update the details of an item category given by categoryId.';\n    }\n\n    public example(): string {\n        return 'category ' + this.getName() + ' 81 updatedCategory \\'Updated category description\\' 80 ';\n    }\n\n\n}\n"]}