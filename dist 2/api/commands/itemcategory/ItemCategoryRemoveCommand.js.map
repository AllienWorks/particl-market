{"version":3,"file":"ItemCategoryRemoveCommand.js","sourceRoot":"","sources":["../../../../src/api/commands/itemcategory/ItemCategoryRemoveCommand.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { Logger as LoggerType } from '../../../core/Logger';\nimport { inject, named } from 'inversify';\nimport { validate, request } from '../../../core/api/Validate';\nimport { Types, Core, Targets } from '../../../constants';\nimport { ItemCategoryService } from '../../services/ItemCategoryService';\nimport { ListingItemService } from '../../services/ListingItemService';\nimport { ListingItemTemplateService } from '../../services/ListingItemTemplateService';\nimport { RpcRequest } from '../../requests/RpcRequest';\nimport { RpcCommandInterface } from '../RpcCommandInterface';\nimport { MessageException } from '../../exceptions/MessageException';\nimport { ListingItemTemplateSearchParams } from '../../requests/ListingItemTemplateSearchParams';\nimport { Commands} from '../CommandEnumType';\nimport { BaseCommand } from '../BaseCommand';\nimport { SearchOrder } from '../../enums/SearchOrder';\nimport * as _ from 'lodash';\nimport { ListingItemSearchParams } from '../../requests/ListingItemSearchParams';\n\nexport class ItemCategoryRemoveCommand extends BaseCommand implements RpcCommandInterface<void> {\n\n    public log: LoggerType;\n\n    constructor(\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType,\n        @inject(Types.Service) @named(Targets.Service.ItemCategoryService) private itemCategoryService: ItemCategoryService,\n        @inject(Types.Service) @named(Targets.Service.ListingItemService) private listingItemService: ListingItemService,\n        @inject(Types.Service) @named(Targets.Service.ListingItemTemplateService) private listingItemTemplateService: ListingItemTemplateService\n    ) {\n        super(Commands.CATEGORY_REMOVE);\n        this.log = new Logger(__filename);\n    }\n\n    /**\n     * remove user defined category\n     * data.params[]:\n     *  [0]: category id\n     *\n     * @param data\n     * @returns {Promise<void>}\n     */\n    @validate()\n    public async execute( @request(RpcRequest) data: RpcRequest): Promise<void> {\n\n        if (!data.params[0]) {\n            throw new MessageException('Missing categoryId.');\n        }\n        const categoryId = data.params[0];\n\n        await this.itemCategoryService.findOne(categoryId)\n            .then(value => {\n                const itemCategory = value.toJSON();\n                if (itemCategory.key) {\n                    throw new MessageException('Default Category cant be removed.');\n                }\n            })\n            .catch(reason => {\n                throw new MessageException('Invalid categoryId.');\n            });\n\n        // check listingItemTemplate related with category\n        await this.listingItemTemplateService.search({\n            page: 0,\n            pageLimit: 10,\n            order: SearchOrder.ASC,\n            category: categoryId\n        } as ListingItemTemplateSearchParams)\n            .then(values => {\n                const listingItemTemplates = values.toJSON();\n                if (listingItemTemplates.length > 0) {\n                    throw new MessageException(`Category associated with ListingItemTemplate can't be deleted. id= ${categoryId}`);\n                }\n            });\n\n        // check listingItem related with category\n        await this.listingItemService.search({\n            page: 0,\n            pageLimit: 10,\n            order: SearchOrder.ASC,\n            category: categoryId\n        } as ListingItemSearchParams)\n            .then(values => {\n                this.log.debug('values:', JSON.stringify(values, null, 2));\n                const listingItems = values.toJSON();\n                if (listingItems.length > 0) {\n                    throw new MessageException(`Category associated with ListingItem can't be deleted. id= ${categoryId}`);\n                }\n            });\n\n\n        return await this.itemCategoryService.destroy(categoryId);\n    }\n\n    public usage(): string {\n        return this.getName() + ' <categoryId> ';\n    }\n\n    public help(): string {\n        return this.usage() + ' -  ' + this.description() + ' \\n'\n            + '    <categoryId>                  - Numeric - The ID belonging to the category we \\n'\n            + '                                     want to destroy. ';\n    }\n\n    public description(): string {\n        return 'Remove and destroy an item category via categoryId.';\n    }\n\n    public example(): string {\n        return 'category ' + this.getName() + ' 81 ';\n    }\n}\n"]}