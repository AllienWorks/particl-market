{"version":3,"file":"ItemCategoryListCommand.js","sourceRoot":"","sources":["../../../../src/api/commands/itemcategory/ItemCategoryListCommand.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF,yCAA0C;AAC1C,yDAA+D;AAE/D,kDAA0D;AAC1D,4EAAyE;AACzE,0DAAuD;AAGvD,wDAA6C;AAC7C,gDAA6C;AAE7C,IAAa,uBAAuB,GAApC,6BAAqC,SAAQ,yBAAW;IAIpD,YACmD,MAAyB,EACG,mBAAwC;QAEnH,KAAK,CAAC,0BAAQ,CAAC,aAAa,CAAC,CAAC;QAHiB,WAAM,GAAN,MAAM,CAAmB;QACG,wBAAmB,GAAnB,mBAAmB,CAAqB;QAGnH,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAED;;;;OAIG;IAEU,OAAO,CAAuB,IAAgB;;YACvD,MAAM,CAAC,MAAM,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;QACrD,CAAC;KAAA;IAEM,KAAK;QACR,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC;IAChC,CAAC;IAEM,IAAI;QACP,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,OAAO,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC;IAC/D,CAAC;IAEM,WAAW;QACd,MAAM,CAAC,+BAA+B,CAAC;IAC3C,CAAC;IAEM,OAAO;QACV,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,GAAG,CAAC;IAC9C,CAAC;CACJ,CAAA;AAnBG;IADC,mBAAQ,EAAE;IACY,mBAAA,kBAAO,CAAC,uBAAU,CAAC,CAAA;;6CAAO,uBAAU;;sDAE1D;AApBQ,uBAAuB;IAK3B,mBAAA,kBAAM,CAAC,iBAAK,CAAC,IAAI,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,gBAAI,CAAC,MAAM,CAAC,CAAA;IACtC,mBAAA,kBAAM,CAAC,iBAAK,CAAC,OAAO,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,mBAAO,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAA;qDAA8B,yCAAmB;GAN9G,uBAAuB,CAqCnC;AArCY,0DAAuB","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { inject, named } from 'inversify';\nimport { validate, request } from '../../../core/api/Validate';\nimport { Logger as LoggerType } from '../../../core/Logger';\nimport { Types, Core, Targets } from '../../../constants';\nimport { ItemCategoryService } from '../../services/ItemCategoryService';\nimport { RpcRequest } from '../../requests/RpcRequest';\nimport { ItemCategory } from '../../models/ItemCategory';\nimport { RpcCommandInterface } from '../RpcCommandInterface';\nimport { Commands} from '../CommandEnumType';\nimport { BaseCommand } from '../BaseCommand';\n\nexport class ItemCategoryListCommand extends BaseCommand implements RpcCommandInterface<ItemCategory> {\n\n    public log: LoggerType;\n\n    constructor(\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType,\n        @inject(Types.Service) @named(Targets.Service.ItemCategoryService) private itemCategoryService: ItemCategoryService\n    ) {\n        super(Commands.CATEGORY_LIST);\n        this.log = new Logger(__filename);\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {Promise<ItemCategory>}\n     */\n    @validate()\n    public async execute( @request(RpcRequest) data: RpcRequest): Promise<ItemCategory> {\n        return await this.itemCategoryService.findRoot();\n    }\n\n    public usage(): string {\n        return this.getName() + ' ';\n    }\n\n    public help(): string {\n        return this.usage() + '  -  ' + this.description() + ' \\n';\n    }\n\n    public description(): string {\n        return 'List all the item categories.';\n    }\n\n    public example(): string {\n        return 'category ' + this.getName() + ' ';\n    }\n}\n"]}