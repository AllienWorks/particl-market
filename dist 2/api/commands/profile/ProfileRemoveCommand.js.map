{"version":3,"file":"ProfileRemoveCommand.js","sourceRoot":"","sources":["../../../../src/api/commands/profile/ProfileRemoveCommand.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAGjF,yCAA0C;AAC1C,yDAA+D;AAC/D,kDAA0D;AAC1D,0DAAuD;AAEvD,kEAA+D;AAC/D,wDAA6C;AAC7C,gDAA6C;AAC7C,wEAAmE;AAEnE,IAAa,oBAAoB,GAAjC,0BAAkC,SAAQ,yBAAW;IAKjD,YACmD,MAAyB,EACF,cAA8B;QAEpG,KAAK,CAAC,0BAAQ,CAAC,cAAc,CAAC,CAAC;QAHgB,WAAM,GAAN,MAAM,CAAmB;QACF,mBAAc,GAAd,cAAc,CAAgB;QAGpG,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAED;;;;;;OAMG;IAEU,OAAO,CAAuB,IAAgB;;YACvD,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBACzB,MAAM,IAAI,mCAAgB,CAAC,+BAA+B,CAAC,CAAC;YAChE,CAAC;YAED,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAE/B,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;gBACtC,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxE,SAAS,GAAG,OAAO,GAAG,OAAO,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACrD,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAClD,CAAC;KAAA;IAEM,KAAK;QACR,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,+BAA+B,CAAC;IAC5D,CAAC;IAEM,IAAI;QACP,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,KAAK;cACjD,uFAAuF;cACvF,wEAAwE;cACxE,oDAAoD,CAAC;IAC/D,CAAC;IAEM,WAAW;QACd,MAAM,CAAC,iDAAiD,CAAC;IAC7D,CAAC;IAEM,OAAO;QACV,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,kBAAkB,CAAC;IAC5D,CAAC;CACJ,CAAA;AAhCG;IADC,mBAAQ,EAAE;IACY,mBAAA,kBAAO,CAAC,uBAAU,CAAC,CAAA;;6CAAO,uBAAU;;mDAY1D;AAjCQ,oBAAoB;IAMxB,mBAAA,kBAAM,CAAC,iBAAK,CAAC,IAAI,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,gBAAI,CAAC,MAAM,CAAC,CAAA;IACtC,mBAAA,kBAAM,CAAC,iBAAK,CAAC,OAAO,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,mBAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAA;qDAAyB,+BAAc;GAP/F,oBAAoB,CAqDhC;AArDY,oDAAoB","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { Logger as LoggerType } from '../../../core/Logger';\nimport { inject, named } from 'inversify';\nimport { validate, request } from '../../../core/api/Validate';\nimport { Types, Core, Targets } from '../../../constants';\nimport { RpcRequest } from '../../requests/RpcRequest';\nimport { RpcCommandInterface } from '../RpcCommandInterface';\nimport { ProfileService } from '../../services/ProfileService';\nimport { Commands} from '../CommandEnumType';\nimport { BaseCommand } from '../BaseCommand';\nimport {MessageException} from '../../exceptions/MessageException';\n\nexport class ProfileRemoveCommand extends BaseCommand implements RpcCommandInterface<void> {\n    public log: LoggerType;\n    public name: string;\n    public helpStr: string;\n\n    constructor(\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType,\n        @inject(Types.Service) @named(Targets.Service.ProfileService) private profileService: ProfileService\n    ) {\n        super(Commands.PROFILE_REMOVE);\n        this.log = new Logger(__filename);\n    }\n\n    /**\n     * data.params[]:\n     *  [0]: id or name\n     *\n     * @param data\n     * @returns {Promise<void>}\n     */\n    @validate()\n    public async execute( @request(RpcRequest) data: RpcRequest): Promise<void> {\n        if (data.params.length < 1) {\n            throw new MessageException('Missing paramater id or name.');\n        }\n\n        let profileId = data.params[0];\n\n        if (typeof data.params[0] === 'string') {\n           const profile = await this.profileService.findOneByName(data.params[0]);\n           profileId = profile ? profile.id : data.params[0];\n        }\n        return this.profileService.destroy(profileId);\n    }\n\n    public usage(): string {\n        return this.getName() + ' (<profileId>|<profileName>) ';\n    }\n\n    public help(): string {\n        return this.usage() + '- ' + this.description() + ' \\n'\n            + '    <profileID>              -  That profile ID of the profile we want to destroy. \\n'\n            + '    <profileName>            -  String - The name of the profile we \\n'\n            + '                                 want to destroy. ';\n    }\n\n    public description(): string {\n        return 'Destroy a profile by profile id or profileName.';\n    }\n\n    public example(): string {\n        return 'profile ' + this.getName() + ' 2 myNewProfile ';\n    }\n}\n"]}