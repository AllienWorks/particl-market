{"version":3,"file":"ItemInformationUpdateCommand.js","sourceRoot":"","sources":["../../../../src/api/commands/iteminformation/ItemInformationUpdateCommand.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { inject, named } from 'inversify';\nimport { validate, request } from '../../../core/api/Validate';\nimport { Logger as LoggerType } from '../../../core/Logger';\nimport { Types, Core, Targets } from '../../../constants';\nimport { ItemInformationService } from '../../services/ItemInformationService';\nimport { RpcRequest } from '../../requests/RpcRequest';\nimport { ItemInformationUpdateRequest } from '../../requests/ItemInformationUpdateRequest';\nimport { ItemInformation } from '../../models/ItemInformation';\nimport { RpcCommandInterface } from '../RpcCommandInterface';\nimport { Commands} from '../CommandEnumType';\nimport { BaseCommand } from '../BaseCommand';\nimport { MessageException } from '../../exceptions/MessageException';\n\nexport class ItemInformationUpdateCommand extends BaseCommand implements RpcCommandInterface<ItemInformation> {\n\n    public log: LoggerType;\n\n    constructor(\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType,\n        @inject(Types.Service) @named(Targets.Service.ItemInformationService) private itemInformationService: ItemInformationService\n    ) {\n        super(Commands.ITEMINFORMATION_UPDATE);\n        this.log = new Logger(__filename);\n    }\n\n    /**\n     * data.params[]:\n     *  [0]: listing template id\n     *  [1]: title\n     *  [2]: short-description\n     *  [3]: long-description\n     *  [4]: categoryId\n     *\n     * @param data\n     * @returns {Promise<ItemInformation>}\n     */\n    @validate()\n    public async execute( @request(RpcRequest) data: RpcRequest): Promise<ItemInformation> {\n        return this.itemInformationService.updateWithCheckListingTemplate({\n            listing_item_template_id: data.params[0],\n            title: data.params[1],\n            shortDescription: data.params[2],\n            longDescription: data.params[3],\n            itemCategory: {\n                id: data.params[4]\n            }\n        } as ItemInformationUpdateRequest);\n    }\n\n    /**\n     * - should have 4 params\n     * - if category has key, it cant be edited\n     * - ...\n     *\n     * @param {RpcRequest} data\n     * @returns {Promise<void>}\n     */\n    public async validate(data: RpcRequest): Promise<RpcRequest> {\n        if (data.params.length < 5) {\n            this.log.error('Not enough args.');\n            throw new MessageException('Not enough args.');\n        } else if (typeof data.params[0] !== 'number') {\n            this.log.error('ListingItemTemplate ID must be numeric.');\n            throw new MessageException('ListingItemTemplate ID must be numeric.');\n        } else if (typeof data.params[4] !== 'number') {\n            this.log.error('Category ID must be numeric.');\n            throw new MessageException('Category ID must be numeric.');\n        }\n        return data;\n    }\n\n    public usage(): string {\n        return this.getName() + ' <listingItemTemplateId> <title> <shortDescription> <longDescription> <categoryId> ';\n    }\n\n    public help(): string {\n        return this.usage() + ' -  ' + this.description() + ' \\n'\n            + '    <listingItemTemplateId>       - Numeric - The ID of the listing item template \\n'\n            + '                                     whose associated item information we want to \\n'\n            + '                                     update. \\n'\n            + '    <title>                       - String - The new title of the item information \\n'\n            + '                                     we\\'re updating. \\n'\n            + '    <shortDescription>            - String - The new short description of the item \\n'\n            + '                                     information we\\'re updating. \\n'\n            + '    <longDescription>             - String - The new long description of the item \\n'\n            + '                                     information we\\'re updating. \\n'\n            + '    <categoryId>                  - String - The ID that identifies the new \\n'\n            + '                                     category we want to assign to the item \\n'\n            + '                                     information we\\'re updating. ';\n    }\n\n    public description(): string {\n        return 'Update the item details of an item information given by listingItemTemplateId.';\n    }\n\n    public example(): string {\n        return 'information ' + this.getName() + ' 1 Cigarettes \\'Cigarette packet\\' \\'COUGHING NAILS -- when you\\\\\\'ve just got to have a cigarette.\\' 76';\n    }\n}\n"]}