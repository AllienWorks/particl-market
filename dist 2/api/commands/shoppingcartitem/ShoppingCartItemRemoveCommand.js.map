{"version":3,"file":"ShoppingCartItemRemoveCommand.js","sourceRoot":"","sources":["../../../../src/api/commands/shoppingcartitem/ShoppingCartItemRemoveCommand.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { inject, named } from 'inversify';\nimport { RpcRequest } from '../../requests/RpcRequest';\nimport { RpcCommandInterface } from '../RpcCommandInterface';\nimport { validate, request } from '../../../core/api/Validate';\nimport { Logger as LoggerType } from '../../../core/Logger';\nimport { Types, Core, Targets } from '../../../constants';\nimport { BaseCommand } from '../BaseCommand';\nimport { Commands } from '../CommandEnumType';\nimport { ShoppingCartItemService } from '../../services/ShoppingCartItemService';\nimport { ListingItemService } from '../../services/ListingItemService';\nimport { MessageException } from '../../exceptions/MessageException';\n\nexport class ShoppingCartItemRemoveCommand extends BaseCommand implements RpcCommandInterface<void> {\n\n    public log: LoggerType;\n\n    constructor(\n        @inject(Types.Service) @named(Targets.Service.ShoppingCartItemService) private shoppingCartItemService: ShoppingCartItemService,\n        @inject(Types.Service) @named(Targets.Service.ListingItemService) private listingItemService: ListingItemService,\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType\n    ) {\n        super(Commands.SHOPPINGCARTITEM_REMOVE);\n        this.log = new Logger(__filename);\n    }\n\n    /**\n     * data.params[]:\n     *  [0]: cartId\n     *  [1]: itemId | hash\n     *\n     * @param data\n     * @returns {Promise<void>}\n     */\n    @validate()\n    public async execute( @request(RpcRequest) data: RpcRequest): Promise<void> {\n        if (data.params[0] && data.params[1]) {\n            // check if listingItem hash then get Id and pass as parameter\n            let listingItemId = data.params[1];\n            if (typeof data.params[1] !== 'number') {\n                const listingItem = await this.listingItemService.findOneByHash(listingItemId);\n                listingItemId = listingItem.id;\n            }\n            const isItemExistOnCart = await this.shoppingCartItemService.findOneByCartIdAndListingItemId(data.params[0], listingItemId);\n            if (isItemExistOnCart === null) {\n                this.log.warn(`listing item not exist on shopping cart`);\n                throw new MessageException(`listing item not exist on shopping cart`);\n            } else {\n                // delete\n                return this.shoppingCartItemService.destroy(isItemExistOnCart.Id);\n            }\n        } else {\n            throw new MessageException('cartId and listingItemId can\\'t be blank');\n        }\n    }\n\n    public usage(): string {\n        return this.getName() + ' <cartId> (<itemId>|<hash>) ';\n    }\n\n    public help(): string {\n        return this.usage() + ' -  ' + this.description() + ' \\n'\n            + '    <cartId>                 - The Id of the shopping cart we want to use. \\n'\n            + '    <itemId>                 -  Id of the ListingItem we want to add to the cart. \\n'\n            + '    <hash>                   -  Hash of the ListingItem we want to add to the cart. ';\n    }\n\n    public description(): string {\n        return 'Remove lisging-item from shopping cart as per given listingitem Id and cart Id.';\n    }\n\n    public example(): string {\n        return 'cartitem ' + this.getName() + ' 1 1 b90cee25-036b-4dca-8b17-0187ff325dbb ';\n    }\n}\n"]}