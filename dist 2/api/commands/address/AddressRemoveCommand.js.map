{"version":3,"file":"AddressRemoveCommand.js","sourceRoot":"","sources":["../../../../src/api/commands/address/AddressRemoveCommand.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAGjF,yCAA0C;AAC1C,yDAA+D;AAC/D,kDAA0D;AAC1D,0DAAuD;AAEvD,kEAA+D;AAC/D,wDAA6C;AAC7C,gDAA6C;AAC7C,yEAAsE;AAEtE,IAAa,oBAAoB,GAAjC,0BAAkC,SAAQ,yBAAW;IAIjD,YACmD,MAAyB,EACH,cAA8B;QAEnG,KAAK,CAAC,0BAAQ,CAAC,cAAc,CAAC,CAAC;QAHgB,WAAM,GAAN,MAAM,CAAmB;QACH,mBAAc,GAAd,cAAc,CAAgB;QAGnG,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAED;;;;;;;OAOG;IAEU,OAAO,CAAuB,IAAgB,EAAE,iBAAoC;;YAC7F,MAAM,CAAC,MAAM,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7D,CAAC;KAAA;IAEM,KAAK;QACR,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,eAAe,CAAC;IAC5C,CAAC;IAEM,IAAI;QACP,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,MAAM,GAAG,IAAI,CAAC,WAAW,EAAE,GAAG,IAAI;cAClD,sFAAsF,CAAC;IACjG,CAAC;IAEM,WAAW;QACd,MAAM,CAAC,uCAAuC,CAAC;IACnD,CAAC;IAEM,OAAO;QACV,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;IAC9C,CAAC;CACJ,CAAA;AApBG;IADC,mBAAQ,EAAE;IACY,mBAAA,kBAAO,CAAC,uBAAU,CAAC,CAAA;;6CAAO,uBAAU,EAAqB,qCAAiB;;mDAEhG;AAvBQ,oBAAoB;IAKxB,mBAAA,kBAAM,CAAC,iBAAK,CAAC,IAAI,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,gBAAI,CAAC,MAAM,CAAC,CAAA;IACtC,mBAAA,kBAAM,CAAC,iBAAK,CAAC,OAAO,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,mBAAO,CAAC,OAAO,CAAC,cAAc,CAAC,CAAA;qDAAwB,+BAAc;GAN9F,oBAAoB,CAyChC;AAzCY,oDAAoB","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { Logger as LoggerType } from '../../../core/Logger';\nimport { inject, named } from 'inversify';\nimport { validate, request } from '../../../core/api/Validate';\nimport { Types, Core, Targets } from '../../../constants';\nimport { RpcRequest } from '../../requests/RpcRequest';\nimport { RpcCommandInterface } from '../RpcCommandInterface';\nimport { AddressService } from '../../services/AddressService';\nimport { Commands} from '../CommandEnumType';\nimport { BaseCommand } from '../BaseCommand';\nimport { RpcCommandFactory } from '../../factories/RpcCommandFactory';\n\nexport class AddressRemoveCommand extends BaseCommand implements RpcCommandInterface<void> {\n\n    public log: LoggerType;\n\n    constructor(\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType,\n        @inject(Types.Service) @named(Targets.Service.AddressService) public addressService: AddressService\n    ) {\n        super(Commands.ADDRESS_REMOVE);\n        this.log = new Logger(__filename);\n    }\n\n    /**\n     * data.params[]:\n     *  [0]: address id\n     *\n     * @param data\n     * @param rpcCommandFactory\n     * @returns {Promise<void>}\n     */\n    @validate()\n    public async execute( @request(RpcRequest) data: RpcRequest, rpcCommandFactory: RpcCommandFactory): Promise<void> {\n        return await this.addressService.destroy(data.params[0]);\n    }\n\n    public usage(): string {\n        return this.getName() + ' <addressId> ';\n    }\n\n    public help(): string {\n        return this.usage() + ' -  ' + this.description() + '\\n'\n            + '    <addressId>              - The ID of the address we want to remove and destroy. ';\n    }\n\n    public description(): string {\n        return 'Remove and destroy an address via ID.';\n    }\n\n    public example(): string {\n        return 'address ' + this.getName() + ' 1';\n    }\n}\n"]}