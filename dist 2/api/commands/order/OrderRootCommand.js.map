{"version":3,"file":"OrderRootCommand.js","sourceRoot":"","sources":["../../../../src/api/commands/order/OrderRootCommand.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF,yCAA0C;AAC1C,0DAAuD;AAEvD,yDAA+D;AAE/D,kDAA0D;AAC1D,gDAA6C;AAC7C,yEAAsE;AACtE,wDAA8C;AAE9C,IAAa,gBAAgB,GAA7B,sBAA8B,SAAQ,yBAAW;IAI7C,YACmD,MAAyB;QAExE,KAAK,CAAC,0BAAQ,CAAC,UAAU,CAAC,CAAC;QAFoB,WAAM,GAAN,MAAM,CAAmB;QAGxE,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,CAAC;IACtC,CAAC;IAGY,OAAO,CAAuB,IAAgB,EAAE,iBAAoC;;YAC7F,MAAM,CAAC,MAAM,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;QAC3D,CAAC;KAAA;IAEM,KAAK;QACR,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,gBAAgB,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAClE,CAAC;IAEM,IAAI;QACP,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;IACxB,CAAC;IAEM,WAAW;QACd,MAAM,CAAC,+BAA+B,CAAC;IAC3C,CAAC;CACJ,CAAA;AAfG;IADC,mBAAQ,EAAE;IACY,mBAAA,kBAAO,CAAC,uBAAU,CAAC,CAAA;;6CAAO,uBAAU,EAAqB,qCAAiB;;+CAEhG;AAdQ,gBAAgB;IAKpB,mBAAA,kBAAM,CAAC,iBAAK,CAAC,IAAI,CAAC,CAAA,EAAE,mBAAA,iBAAK,CAAC,gBAAI,CAAC,MAAM,CAAC,CAAA;;GALlC,gBAAgB,CA2B5B;AA3BY,4CAAgB","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport { inject, named } from 'inversify';\nimport { RpcRequest } from '../../requests/RpcRequest';\nimport { RpcCommandInterface } from '../RpcCommandInterface';\nimport { validate, request } from '../../../core/api/Validate';\nimport { Logger as LoggerType } from '../../../core/Logger';\nimport { Types, Core, Targets } from '../../../constants';\nimport { BaseCommand } from '../BaseCommand';\nimport { RpcCommandFactory } from '../../factories/RpcCommandFactory';\nimport { Commands } from '../CommandEnumType';\n\nexport class OrderRootCommand extends BaseCommand implements RpcCommandInterface<void> {\n\n    public log: LoggerType;\n\n    constructor(\n        @inject(Types.Core) @named(Core.Logger) public Logger: typeof LoggerType\n    ) {\n        super(Commands.ORDER_ROOT);\n        this.log = new Logger(__filename);\n    }\n\n    @validate()\n    public async execute( @request(RpcRequest) data: RpcRequest, rpcCommandFactory: RpcCommandFactory): Promise<any> {\n        return await this.executeNext(data, rpcCommandFactory);\n    }\n\n    public usage(): string {\n        return this.getName() + ' (search)  -  ' + this.description();\n    }\n\n    public help(): string {\n        return this.usage();\n    }\n\n    public description(): string {\n        return 'Commands for managing orders.';\n    }\n}\n"]}