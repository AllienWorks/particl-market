{"version":3,"file":"ValidationException.js","sourceRoot":"","sources":["../../../src/api/exceptions/ValidationException.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;AAEjF;;;;;;GAMG;AAEH,wDAAqD;AAGrD,yBAAiC,SAAQ,qBAAS;IAC9C,YAAY,IAAY,EAAE,MAAW;QACjC,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC;YAC5B,QAAQ,EAAE,CAAC,CAAC,QAAQ;YACpB,WAAW,EAAE,CAAC,CAAC,WAAW;SAC7B,CAAC,CAAC,CAAC;QACJ,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC3B,CAAC;CACJ;AARD,kDAQC","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\n/**\n * ValidationException\n * ----------------------------------------\n *\n * This should be used when we validate\n * the request payload, so we can response with a 400 (Bad Request)\n */\n\nimport { Exception } from '../../core/api/Exception';\n\n\nexport class ValidationException extends Exception {\n    constructor(text: string, errors: any) {\n        const info = errors.map((e) => ({\n            property: e.property,\n            constraints: e.constraints\n        }));\n        super(400, text, info);\n    }\n}\n"]}