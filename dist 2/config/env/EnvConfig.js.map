{"version":3,"file":"EnvConfig.js","sourceRoot":"","sources":["../../../src/config/env/EnvConfig.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport * as _ from 'lodash';\nimport * as dotenv from 'dotenv';\nimport * as path from 'path';\nimport { DataDir } from '../../core/helpers/DataDir';\nimport { Environment, EnvironmentType } from '../../core/helpers/Environment';\n\nexport class EnvConfig {\n\n    public dataDir: string;\n    public envFile = '.env';\n\n    private defaultEnv = {\n        NODE_ENV: EnvironmentType.DEVELOPMENT.toString(),\n        MARKETPLACE_VERSION: '0.0.1.0',\n        APP_NAME: 'particl-market',\n        APP_HOST: 'http://localhost',\n        APP_URL_PREFIX: '/api',\n        APP_PORT: 3000,\n        RPCHOSTNAME: 'localhost',\n        MAINNET_PORT: 51738,\n        TESTNET_PORT: 51935,\n        TESTNET: true,\n        REGTEST_PORT: 19792,\n        REGTEST: false,\n        INIT: true,\n        MIGRATE: true,\n        JASMINE_TIMEOUT: 100000,\n        DEFAULT_MARKETPLACE_NAME: 'DEFAULT',\n        DEFAULT_MARKETPLACE_PRIVATE_KEY: '2Zc2pc9jSx2qF5tpu25DCZEr1Dwj8JBoVL5WP4H1drJsX9sP4ek',\n        DEFAULT_MARKETPLACE_ADDRESS: 'pmktyVZshdMAQ6DPbbRXEFNGuzMbTMkqAA',\n        PAID_MESSAGE_RETENTION_DAYS: 4,\n        MARKET_RPC_AUTH_DISABLED: false,\n        MARKET_RPC_USER: 'test',\n        MARKET_RPC_PASSWORD: 'test',\n        EXPRESS_ENABLED: true,\n        SOCKETIO_ENABLED: true,\n        LOG_LEVEL: 'debug',\n        LOG_PATH:  'marketplace.log', // todo: separate log_path and log_file\n        LOG_ADAPTER: 'winston',\n        API_INFO_ENABLED: true,\n        API_INFO_ROUTE: '/info',\n        CLI_ENABLED: true,\n        CLI_ROUTE: '/cli',\n        SWAGGER_ENABLED: true,\n        SWAGGER_ROUTE: '/docs',\n        SWAGGER_FILE: '/src/api/swagger.json',\n        MONITOR_ENABLED: true,\n        MONITOR_ROUTE: '/status',\n        DB_CLIENT: 'sqlite3',\n        DB_POOL_MIN: 2,\n        DB_POOL_MAX: 10,\n        DB_MIGRATION_TABLE: 'version',\n        DATA_CHECK_DELAY: 60,\n        CHASING_COINS_API: 'https://chasing-coins.com/api/v1/convert',\n        CHASING_COINS_API_DELAY: 60,\n        LISTING_ITEMS_EXPIRED_INTERVAL: 10 // minutes\n    };\n\n    /**\n     * sets the environment configuration.\n     *\n     * whatever is set in .env/process.env will override the default config\n     *\n     * @param {string} dataDirLocation\n     * @param {string} envFileName\n     */\n    constructor(dataDirLocation?: string, envFileName?: string) {\n\n        if (dataDirLocation) {\n            // console.log('EnvConfig: setting DataDir:', dataDirLocation);\n            // DataDir.set(dataDirLocation);\n            this.dataDir = dataDirLocation;\n        }\n\n        if (envFileName && DataDir.checkIfExists(envFileName)) {\n            this.envFile = envFileName;\n        } else {\n            this.envFile = path.join(DataDir.getDefaultDataDirPath(), this.envFile);\n        }\n\n        console.log('EnvConfig: envFile:', this.envFile);\n        console.log('EnvConfig: dataDir:', this.dataDir);\n\n        // loads the .env file into the 'process.env' variable.\n        dotenv.config({ path: this.envFile });\n\n        // set default values if not set by dotenv\n        _.forOwn(this.defaultEnv, (value: any, key: string) => {\n            if (typeof process.env[key] === 'undefined') {\n                console.log('setting missing: process.env.' + key + ' ->', value);\n                process.env[key] = value;\n            }\n        });\n\n        if (!Environment.isTest()) {\n            console.log('current env:');\n            _.forOwn(this.defaultEnv, (value: any, key: string) => {\n                console.log('process.env.' + key + ':', process.env[key]);\n            });\n        }\n\n    }\n\n}\n"]}