{"version":3,"file":"AppConfig.js","sourceRoot":"","sources":["../../src/config/AppConfig.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;AAEjF;;;;;;GAMG;AAEH,6BAA6B;AAC7B,6BAA6B;AAC7B,iCAAiC;AACjC,iCAAiC;AACjC,mCAAmC;AACnC,yCAAyC;AACzC,0CAA0C;AAC1C,2CAA2C;AAC3C,2CAAwC;AAGxC;IACW,SAAS,CAAC,GAAQ;QAErB,MAAM,MAAM,GAAG,IAAI,eAAM,EAAE,CAAC;QAE5B,GAAG,CAAC,OAAO;aAEN,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC;aACpB,GAAG,CAAC,IAAI,EAAE,CAAC;aAGX,GAAG,CAAC,MAAM,EAAE,CAAC;aACb,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;YACb,MAAM,EAAE,QAAQ;YAChB,iBAAiB,EAAE,IAAI;SAC1B,CAAC,CAAC;aAGF,GAAG,CAAC,WAAW,EAAE,CAAC;aAIlB,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;aACtC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC;YACvB,QAAQ,EAAE,IAAI;SACjB,CAAC,CAAC;aAGF,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,QAAQ,CAAC,EAAE,EAAE,MAAM,EAAE,QAAQ,EAAE,CAAC,CAAC;aAG/E,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,QAAQ,EAAE,aAAa,CAAC,CAAC,CAAC;aAGjE,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE;YACf,MAAM,EAAE;gBACJ,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;aAClC;SACJ,CAAC,CAAC,CAAC;IACZ,CAAC;CACJ;AAxCD,8BAwCC","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\n/**\n * APPLICATION CONFIGURATION\n * ----------------------------------------\n *\n * This is the place to add any other express module and register\n * all your custom middlewares and routes.\n */\n\nimport * as path from 'path';\nimport * as cors from 'cors';\nimport * as morgan from 'morgan';\nimport * as helmet from 'helmet';\nimport * as express from 'express';\nimport * as favicon from 'serve-favicon';\nimport * as bodyParser from 'body-parser';\nimport * as compression from 'compression';\nimport { Logger } from '../core/Logger';\nimport { App, Configurable } from '../core/App';\n\nexport class AppConfig implements Configurable {\n    public configure(app: App): void {\n\n        const logger = new Logger();\n\n        app.Express\n            // Enabling the cors headers\n            .options('*', cors())\n            .use(cors())\n\n            // Helmet helps you secure your Express apps by setting various HTTP headers. It's not a silver bullet, but it can help!\n            .use(helmet())\n            .use(helmet.hsts({\n                maxAge: 31536000,\n                includeSubdomains: true\n            }))\n\n            // Compress response bodies for all request that traverse through the middleware\n            .use(compression())\n\n            // Parse incoming request bodies in a middleware before your handlers, available under the req.body property.\n            // TODO: decide on some limit\n            .use(bodyParser.json({ limit: '5mb' }))\n            .use(bodyParser.urlencoded({\n                extended: true\n            }))\n\n            // Serve static files like images from the public folder\n            .use(express.static(path.join(__dirname, '..', 'public'), { maxAge: Infinity }))\n\n            // A favicon is a visual cue that client software, like browsers, use to identify a site\n            .use(favicon(path.join(__dirname, '..', 'public', 'favicon.ico')))\n\n            // HTTP request logger middleware for node.js\n            .use(morgan('dev', {\n                stream: {\n                    write: logger.info.bind(logger)\n                }\n            }));\n    }\n}\n"]}