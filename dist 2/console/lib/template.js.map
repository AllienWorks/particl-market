{"version":3,"file":"template.js","sourceRoot":"","sources":["../../../src/console/lib/template.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF,yBAAyB;AACzB,6BAA6B;AAC7B,iCAAiC;AACjC,yCAAyC;AAG5B,QAAA,YAAY,GAAG,CAAO,IAAY,EAAE,OAAgB,KAAK;IAClE,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;QAC/B,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,gBAAgB,IAAI,EAAE,CAAC,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,EAAE,CAAC,GAAQ,EAAE,OAAY;YACpG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACP,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,CAAC;gBACD,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACvB,CAAC;YACD,OAAO,CAAC,OAAO,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAA,CAAC;AAEW,QAAA,aAAa,GAAG,CAAO,QAAgB,EAAE,QAAgB,EAAE,OAAY;IAChF,MAAM,UAAU,CAAC,QAAQ,CAAC,CAAC;IAC3B,MAAM,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;AACpD,CAAC,CAAA,CAAC;AAEF,MAAM,UAAU,GAAG,CAAC,QAAgB;IAChC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;QAC/B,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG;YAC/B,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACpB,CAAC;gBACD,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACvB,CAAC;YACD,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;AACP,CAAC,CAAC;AAEF,MAAM,YAAY,GAAG,CAAO,QAAgB,EAAE,QAAgB,EAAE,OAAY;IACxE,MAAM,QAAQ,GAAG,MAAM,oBAAY,CAAC,QAAQ,CAAC,CAAC;IAC9C,MAAM,OAAO,GAAG,UAAU,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACtD,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM;QAC/B,EAAE,CAAC,SAAS,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,GAAQ;YACrC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACN,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;YACvB,CAAC;YACD,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;IAEP,CAAC,CAAC,CAAC;AACP,CAAC,CAAA,CAAC","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport * as mkdirp from 'mkdirp';\nimport * as handlebars from 'handlebars';\n\n\nexport const loadTemplate = async (file: string, stop: boolean = false): Promise<any> => {\n    return new Promise((resolve, reject) => {\n        fs.readFile(path.join(__dirname, `../templates/${file}`), { encoding: 'utf-8' }, (err: any, content: any) => {\n            if (err) {\n                console.log(err);\n                if (stop) {\n                    process.exit(1);\n                }\n                return reject(err);\n            }\n            resolve(content);\n        });\n    });\n};\n\nexport const writeTemplate = async (tempFile: string, filePath: string, context: any): Promise<any> => {\n    await syncFolder(filePath);\n    await syncTemplate(filePath, tempFile, context);\n};\n\nconst syncFolder = (filePath: string) => {\n    return new Promise((resolve, reject) => {\n        mkdirp(path.dirname(filePath), (err) => {\n            if (err) {\n                if (stop) {\n                    console.log(err);\n                    process.exit(1);\n                }\n                return reject(err);\n            }\n            resolve();\n        });\n    });\n};\n\nconst syncTemplate = async (filePath: string, tempFile: string, context: any) => {\n    const template = await loadTemplate(tempFile);\n    const content = handlebars.compile(template)(context);\n    return new Promise((resolve, reject) => {\n        fs.writeFile(filePath, content, (err: any) => {\n            if (err) {\n                console.log(err);\n                return reject(err);\n            }\n            resolve();\n        });\n\n    });\n};\n"]}