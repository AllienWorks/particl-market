{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../src/console/lib/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\nimport * as fs from 'fs';\nimport * as _ from 'lodash';\nimport * as path from 'path';\nimport * as inquirer from 'inquirer';\nimport * as pluralize from 'pluralize';\nimport { UpdateTargetsCommand } from '../UpdateTargetsCommand';\n\n\nexport const parseName = (name: string, suffix: string) => ({\n    camelCase: _.camelCase(removeSuffix(suffix, name)),\n    snakeCase: _.snakeCase(removeSuffix(suffix, name)),\n    capitalize: _.upperFirst(_.camelCase(removeSuffix(suffix, name))),\n    lowerCase: _.lowerCase(removeSuffix(suffix, name)),\n    kebabCase: _.kebabCase(removeSuffix(suffix, name)),\n    pluralize: pluralize(_.kebabCase(removeSuffix(suffix, name))),\n    normal: name\n});\n\nexport const removeSuffix = (suffix: string, value: string) => {\n    return value.replace(suffix, '');\n};\n\nexport const filterInput = (suffix: string, prefix = '') => (value: string) => {\n    if (value.indexOf('/') < 0) {\n        return value;\n    }\n    let vs = value.split('/');\n    vs = vs.map((v) => _.camelCase(v));\n    vs[vs.length - 1] = _.capitalize(vs[vs.length - 1]);\n    return (vs.join('/')) + prefix + suffix;\n};\n\nexport const buildFilePath = (targetPath: string, fileName: string, isTest = false, extension = '.ts') => {\n    if (isTest) {\n        return path.join(__dirname, `/../../../test/${targetPath}`, `${fileName}.test${extension}`);\n    } else {\n        return path.join(__dirname, `/../../${targetPath}`, `${fileName}${extension}`);\n    }\n};\n\nexport const inputIsRequired = (value: any) => !!value;\n\nexport const existsFile = async (filePath: string, stop: boolean = false, isTest = false) => {\n    const prompt = inquirer.createPromptModule();\n    return new Promise((resolve, reject) => {\n        fs.exists(filePath, async (exists) => {\n\n            if (exists) {\n                let fileName = filePath.split(path.normalize('/src/'))[1];\n                if (isTest) {\n                    fileName = filePath.split(path.normalize('/test/'))[1];\n                }\n                const answer = await prompt([\n                    {\n                        type: 'confirm',\n                        name: 'override',\n                        message: `Override \"${path.join(isTest ? 'test' : 'src', fileName)}\"?`,\n                        default: true\n                    }\n                ]);\n                if (answer.override) {\n                    return resolve(exists);\n                }\n            } else {\n                return resolve(exists);\n            }\n\n            if (stop) {\n                process.exit(0);\n            }\n            reject();\n        });\n    });\n};\n\nexport const updateTargets = async () => {\n    console.log('');\n    const prompt = inquirer.createPromptModule();\n    const answer = await prompt([\n        {\n            type: 'confirm',\n            name: 'generateTargets',\n            message: 'Update IoC targets?',\n            default: true\n        }\n    ]);\n    if (answer.generateTargets === true) {\n        const command = new UpdateTargetsCommand();\n        await command.run();\n    }\n};\n\nexport const askProperties = async (name: string): Promise<any[]> => {\n    console.log('');\n    console.log(`Let\\'s add some ${name} properties now.`);\n    console.log(`Enter an empty property name when done.`);\n    console.log('');\n\n    let askAgain = true;\n    const fieldPrompt = inquirer.createPromptModule();\n    const properties: any[] = [];\n    while (askAgain) {\n        const property = await fieldPrompt([\n            {\n                type: 'input',\n                name: 'name',\n                message: 'Property name:',\n                filter: (value: any) => _.camelCase(value)\n            }, {\n                type: 'list',\n                name: 'type',\n                message: 'Property type:',\n                when: (res: any) => {\n                    askAgain = !!res['name'];\n                    return askAgain;\n                },\n                choices: [\n                    'string (string)',\n                    'text (string)',\n\n                    'boolean (boolean)',\n\n                    'integer (number)',\n                    'bigInteger (number)',\n                    'float (number)',\n                    'decimal (number)',\n                    'binary (number)',\n\n                    'date (Date)',\n                    'time (Date)',\n                    'dateTime (Date)'\n                ]\n            }\n        ]);\n        if (askAgain) {\n            console.log('');\n            property.name = parseName(property.name, '');\n            properties.push(property);\n        }\n    }\n    for (const property of properties) {\n        const types = property.type.replace(/[()]/g, '').split(' ');\n        property.type = {\n            script: types[1],\n            database: types[0]\n        };\n    }\n    /*\n    properties.map(p => {\n        const types = p.type.replace(/[()]/g, '').split(' ');\n        p.type = {\n            script: types[1],\n            database: types[0]\n        };\n        return p;\n    });\n    */\n    console.log('');\n    return properties;\n};\n"]}