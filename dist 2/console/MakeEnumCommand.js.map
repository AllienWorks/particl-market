{"version":3,"file":"MakeEnumCommand.js","sourceRoot":"","sources":["../../src/console/MakeEnumCommand.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\n/**\n * MakeEnumCommand\n * -------------------------------------\n *\n */\nimport * as _ from 'lodash';\nimport * as inquirer from 'inquirer';\nimport { AbstractMakeCommand } from './lib/AbstractMakeCommand';\n\nexport class MakeEnumCommand extends AbstractMakeCommand {\n\n    public static command = 'make:enum';\n    public static description = 'Generate new enum';\n\n    public type = 'Enum';\n    public suffix = '';\n    public template = 'enum.hbs';\n    public target = 'api/enums';\n    public updateTargets = false;\n\n    public async run(): Promise<void> {\n        await super.run();\n        const metaData = await this.askMetaData(this.context);\n        this.context = { ...(this.context || {}), ...metaData };\n\n        if (this.context.hasProperties && !this.context.properties) {\n            this.context.properties = await this.askProperties(this.context.name);\n        }\n\n    }\n\n    public async write(): Promise<void> {\n\n        // Create model\n        await super.write();\n    }\n\n    private async askMetaData(context: any): Promise<any> {\n        const prompt = inquirer.createPromptModule();\n        const prompts = await prompt([\n            {\n                type: 'confirm',\n                name: 'hasProperties',\n                message: 'Do you want to add some properties?',\n                default: true,\n                when: () => !this.context.properties\n            }\n        ]);\n        return _.assign(context, prompts);\n    }\n\n    private async askProperties(name: string): Promise<any[]> {\n        console.log('');\n        console.log(`Let\\'s add some ${name} properties now.`);\n        console.log(`Enter an empty property name when done.`);\n        console.log('');\n\n        let askAgain = true;\n        const fieldPrompt = inquirer.createPromptModule();\n        const properties: any[] = [];\n        while (askAgain) {\n            const property = await fieldPrompt([\n                {\n                    type: 'input',\n                    name: 'name',\n                    message: 'Property name:',\n                    filter: (value: string) => value.toUpperCase()\n                }, {\n                    type: 'list',\n                    name: 'type',\n                    message: 'Property type:',\n                    when: (res: any) => {\n                        askAgain = !!res['name'];\n                        return askAgain;\n                    },\n                    choices: [\n                        'string (string)'\n                        // TODO: 'integer (number)'\n                    ]\n                }\n            ]);\n            if (askAgain) {\n                console.log('');\n                properties.push(property);\n            }\n        }\n        for (const property of properties) {\n            const types = property.type.replace(/[()]/g, '').split(' ');\n            property.type = {\n                script: types[1],\n                database: types[0]\n            };\n        }\n/*\n        properties.map(p => {\n            const types = p.type.replace(/[()]/g, '').split(' ');\n            p.type = {\n                script: types[1],\n                database: types[0]\n            };\n            return p;\n        });\n*/\n        console.log('');\n        return properties;\n    }\n}\n"]}