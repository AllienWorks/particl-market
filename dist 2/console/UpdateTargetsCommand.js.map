{"version":3,"file":"UpdateTargetsCommand.js","sourceRoot":"","sources":["../../src/console/UpdateTargetsCommand.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\n/**\n * UpdateTargetsCommand\n * -------------------------------------\n *\n * This script reads all the api files and generate the\n * needed ioc targets file.\n */\nimport * as path from 'path';\nimport * as _ from 'lodash';\nimport * as glob from 'glob';\nimport * as handlebars from 'handlebars';\nimport { AbstractCommand } from './lib/AbstractCommand';\nimport { writeTemplate } from './lib/template';\nimport { existsFile } from './lib/utils';\n\n\nexport class UpdateTargetsCommand extends AbstractCommand {\n\n    public static command = 'update:targets';\n    public static description = 'Generate new controller';\n\n    public template = 'targets.hbs';\n    public targetFile = 'Targets.ts';\n\n    public async run(): Promise<void> {\n        const files = await this.getFiles();\n\n        let context = {};\n        files.forEach((filePath) => {\n            const obj = this.divideFilePath(filePath);\n            const tmpContext = {};\n            tmpContext[obj.key] = this.parseFilePath(obj.path);\n            context = _.merge(context, tmpContext);\n        });\n\n        handlebars.registerHelper('object', (c) => {\n            let json = JSON.stringify(c, null, 4) || '{}';\n            let jsonLines = json.split('\\n');\n            jsonLines = jsonLines.map(line => `    ${line}`);\n            json = jsonLines.join('\\n');\n            return json.replace(/\\\"([^(\\\")\"]+)\\\":/g, '$1:').replace(/\"/g, '\\'');\n        });\n\n        const filepath = path.join(__dirname.replace('console', 'constants'), this.targetFile);\n        await existsFile(filepath, true);\n        await writeTemplate(this.template, filepath, context);\n\n    }\n\n    private async getFiles(): Promise<string[]> {\n        return new Promise<string[]>((resolve, reject) => {\n            const filepath = path.normalize(__dirname.replace('console', 'api'));\n            glob(`${path.join(filepath, '**', '*.ts')}`, (err: any, files: string[]) => {\n                if (err) {\n                    return reject(err);\n                }\n                files = files\n                    .map(f => path.normalize(f))\n                    .map((f) => f.replace(filepath + path.sep, ''))\n                    .map((f) => f.replace('.ts', ''));\n                resolve(files);\n            });\n        });\n    }\n\n    private divideFilePath(filePath: string): any {\n        const fs = filePath.split(path.sep);\n        const key = fs[0];\n        fs.splice(0, 1);\n        return {\n            key,\n            path: fs.join(path.sep)\n        };\n    }\n\n    private parseFilePath(filePath: string): any {\n        if (filePath.indexOf(path.sep) !== -1) {\n            const obj = this.divideFilePath(filePath);\n            return {\n                [obj.key]: this.parseFilePath(obj.path)\n            };\n        } else {\n            return {\n                [filePath]: filePath\n            };\n        }\n    }\n\n}\n"]}