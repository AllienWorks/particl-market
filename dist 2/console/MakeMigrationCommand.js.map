{"version":3,"file":"MakeMigrationCommand.js","sourceRoot":"","sources":["../../src/console/MakeMigrationCommand.ts"],"names":[],"mappings":";AAAA,yDAAyD;AACzD,mEAAmE;AACnE,iFAAiF;;;AAEjF;;;;GAIG;AACH,4BAA4B;AAC5B,qCAAqC;AACrC,mEAAgE;AAChE,uCAA8C;AAG9C,0BAAkC,SAAQ,yCAAmB;IAA7D;;QAKW,WAAM,GAAG,qBAAqB,CAAC;QAC/B,SAAI,GAAG,WAAW,CAAC;QACnB,WAAM,GAAG,EAAE,CAAC;QACZ,aAAQ,GAAG,eAAe,CAAC;QAC3B,kBAAa,GAAG,KAAK,CAAC;IAmCjC,CAAC;IAjCgB,GAAG;;YACZ,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC;YAErG,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,MAAM,GAAG,QAAQ,CAAC,kBAAkB,EAAE,CAAC;gBAC7C,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC;oBACzB;wBACI,IAAI,EAAE,OAAO;wBACb,IAAI,EAAE,MAAM;wBACZ,OAAO,EAAE,yBAAyB,IAAI,CAAC,IAAI,GAAG;wBAC9C,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;wBAC3B,QAAQ,EAAE,uBAAe;qBAC5B;iBACJ,CAAC,CAAC;gBACH,IAAI,CAAC,OAAO,qBAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC,EAAK,OAAO,CAAE,CAAC;gBACvD,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,YAAY,EAAE,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC;YACjE,CAAC;QAEL,CAAC;KAAA;IAEO,YAAY;QAChB,MAAM,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;QACzB,MAAM,YAAY,GAAG,CAAC,CAAS,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;QAChE,IAAI,SAAS,GAAG,GAAG,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC;QACzC,SAAS,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC;QACjD,SAAS,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC;QAC/C,SAAS,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,CAAC;QACjD,SAAS,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC;QACnD,SAAS,IAAI,GAAG,YAAY,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC;QACnD,MAAM,CAAC,SAAS,CAAC;IACrB,CAAC;;AAxCa,4BAAO,GAAG,gBAAgB,CAAC;AAC3B,gCAAW,GAAG,wBAAwB,CAAC;AAHzD,oDA4CC","sourcesContent":["// Copyright (c) 2017-2018, The Particl Market developers\n// Distributed under the GPL software license, see the accompanying\n// file COPYING or https://github.com/particl/particl-market/blob/develop/LICENSE\n\n/**\n * MakeMigrationCommand\n * -------------------------------------\n *\n */\nimport * as _ from 'lodash';\nimport * as inquirer from 'inquirer';\nimport { AbstractMakeCommand } from './lib/AbstractMakeCommand';\nimport { inputIsRequired } from './lib/utils';\n\n\nexport class MakeMigrationCommand extends AbstractMakeCommand {\n\n    public static command = 'make:migration';\n    public static description = 'Generate new migration';\n\n    public target = 'database/migrations';\n    public type = 'Migration';\n    public suffix = '';\n    public template = 'migration.hbs';\n    public updateTargets = false;\n\n    public async run(): Promise<void> {\n        if (this.context && this.context.tableName) {\n            this.context.name = `${this.getTimestamp()}_create_${_.snakeCase(this.context.tableName)}_table`;\n\n        } else {\n            const prompt = inquirer.createPromptModule();\n            const prompts = await prompt([\n                {\n                    type: 'input',\n                    name: 'name',\n                    message: `Enter the name of the ${this.type}:`,\n                    filter: v => _.snakeCase(v),\n                    validate: inputIsRequired\n                }\n            ]);\n            this.context = { ...(this.context || {}), ...prompts };\n            this.context.name = `${this.getTimestamp()}_${prompts.name}`;\n        }\n\n    }\n\n    private getTimestamp(): string {\n        const today = new Date();\n        const formatNumber = (n: number) => (n < 10) ? `0${n}` : `${n}`;\n        let timestamp = `${today.getFullYear()}`;\n        timestamp += `${formatNumber(today.getMonth())}`;\n        timestamp += `${formatNumber(today.getDay())}`;\n        timestamp += `${formatNumber(today.getHours())}`;\n        timestamp += `${formatNumber(today.getMinutes())}`;\n        timestamp += `${formatNumber(today.getSeconds())}`;\n        return timestamp;\n    }\n\n}\n"]}