
workspace:
  base: /workspace      # shared base volume available to all pipeline steps.
  path: particl-market  # default working directory, where your code is cloned


kind: pipeline
name: Build and Push


steps:

- name: restore cache
  image: plugins/s3-cache:latest
  settings:
    pull: true
    endpoint: http://minio.particl.xyz:9001
    access_key:
      from_secret: MINIO_ACCESS_KEY
    secret_key:
      from_secret: MINIO_SECRET_KEY
    restore: true
    path: /cache/particl-market/


- name: build and push image
  image: plugins/docker
  pull: always
  storage_path: /workspace/docker       # the path where persisted data such as images, volumes, and cluster state
                                        # are stored (default: /var/lib/docker)
  settings:
    repo: ludx/particl-market-ci
    dockerfile: Dockerfile.ci
    username:
      from_secret: REGISTRY_USER
    password:
      from_secret: REGISTRY_PASSWORD
    debug: true
    tags:
      - latest
      - ${DRONE_COMMIT_SHA}


- name: run unit tests
  image: ludx/particl-market-ci:${DRONE_COMMIT_SHA}
  commands:
    - rsync -a --stats --delete --delete-excluded /workspace/particl-market/node_modules/* /app/node_modules/
#    - cp -rf /workspace/particl-market/node_modules /app || true    # copy the node_modules from the cached workspace
    - cd /app                                                       # cd the actual app folder from the workspace
    - bin/ci-unit-tests.sh                                          # run the tests
#    - cp -rf /app/node_modules /workspace/particl-market/           # copy the node_modules to the workspace so they can be cached
    - rsync -a --stats --delete --delete-excluded /app/node_modules/* /workspace/particl-market/node_modules/


- name: ls cache test1
  image: docker
  commands:
    - echo "DRONE_COMMIT_MESSAGE ${DRONE_COMMIT_MESSAGE}"
    - echo "DRONE_REPO_NAMESPACE ${DRONE_REPO_NAMESPACE}"
    - echo "DRONE_REPO_NAME ${DRONE_REPO_NAME}"
    - echo "DRONE_REPO ${DRONE_REPO}"
    - echo "DRONE_BUILD_NUMBER ${DRONE_BUILD_NUMBER}"
    - echo "workspace:"
    - ls -al /workspace/particl-market/node_modules


- name: rebuild cache
  image: plugins/s3-cache:latest
  settings:
    pull: true
    endpoint: http://minio.particl.xyz:9001
    access_key:
      from_secret: MINIO_ACCESS_KEY
    secret_key:
      from_secret: MINIO_SECRET_KEY
    rebuild: true
    debug: true
    mount:
      - node_modules
    path: /cache/particl-market/
    fallback_path: /cache/particl-market/
#    when:
#      event: push


- name: flush
  image: plugins/s3-cache:latest
  settings:
    pull: true
    endpoint: http://minio.particl.xyz:9001
    access_key:
      from_secret: MINIO_ACCESS_KEY
    secret_key:
      from_secret: MINIO_SECRET_KEY
    flush: true
    flush_age: 14
    flush_path: /cache/particl-market/


# pipeline describes build steps
#pipeline:
    # every entry in the pipeline describes a single build step
#    build_image:
#        image: node
#        environment:
#            VERSION: "${DRONE_TAG}"
#            COMMIT: "${DRONE_COMMIT_SHA:0:7}"

        # commands executed in the container
#        commands:
#            - ./bin/ci-post.sh "[$CIRCLE_BRANCH] Building $CIRCLE_BUILD_URL" "CircleCI" "$DISCORD_URL"
#            - ./bin/ci-create-build-version.sh
#            - docker login $REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASS
#            - docker build --pull --cache-from "$IMAGE_NAME" --tag "$REGISTRY/$IMAGE_NAME:$CIRCLE_SHA1" -f Dockerfile.ci .
#            - docker push $REGISTRY/$IMAGE_NAME:$CIRCLE_SHA1
