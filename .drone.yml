
workspace:
  base: /workspace      # shared base volume available to all pipeline steps.
  path: particl-market  # default working directory, where your code is cloned

kind: pipeline
name: Build and Push

#node:
#  instance: drone-agent4

steps:

- name: build info
  image: docker
  commands:
    - echo "DRONE_MACHINE ${DRONE_MACHINE}"
    - echo "DRONE_RUNNER_HOSTNAME ${DRONE_RUNNER_HOSTNAME}"
    - echo "DRONE_RUNNER_LABEL ${DRONE_RUNNER_LABEL}"
    - echo "DRONE_REPO ${DRONE_REPO}"
    - echo "DRONE_BUILD_EVENT ${DRONE_BUILD_EVENT}"
    - echo "DRONE_BUILD_NUMBER ${DRONE_BUILD_NUMBER}"
    - echo "DRONE_COMMIT_MESSAGE ${DRONE_COMMIT_MESSAGE}"
    - echo "DRONE_COMMIT_AUTHOR_EMAIL ${DRONE_COMMIT_AUTHOR_EMAIL}"
    - echo "DRONE_COMMIT_BRANCH ${DRONE_COMMIT_BRANCH}"
    - echo "DRONE_COMMIT_SHA ${DRONE_COMMIT_SHA}"
    - echo "DRONE_PULL_REQUEST ${DRONE_PULL_REQUEST}"
    - echo "DRONE_SOURCE_BRANCH ${DRONE_SOURCE_BRANCH}"
    - echo "DRONE_TARGET_BRANCH ${DRONE_TARGET_BRANCH}"
    - echo "DRONE_COMMIT_LINK ${DRONE_COMMIT_LINK}"
    - echo "DRONE_COMMIT_REF ${DRONE_COMMIT_REF}"


- name: restore cache
  image: plugins/s3-cache:latest
  volumes:
    - name: node_modules
      path: /workspace/particl-market/node_modules
  settings:
    pull: true
    endpoint: http://minio.particl.xyz:9001
    access_key:
      from_secret: MINIO_ACCESS_KEY
    secret_key:
      from_secret: MINIO_SECRET_KEY
    restore: true
    path: /cache/particl-market/


- name: build (feature-push)
  image: plugins/docker
  pull: always
  storage_path: /workspace/docker
  settings:
    repo: ludx/particl-market-ci
    dockerfile: Dockerfile.ci
    username:
      from_secret: REGISTRY_USER
    password:
      from_secret: REGISTRY_PASSWORD
    debug: true
    tags:
      - latest
      - ${DRONE_COMMIT_SHA}             # current commit tag
      - ci-test                         # kontena blackbox/ui test env stack tag
      - feature                         # kontena feature env stack tag
  when:
    branch:
      exclude:
        - develop
        - master
    event:
      - push
    repo:
      exclude:
        - particl/particl-market
      include:
        - xludx/particl-market          # todo: others


- name: build (feature-pr)
  image: plugins/docker
  pull: always
  storage_path: /workspace/docker
  settings:
    repo: ludx/particl-market-ci
    dockerfile: Dockerfile.ci
    username:
      from_secret: REGISTRY_USER
    password:
      from_secret: REGISTRY_PASSWORD
    debug: true
    tags:
      - latest
      - ${DRONE_COMMIT_SHA}             # current commit tag
      - ci-test                         # kontena blackbox/ui test env stack tag
      - feature                         # kontena feature env stack tag
  when:
    branch:                           # target branch is evaluated for pull requests
      - develop                       # ...and branch names are not available for tag events.
    event:
      - pull_request
    repo:
      include:
        - particl/particl-market
        - xludx/particl-market


- name: build (develop-push)
  image: plugins/docker
  pull: always
  storage_path: /workspace/docker
  settings:
    repo: ludx/particl-market-ci
    dockerfile: Dockerfile.ci
    username:
      from_secret: REGISTRY_USER
    password:
      from_secret: REGISTRY_PASSWORD
    debug: true
    tags:
      - latest
      - ${DRONE_COMMIT_SHA}             # current commit tag
      - ci-test                         # kontena blackbox/ui test env stack tag
      - develop                         # kontena develop env stack tag
  when:
    branch:
      - develop
    event:
      - push


- name: build (develop-pr)
  image: plugins/docker
  pull: always
  storage_path: /workspace/docker
  settings:
    repo: ludx/particl-market-ci
    dockerfile: Dockerfile.ci
    username:
      from_secret: REGISTRY_USER
    password:
      from_secret: REGISTRY_PASSWORD
    debug: true
    tags:
      - latest
      - ${DRONE_COMMIT_SHA}             # current commit tag
      - ci-test                         # kontena blackbox/ui test env stack tag
      - develop                         # kontena master env stack tag
  when:
    branch:
      - master
    event:
      - pull_request


- name: run unit tests
  image: ludx/particl-market-ci:${DRONE_COMMIT_SHA}
  volumes:
    - name: node_modules
      path: /app/node_modules
    - name: node_modules
      path: /workspace/particl-market/node_modules
  commands:
#    - ls -al /app/node_modules
#    - ls -al /workspace/particl-market/node_modules
#    - mkdir -p /workspace/particl-market/node_modules
#    - mkdir -p /app/node_modules
#    - rsync -a --stats --delete --delete-excluded /workspace/particl-market/node_modules/* /app/node_modules/
#    - cp -rf /workspace/particl-market/node_modules /app || true
    - cd /app                                                       # cd to the actual app folder from the workspace
#    - ln -s /workspace/particl-market/node_modules node_modules
    - bin/ci-unit-tests.sh                                          # run the tests
#    - cp -rf /app/node_modules /workspace/particl-market/          # copy the node_modules to the workspace so they can be cached
#    - rsync -a --stats --delete --delete-excluded /app/node_modules/* /workspace/particl-market/node_modules/
#    - ls -al /app/node_modules
#    - ls -al /workspace/particl-market/node_modules


- name: run integration tests
  image: ludx/particl-market-ci:${DRONE_COMMIT_SHA}
  volumes:
    - name: node_modules
      path: /app/node_modules
  commands:
#    - ls -al /app/node_modules
#    - rsync -a --stats --delete --delete-excluded /workspace/particl-market/node_modules/* /app/node_modules/
    - cd /app                                                       # cd to the actual app folder from the workspace
#    - ln -s /workspace/particl-market/node_modules node_modules
    - bin/ci-integration-tests.sh                                   # run the tests
#    - rsync -a --stats --delete --delete-excluded /app/node_modules/* /workspace/particl-market/node_modules/


- name: upgrade kontena stack for tests
  image: ludx/codefresh-custom-runner                               # TODO: use ludx/particl-market-ci
#  image: ludx/particl-market-ci:${DRONE_COMMIT_SHA}
  commands:
    - bin/kontena-stack-upgrade.sh ruth-master gridsteri dappshellcircle-stack git@github.com:particl/particl-market.git ${DRONE_BRANCH} kontena-circle.yml


- name: run blackbox tests
  image: ludx/particl-market-ci:${DRONE_COMMIT_SHA}
  volumes:
    - name: node_modules
      path: /app/node_modules
  commands:
#    - ls -al /app/node_modules
#    - rsync -a --stats --delete --delete-excluded /workspace/particl-market/node_modules/* /app/node_modules/
    - cd /app
#    - ln -s /workspace/particl-market/node_modules node_modules
    - bin/ci-blackbox-tests.sh
#    - rsync -a --stats --delete --delete-excluded /app/node_modules/* /workspace/particl-market/node_modules/


- name: run ui tests
  image: ludx/particl-market-ci:${DRONE_COMMIT_SHA}
  volumes:
    - name: node_modules
      path: /app/node_modules
  commands:
#    - rsync -a --stats --delete --delete-excluded /workspace/particl-market/node_modules/* /app/node_modules/
    - cd /app
#    - ln -s /workspace/particl-market/node_modules node_modules
    - bin/ci-ui-tests.sh
#    - rsync -a --stats --delete --delete-excluded /app/node_modules/* /workspace/particl-market/node_modules/


- name: deploy (feature-push)
  image: ludx/codefresh-custom-runner     # TODO: use ludx/particl-market-ci:${DRONE_COMMIT_SHA}
  commands:
    - bin/kontena-stack-upgrade.sh ruth-master gridsteri dappshellfeature-stack git@github.com:particl/particl-market.git ${DRONE_BRANCH} kontena-feature.yml
  when:
    branch:
      exclude:
        - develop
        - master
    event:
      - push
    repo:
      exclude:
        - particl/particl-market
      include:
        - xludx/particl-market          # todo: others


- name: deploy (feature-pr)
  image: ludx/codefresh-custom-runner     # TODO: use ludx/particl-market-ci:${DRONE_COMMIT_SHA}
  commands:
    - bin/kontena-stack-upgrade.sh ruth-master gridsteri dappshellfeature-stack git@github.com:particl/particl-market.git ${DRONE_SOURCE_BRANCH} kontena-feature.yml
  when:
    branch:
      - develop
    event:
      - pull_request
    repo:
      include:
        - particl/particl-market
        - xludx/particl-market


- name: deploy (develop-push)
  image: ludx/codefresh-custom-runner     # TODO: use ludx/particl-market-ci:${DRONE_COMMIT_SHA}
  commands:
    - bin/kontena-stack-upgrade.sh ruth-master gridsteri dappshellfeature-stack git@github.com:particl/particl-market.git ${DRONE_BRANCH} kontena-develop.yml
  when:
    branch:
      - develop
    event:
      - push


- name: deploy (develop-pr)
  image: ludx/codefresh-custom-runner     # TODO: use ludx/particl-market-ci:${DRONE_COMMIT_SHA}
  commands:
    - bin/kontena-stack-upgrade.sh ruth-master gridsteri dappshellfeature-stack git@github.com:particl/particl-market.git ${DRONE_SOURCE_BRANCH} kontena-develop.yml
  when:
    branch:
      - master
    event:
      - pull_request


- name: rebuild cache
  image: plugins/s3-cache:latest
  volumes:
    - name: node_modules
      path: /workspace/particl-market/node_modules
  settings:
    pull: true
    endpoint: http://minio.particl.xyz:9001
    access_key:
      from_secret: MINIO_ACCESS_KEY
    secret_key:
      from_secret: MINIO_SECRET_KEY
    rebuild: true
    debug: true
    mount:
      - node_modules
    path: /cache/particl-market/
    fallback_path: /cache/particl-market/


- name: flush cache
  image: plugins/s3-cache:latest
  settings:
    pull: true
    endpoint: http://minio.particl.xyz:9001
    access_key:
      from_secret: MINIO_ACCESS_KEY
    secret_key:
      from_secret: MINIO_SECRET_KEY
    flush: true
    flush_age: 14
    flush_path: /cache/particl-market/


volumes:
# temporary node_modules volume.
- name: node_modules
  temp: {}

# pipeline describes build steps
#pipeline:
    # every entry in the pipeline describes a single build step
#    build_image:
#        image: node
#        environment:
#            VERSION: "${DRONE_TAG}"
#            COMMIT: "${DRONE_COMMIT_SHA:0:7}"

        # commands executed in the container
#        commands:
#            - ./bin/ci-post.sh "[$CIRCLE_BRANCH] Building $CIRCLE_BUILD_URL" "CircleCI" "$DISCORD_URL"
#            - ./bin/ci-create-build-version.sh
#            - docker login $REGISTRY -u $REGISTRY_USER -p $REGISTRY_PASS
#            - docker build --pull --cache-from "$IMAGE_NAME" --tag "$REGISTRY/$IMAGE_NAME:$CIRCLE_SHA1" -f Dockerfile.ci .
#            - docker push $REGISTRY/$IMAGE_NAME:$CIRCLE_SHA1
