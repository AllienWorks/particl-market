FROM mhart/alpine-node:8.9.0

RUN apk add --no-cache make gcc g++ python git wget rsync
RUN apk add --no-cache fftw-dev --repository https://dl-3.alpinelinux.org/alpine/edge/main/
RUN apk add --no-cache vips-dev --repository https://dl-3.alpinelinux.org/alpine/edge/testing/
RUN npm install -g wait-port
RUN npm install -g -s --no-progress yarn
RUN npm install -g ts-node
RUN npm install -g typescript

RUN mkdir -p /app/data/database
WORKDIR /app/

# install dockerize
RUN wget https://github.com/jwilder/dockerize/releases/download/v0.6.0/dockerize-linux-amd64-v0.6.0.tar.gz \
    && tar -xzvf dockerize-linux-amd64-v0.6.0.tar.gz

COPY package.json /app
COPY yarn.lock /app
COPY . /app/

# setup config files
RUN cp -f .env.ci.app1 /app/.env
RUN cp -f .env.ci.test /app/.env.test
RUN cp -f .env.ci.example /app/.env.blackbox

#RUN yarn install --check-files

#VOLUME /app/data
#VOLUME /app/
#CMD [ "yarn", "serve" ]
#CMD [ "bin/entrypoint.sh" ]

EXPOSE 3000 3100 3200
